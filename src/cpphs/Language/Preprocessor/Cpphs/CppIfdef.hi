interface Language.Preprocessor.Cpphs.CppIfdef where {

{-# NEED #-}
instance Ix.Ix Time.Month;

{-# NEED #-}
instance Ix.Ix Time.Day;

{-# NEED #-}
instance Monad.MonadPlus Text.ParserCombinators.HuttonMeijer.Parser;

{-# NEED #-}
instance Prelude.Bounded Time.Month;

{-# NEED #-}
instance Prelude.Bounded Time.Day;

{-# NEED #-}
instance Prelude.Functor Text.ParserCombinators.HuttonMeijer.Parser;

{-# NEED #-}
instance Prelude.Functor NHC.Internal.IO;

{-# NEED #-}
instance Prelude.Monad Text.ParserCombinators.HuttonMeijer.Parser;

{-# NEED #-}
instance Prelude.Monad NHC.Internal.IO;

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.Fractional (Ratio.Ratio a);

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.RealFrac (Ratio.Ratio a);

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.Num (Ratio.Ratio a);

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.Real (Ratio.Ratio a);

{-# NEED #-}
instance Prelude.Enum DErrNo.ErrNo;

{-# NEED #-}
instance Prelude.Enum Time.Month;

{-# NEED #-}
instance Prelude.Enum Time.Day;

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.Enum (Ratio.Ratio a);

{-# NEED #-}
instance Prelude.Read Directory.Permissions;

{-# NEED #-}
instance Prelude.Read Time.TimeDiff;

{-# NEED #-}
instance Prelude.Read Time.CalendarTime;

{-# NEED #-}
instance Prelude.Read Time.Month;

{-# NEED #-}
instance Prelude.Read Time.Day;

{-# NEED #-}
instance (Prelude.Read a,Prelude.Integral a) => Prelude.Read (Ratio.Ratio a);

{-# NEED #-}
instance Prelude.Ord Directory.Permissions;

{-# NEED #-}
instance Prelude.Ord Locale.TimeLocale;

{-# NEED #-}
instance Prelude.Ord Time.ClockTime;

{-# NEED #-}
instance Prelude.Ord Time.TimeDiff;

{-# NEED #-}
instance Prelude.Ord Time.CalendarTime;

{-# NEED #-}
instance Prelude.Ord Time.Month;

{-# NEED #-}
instance Prelude.Ord Time.Day;

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.Ord (Ratio.Ratio a);

{-# NEED #-}
instance Prelude.Eq Directory.Permissions;

{-# NEED #-}
instance Prelude.Eq DErrNo.ErrNo;

{-# NEED #-}
instance Prelude.Eq Locale.TimeLocale;

{-# NEED #-}
instance Prelude.Eq Time.ClockTime;

{-# NEED #-}
instance Prelude.Eq Time.TimeDiff;

{-# NEED #-}
instance Prelude.Eq Time.CalendarTime;

{-# NEED #-}
instance Prelude.Eq Time.Month;

{-# NEED #-}
instance Prelude.Eq Time.Day;

{-# NEED #-}
instance Prelude.Eq Language.Preprocessor.Cpphs.Options.RawOption;

{-# NEED #-}
instance Prelude.Eq Language.Preprocessor.Cpphs.Position.Posn;

{-# NEED #-}
instance Prelude.Eq Language.Preprocessor.Cpphs.Tokenise.WordStyle;

{-# NEED #-}
instance Prelude.Eq Language.Preprocessor.Cpphs.HashDefine.HashDefine;

{-# NEED #-}
instance Prelude.Eq Language.Preprocessor.Cpphs.HashDefine.ArgOrText;

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.Eq (Ratio.Ratio a);

{-# NEED #-}
instance Prelude.Eq IO.Handle;

{-# NEED #-}
instance Prelude.Show Directory.Permissions;

{-# NEED #-}
instance Prelude.Show DErrNo.ErrNo;

{-# NEED #-}
instance Prelude.Show Locale.TimeLocale;

{-# NEED #-}
instance Prelude.Show Time.ClockTime;

{-# NEED #-}
instance Prelude.Show Time.TimeDiff;

{-# NEED #-}
instance Prelude.Show Time.CalendarTime;

{-# NEED #-}
instance Prelude.Show Time.Month;

{-# NEED #-}
instance Prelude.Show Time.Day;

{-# NEED #-}
instance Prelude.Show Language.Preprocessor.Cpphs.Options.RawOption;

{-# NEED #-}
instance Prelude.Show Language.Preprocessor.Cpphs.Position.Posn;

{-# NEED #-}
instance Prelude.Show Language.Preprocessor.Cpphs.Tokenise.WordStyle;

{-# NEED #-}
instance Prelude.Show Language.Preprocessor.Cpphs.HashDefine.HashDefine;

{-# NEED #-}
instance Prelude.Show Language.Preprocessor.Cpphs.HashDefine.ArgOrText;

{-# NEED #-}
instance (Prelude.Show a) => Prelude.Show (Language.Preprocessor.Cpphs.SymTab.IndTree a);

{-# NEED #-}
instance (Prelude.Integral a) => Prelude.Show (Ratio.Ratio a);

{-# NEED #-}
instance (Prelude.Show a) => Prelude.Show (NHC.Internal.IO a);

{-# NEED #-}
instance Prelude.Show IO.Handle;
interface Text.ParserCombinators.HuttonMeijer
{-# NEED Parser #-}
newtype {-#  #-} Parser a;

{-# NEED Token #-}
type {-# 1 #-} Token = Prelude.Char;
interface Directory
{-# NEED Permissions #-}
data Permissions;
interface DErrNo
{-# NEED ErrNo #-}
data ErrNo;
interface Locale
{-# NEED TimeLocale #-}
data TimeLocale;
interface Time
{-# NEED ClockTime #-}
data ClockTime;

{-# NEED TimeDiff #-}
data TimeDiff;

{-# NEED CalendarTime #-}
data CalendarTime;

{-# NEED Month #-}
data Month;

{-# NEED Day #-}
data Day;
interface Language.Preprocessor.Cpphs.Options
{-# NEED RawOption #-}
data RawOption;
interface Language.Preprocessor.Cpphs.Tokenise
{-# NEED WordStyle #-}
data WordStyle;
interface Language.Preprocessor.Cpphs.HashDefine
{-# NEED HashDefine #-}
data HashDefine;

{-# NEED ArgOrText #-}
data ArgOrText;
interface Language.Preprocessor.Cpphs.SymTab
{-# NEED IndTree #-}
data IndTree a;
interface Ratio
{-# NEED Ratio #-}
data Ratio a;
interface ! Language.Preprocessor.Cpphs.CppIfdef
{-# NEED cppIfdef #-}
cppIfdef{-# 4 #-}::(Prelude.FilePath -> ([(Prelude.String,Prelude.String)] -> ([Prelude.String] -> (Language.Preprocessor.Cpphs.Options.BoolOptions -> (Prelude.String -> (NHC.Internal.IO [(Language.Preprocessor.Cpphs.Position.Posn,Prelude.String)]))))));
interface Language.Preprocessor.Cpphs.Position
{-# NEED Posn #-}
data Posn;
interface NHC.Internal
{-# NEED IO #-}
newtype {-#  #-} IO a;
interface NHC.DErrNo
{-# NEED ErrNo #-}
data ErrNo;
interface IO
{-# NEED Handle #-}
newtype {-#  #-} Handle;
interface NHC.Internal
{-# NEED World #-}
data World;
interface Language.Preprocessor.Cpphs.Options
{-# NEED BoolOptions #-}
data BoolOptions;
}
