#include "newmacros.h"
#include "runtime.h"

#define FN_Case_46forceOrder	((void*)startLabel+12)
#define CT_v3579	((void*)startLabel+52)
#define F0_Case_46forceOrder	((void*)startLabel+60)
#define FN_LAMBDA3442	((void*)startLabel+108)
#define CT_v3580	((void*)startLabel+136)
#define F0_LAMBDA3442	((void*)startLabel+144)
#define FN_Case_46oneSel	((void*)startLabel+168)
#define CT_v3587	((void*)startLabel+208)
#define F0_Case_46oneSel	((void*)startLabel+216)
#define FN_LAMBDA3443	((void*)startLabel+252)
#define CT_v3588	((void*)startLabel+380)
#define F0_LAMBDA3443	((void*)startLabel+388)
#define FN_Case_46caseNoMatch	((void*)startLabel+436)
#define CT_v3592	((void*)startLabel+536)
#define F0_Case_46caseNoMatch	((void*)startLabel+544)
#define FN_LAMBDA3445	((void*)startLabel+576)
#define CT_v3594	((void*)startLabel+596)
#define CF_LAMBDA3445	((void*)startLabel+604)
#define FN_LAMBDA3444	((void*)startLabel+616)
#define CT_v3596	((void*)startLabel+636)
#define CF_LAMBDA3444	((void*)startLabel+644)
#define FN_Case_46caseDecls	((void*)startLabel+660)
#define v3601	((void*)startLabel+670)
#define v3600	((void*)startLabel+674)
#define v3597	((void*)startLabel+682)
#define CT_v3602	((void*)startLabel+696)
#define F0_Case_46caseDecls	((void*)startLabel+704)
#define FN_LAMBDA3446	((void*)startLabel+728)
#define CT_v3604	((void*)startLabel+748)
#define CF_LAMBDA3446	((void*)startLabel+756)
#define FN_Case_46caseDepends	((void*)startLabel+772)
#define v3606	((void*)startLabel+782)
#define v3607	((void*)startLabel+785)
#define v3609	((void*)startLabel+800)
#define v3610	((void*)startLabel+828)
#define CT_v3613	((void*)startLabel+872)
#define F0_Case_46caseDepends	((void*)startLabel+880)
#define FN_LAMBDA3448	((void*)startLabel+936)
#define CT_v3614	((void*)startLabel+964)
#define F0_LAMBDA3448	((void*)startLabel+972)
#define FN_LAMBDA3447	((void*)startLabel+992)
#define CT_v3615	((void*)startLabel+1020)
#define F0_LAMBDA3447	((void*)startLabel+1028)
#define FN_Case_46caseDecl	((void*)startLabel+1044)
#define v3626	((void*)startLabel+1086)
#define v3619	((void*)startLabel+1090)
#define v3620	((void*)startLabel+1114)
#define v3621	((void*)startLabel+1147)
#define v3622	((void*)startLabel+1181)
#define v3625	((void*)startLabel+1196)
#define v3616	((void*)startLabel+1232)
#define CT_v3628	((void*)startLabel+1272)
#define F0_Case_46caseDecl	((void*)startLabel+1280)
#define FN_LAMBDA3450	((void*)startLabel+1332)
#define CT_v3630	((void*)startLabel+1352)
#define CF_LAMBDA3450	((void*)startLabel+1360)
#define FN_LAMBDA3449	((void*)startLabel+1376)
#define CT_v3631	((void*)startLabel+1400)
#define F0_LAMBDA3449	((void*)startLabel+1408)
#define FN_Case_46caseDeclPatAs	((void*)startLabel+1424)
#define v3636	((void*)startLabel+1486)
#define v3635	((void*)startLabel+1490)
#define v3632	((void*)startLabel+1507)
#define CT_v3637	((void*)startLabel+1528)
#define F0_Case_46caseDeclPatAs	((void*)startLabel+1536)
#define FN_LAMBDA3456	((void*)startLabel+1572)
#define CT_v3638	((void*)startLabel+1592)
#define F0_LAMBDA3456	((void*)startLabel+1600)
#define FN_LAMBDA3455	((void*)startLabel+1632)
#define CT_v3639	((void*)startLabel+1728)
#define F0_LAMBDA3455	((void*)startLabel+1736)
#define FN_LAMBDA3454	((void*)startLabel+1804)
#define CT_v3640	((void*)startLabel+1828)
#define F0_LAMBDA3454	((void*)startLabel+1836)
#define FN_LAMBDA3453	((void*)startLabel+1872)
#define CT_v3641	((void*)startLabel+2000)
#define F0_LAMBDA3453	((void*)startLabel+2008)
#define FN_LAMBDA3452	((void*)startLabel+2084)
#define CT_v3642	((void*)startLabel+2128)
#define F0_LAMBDA3452	((void*)startLabel+2136)
#define FN_LAMBDA3451	((void*)startLabel+2172)
#define CT_v3643	((void*)startLabel+2228)
#define F0_LAMBDA3451	((void*)startLabel+2236)
#define FN_Case_46caseDeclPatFix	((void*)startLabel+2260)
#define CT_v3647	((void*)startLabel+2292)
#define F0_Case_46caseDeclPatFix	((void*)startLabel+2300)
#define FN_LAMBDA3466	((void*)startLabel+2336)
#define v3649	((void*)startLabel+2348)
#define v3650	((void*)startLabel+2379)
#define CT_v3652	((void*)startLabel+2412)
#define F0_LAMBDA3466	((void*)startLabel+2420)
#define FN_LAMBDA3465	((void*)startLabel+2468)
#define CT_v3653	((void*)startLabel+2512)
#define F0_LAMBDA3465	((void*)startLabel+2520)
#define FN_LAMBDA3464	((void*)startLabel+2556)
#define CT_v3654	((void*)startLabel+2636)
#define F0_LAMBDA3464	((void*)startLabel+2644)
#define FN_LAMBDA3463	((void*)startLabel+2716)
#define CT_v3655	((void*)startLabel+2772)
#define F0_LAMBDA3463	((void*)startLabel+2780)
#define FN_LAMBDA3462	((void*)startLabel+2796)
#define v3665	((void*)startLabel+2812)
#define v3663	((void*)startLabel+2816)
#define v3660	((void*)startLabel+2825)
#define v3656	((void*)startLabel+2830)
#define CT_v3666	((void*)startLabel+2852)
#define F0_LAMBDA3462	((void*)startLabel+2860)
#define FN_LAMBDA3461	((void*)startLabel+2880)
#define CT_v3668	((void*)startLabel+2900)
#define CF_LAMBDA3461	((void*)startLabel+2908)
#define FN_LAMBDA3460	((void*)startLabel+2932)
#define CT_v3669	((void*)startLabel+3016)
#define F0_LAMBDA3460	((void*)startLabel+3024)
#define FN_LAMBDA3459	((void*)startLabel+3072)
#define CT_v3670	((void*)startLabel+3132)
#define F0_LAMBDA3459	((void*)startLabel+3140)
#define FN_LAMBDA3458	((void*)startLabel+3188)
#define CT_v3671	((void*)startLabel+3244)
#define F0_LAMBDA3458	((void*)startLabel+3252)
#define FN_LAMBDA3457	((void*)startLabel+3272)
#define CT_v3672	((void*)startLabel+3296)
#define F0_LAMBDA3457	((void*)startLabel+3304)
#define FN_Case_46onePat	((void*)startLabel+3324)
#define CT_v3673	((void*)startLabel+3344)
#define F0_Case_46onePat	((void*)startLabel+3352)
#define FN_LAMBDA3473	((void*)startLabel+3384)
#define v3678	((void*)startLabel+3448)
#define v3677	((void*)startLabel+3452)
#define v3674	((void*)startLabel+3486)
#define CT_v3679	((void*)startLabel+3500)
#define F0_LAMBDA3473	((void*)startLabel+3508)
#define FN_LAMBDA3472	((void*)startLabel+3552)
#define CT_v3681	((void*)startLabel+3572)
#define CF_LAMBDA3472	((void*)startLabel+3580)
#define FN_LAMBDA3471	((void*)startLabel+3604)
#define CT_v3682	((void*)startLabel+3632)
#define F0_LAMBDA3471	((void*)startLabel+3640)
#define FN_LAMBDA3470	((void*)startLabel+3672)
#define v3684	((void*)startLabel+3682)
#define v3685	((void*)startLabel+3688)
#define CT_v3687	((void*)startLabel+3728)
#define F0_LAMBDA3470	((void*)startLabel+3736)
#define FN_LAMBDA3469	((void*)startLabel+3784)
#define CT_v3688	((void*)startLabel+3864)
#define F0_LAMBDA3469	((void*)startLabel+3872)
#define FN_LAMBDA3468	((void*)startLabel+3888)
#define CT_v3690	((void*)startLabel+3908)
#define CF_LAMBDA3468	((void*)startLabel+3916)
#define FN_LAMBDA3467	((void*)startLabel+3928)
#define CT_v3692	((void*)startLabel+3948)
#define CF_LAMBDA3467	((void*)startLabel+3956)
#define FN_Case_46caseExp	((void*)startLabel+3968)
#define v3717	((void*)startLabel+4030)
#define v3696	((void*)startLabel+4034)
#define v3697	((void*)startLabel+4047)
#define v3698	((void*)startLabel+4057)
#define v3699	((void*)startLabel+4068)
#define v3700	((void*)startLabel+4084)
#define v3701	((void*)startLabel+4093)
#define v3702	((void*)startLabel+4130)
#define v3703	((void*)startLabel+4148)
#define v3704	((void*)startLabel+4156)
#define v3705	((void*)startLabel+4169)
#define v3707	((void*)startLabel+4190)
#define v3708	((void*)startLabel+4201)
#define v3709	((void*)startLabel+4214)
#define v3710	((void*)startLabel+4226)
#define v3711	((void*)startLabel+4238)
#define v3712	((void*)startLabel+4250)
#define v3713	((void*)startLabel+4262)
#define v3714	((void*)startLabel+4278)
#define v3715	((void*)startLabel+4302)
#define v3716	((void*)startLabel+4307)
#define v3693	((void*)startLabel+4329)
#define CT_v3719	((void*)startLabel+4388)
#define F0_Case_46caseExp	((void*)startLabel+4396)
#define FN_LAMBDA3481	((void*)startLabel+4516)
#define CT_v3721	((void*)startLabel+4536)
#define CF_LAMBDA3481	((void*)startLabel+4544)
#define FN_LAMBDA3480	((void*)startLabel+4556)
#define CT_v3723	((void*)startLabel+4576)
#define CF_LAMBDA3480	((void*)startLabel+4584)
#define FN_LAMBDA3479	((void*)startLabel+4600)
#define CT_v3724	((void*)startLabel+4624)
#define F0_LAMBDA3479	((void*)startLabel+4632)
#define FN_LAMBDA3478	((void*)startLabel+4648)
#define CT_v3725	((void*)startLabel+4720)
#define F0_LAMBDA3478	((void*)startLabel+4728)
#define FN_LAMBDA3477	((void*)startLabel+4760)
#define CT_v3726	((void*)startLabel+4784)
#define F0_LAMBDA3477	((void*)startLabel+4792)
#define FN_LAMBDA3476	((void*)startLabel+4816)
#define CT_v3727	((void*)startLabel+4848)
#define F0_LAMBDA3476	((void*)startLabel+4856)
#define FN_LAMBDA3475	((void*)startLabel+4872)
#define CT_v3728	((void*)startLabel+4888)
#define F0_LAMBDA3475	((void*)startLabel+4896)
#define FN_LAMBDA3474	((void*)startLabel+4912)
#define CT_v3729	((void*)startLabel+4936)
#define F0_LAMBDA3474	((void*)startLabel+4944)
#define FN_Case_46matchFun	((void*)startLabel+4964)
#define v3736	((void*)startLabel+4976)
#define v3733	((void*)startLabel+4980)
#define v3730	((void*)startLabel+5006)
#define CT_v3738	((void*)startLabel+5020)
#define F0_Case_46matchFun	((void*)startLabel+5028)
#define FN_LAMBDA3488	((void*)startLabel+5060)
#define CT_v3740	((void*)startLabel+5080)
#define CF_LAMBDA3488	((void*)startLabel+5088)
#define FN_LAMBDA3487	((void*)startLabel+5104)
#define CT_v3741	((void*)startLabel+5140)
#define F0_LAMBDA3487	((void*)startLabel+5148)
#define FN_LAMBDA3486	((void*)startLabel+5192)
#define CT_v3742	((void*)startLabel+5244)
#define F0_LAMBDA3486	((void*)startLabel+5252)
#define FN_LAMBDA3485	((void*)startLabel+5300)
#define CT_v3743	((void*)startLabel+5336)
#define F0_LAMBDA3485	((void*)startLabel+5344)
#define FN_LAMBDA3484	((void*)startLabel+5364)
#define CT_v3744	((void*)startLabel+5388)
#define F0_LAMBDA3484	((void*)startLabel+5396)
#define FN_LAMBDA3483	((void*)startLabel+5412)
#define CT_v3748	((void*)startLabel+5448)
#define F0_LAMBDA3483	((void*)startLabel+5456)
#define FN_LAMBDA3482	((void*)startLabel+5476)
#define CT_v3750	((void*)startLabel+5496)
#define CF_LAMBDA3482	((void*)startLabel+5504)
#define FN_Case_46matchLambda	((void*)startLabel+5520)
#define v3751	((void*)startLabel+5554)
#define CT_v3753	((void*)startLabel+5580)
#define F0_Case_46matchLambda	((void*)startLabel+5588)
#define FN_LAMBDA3497	((void*)startLabel+5644)
#define CT_v3754	((void*)startLabel+5684)
#define F0_LAMBDA3497	((void*)startLabel+5692)
#define FN_LAMBDA3496	((void*)startLabel+5736)
#define CT_v3755	((void*)startLabel+5836)
#define F0_LAMBDA3496	((void*)startLabel+5844)
#define FN_LAMBDA3495	((void*)startLabel+5892)
#define CT_v3756	((void*)startLabel+5928)
#define F0_LAMBDA3495	((void*)startLabel+5936)
#define FN_LAMBDA3494	((void*)startLabel+5956)
#define CT_v3757	((void*)startLabel+5980)
#define F0_LAMBDA3494	((void*)startLabel+5988)
#define FN_LAMBDA3493	((void*)startLabel+6004)
#define CT_v3761	((void*)startLabel+6040)
#define F0_LAMBDA3493	((void*)startLabel+6048)
#define FN_LAMBDA3492	((void*)startLabel+6068)
#define CT_v3763	((void*)startLabel+6088)
#define CF_LAMBDA3492	((void*)startLabel+6096)
#define FN_LAMBDA3491	((void*)startLabel+6112)
#define CT_v3764	((void*)startLabel+6152)
#define F0_LAMBDA3491	((void*)startLabel+6160)
#define FN_LAMBDA3490	((void*)startLabel+6180)
#define v3769	((void*)startLabel+6242)
#define v3768	((void*)startLabel+6246)
#define v3765	((void*)startLabel+6254)
#define CT_v3770	((void*)startLabel+6276)
#define F0_LAMBDA3490	((void*)startLabel+6284)
#define FN_LAMBDA3489	((void*)startLabel+6304)
#define CT_v3772	((void*)startLabel+6324)
#define CF_LAMBDA3489	((void*)startLabel+6332)
#define FN_Case_46matchCase	((void*)startLabel+6348)
#define CT_v3773	((void*)startLabel+6384)
#define F0_Case_46matchCase	((void*)startLabel+6392)
#define FN_LAMBDA3499	((void*)startLabel+6432)
#define CT_v3774	((void*)startLabel+6468)
#define F0_LAMBDA3499	((void*)startLabel+6476)
#define FN_LAMBDA3498	((void*)startLabel+6500)
#define CT_v3776	((void*)startLabel+6520)
#define CF_LAMBDA3498	((void*)startLabel+6528)
#define FN_Case_46fixFuns	((void*)startLabel+6544)
#define v3787	((void*)startLabel+6554)
#define v3780	((void*)startLabel+6558)
#define v3789	((void*)startLabel+6578)
#define v3786	((void*)startLabel+6582)
#define v3783	((void*)startLabel+6596)
#define v3777	((void*)startLabel+6627)
#define CT_v3790	((void*)startLabel+6648)
#define F0_Case_46fixFuns	((void*)startLabel+6656)
#define FN_LAMBDA3502	((void*)startLabel+6696)
#define CT_v3792	((void*)startLabel+6716)
#define CF_LAMBDA3502	((void*)startLabel+6724)
#define FN_LAMBDA3501	((void*)startLabel+6744)
#define CT_v3793	((void*)startLabel+6768)
#define F0_LAMBDA3501	((void*)startLabel+6776)
#define FN_LAMBDA3500	((void*)startLabel+6804)
#define CT_v3794	((void*)startLabel+6816)
#define F0_LAMBDA3500	((void*)startLabel+6824)
#define FN_Case_46fixRhs	((void*)startLabel+6844)
#define v3796	((void*)startLabel+6854)
#define v3797	((void*)startLabel+6865)
#define CT_v3799	((void*)startLabel+6884)
#define F0_Case_46fixRhs	((void*)startLabel+6892)
#define FN_Case_46fixPatGdExp	((void*)startLabel+6924)
#define v3801	((void*)startLabel+6934)
#define v3802	((void*)startLabel+6937)
#define CT_v3807	((void*)startLabel+6968)
#define F0_Case_46fixPatGdExp	((void*)startLabel+6976)
#define FN_Case_46fixQuals	((void*)startLabel+7000)
#define v3809	((void*)startLabel+7010)
#define v3810	((void*)startLabel+7016)
#define v3812	((void*)startLabel+7032)
#define v3813	((void*)startLabel+7096)
#define v3829	((void*)startLabel+7160)
#define v3817	((void*)startLabel+7164)
#define v3830	((void*)startLabel+7176)
#define v3821	((void*)startLabel+7180)
#define v3831	((void*)startLabel+7192)
#define v3825	((void*)startLabel+7196)
#define v3822	((void*)startLabel+7215)
#define v3818	((void*)startLabel+7220)
#define v3814	((void*)startLabel+7225)
#define v3826	((void*)startLabel+7260)
#define CT_v3832	((void*)startLabel+7304)
#define F0_Case_46fixQuals	((void*)startLabel+7312)
#define FN_LAMBDA3507	((void*)startLabel+7364)
#define CT_v3833	((void*)startLabel+7392)
#define F0_LAMBDA3507	((void*)startLabel+7400)
#define FN_LAMBDA3506	((void*)startLabel+7424)
#define CT_v3834	((void*)startLabel+7492)
#define F0_LAMBDA3506	((void*)startLabel+7500)
#define FN_LAMBDA3505	((void*)startLabel+7544)
#define CT_v3835	((void*)startLabel+7568)
#define F0_LAMBDA3505	((void*)startLabel+7576)
#define FN_LAMBDA3504	((void*)startLabel+7608)
#define CT_v3836	((void*)startLabel+7688)
#define F0_LAMBDA3504	((void*)startLabel+7696)
#define FN_LAMBDA3503	((void*)startLabel+7716)
#define CT_v3837	((void*)startLabel+7740)
#define F0_LAMBDA3503	((void*)startLabel+7748)
#define FN_Case_46match	((void*)startLabel+7764)
#define v3842	((void*)startLabel+7774)
#define v3841	((void*)startLabel+7778)
#define v3838	((void*)startLabel+7789)
#define CT_v3843	((void*)startLabel+7808)
#define F0_Case_46match	((void*)startLabel+7816)
#define FN_LAMBDA3514	((void*)startLabel+7856)
#define CT_v3844	((void*)startLabel+7876)
#define F0_LAMBDA3514	((void*)startLabel+7884)
#define FN_LAMBDA3513	((void*)startLabel+7916)
#define v3848	((void*)startLabel+7938)
#define v3849	((void*)startLabel+7941)
#define v3865	((void*)startLabel+7952)
#define v3853	((void*)startLabel+7956)
#define v3850	((void*)startLabel+7965)
#define v3845	((void*)startLabel+7970)
#define v3866	((void*)startLabel+7980)
#define v3857	((void*)startLabel+7984)
#define v3867	((void*)startLabel+8028)
#define v3861	((void*)startLabel+8032)
#define v3858	((void*)startLabel+8043)
#define v3862	((void*)startLabel+8075)
#define v3854	((void*)startLabel+8084)
#define CT_v3868	((void*)startLabel+8100)
#define F0_LAMBDA3513	((void*)startLabel+8108)
#define FN_LAMBDA3512	((void*)startLabel+8160)
#define CT_v3870	((void*)startLabel+8180)
#define CF_LAMBDA3512	((void*)startLabel+8188)
#define FN_LAMBDA3511	((void*)startLabel+8208)
#define CT_v3871	((void*)startLabel+8268)
#define F0_LAMBDA3511	((void*)startLabel+8276)
#define FN_LAMBDA3510	((void*)startLabel+8320)
#define CT_v3872	((void*)startLabel+8400)
#define F0_LAMBDA3510	((void*)startLabel+8408)
#define FN_LAMBDA3509	((void*)startLabel+8428)
#define v3877	((void*)startLabel+8490)
#define v3876	((void*)startLabel+8494)
#define v3873	((void*)startLabel+8502)
#define CT_v3878	((void*)startLabel+8516)
#define F0_LAMBDA3509	((void*)startLabel+8524)
#define FN_LAMBDA3508	((void*)startLabel+8548)
#define CT_v3880	((void*)startLabel+8568)
#define CF_LAMBDA3508	((void*)startLabel+8576)
#define FN_Case_46matchMany	((void*)startLabel+8592)
#define v3882	((void*)startLabel+8602)
#define v3883	((void*)startLabel+8605)
#define CT_v3885	((void*)startLabel+8628)
#define F0_Case_46matchMany	((void*)startLabel+8636)
#define FN_Case_46matchOne	((void*)startLabel+8660)
#define v3901	((void*)startLabel+8670)
#define v3889	((void*)startLabel+8674)
#define v3891	((void*)startLabel+8694)
#define v3894	((void*)startLabel+8737)
#define v3895	((void*)startLabel+8773)
#define v3896	((void*)startLabel+8810)
#define v3897	((void*)startLabel+8830)
#define v3898	((void*)startLabel+8850)
#define v3886	((void*)startLabel+8881)
#define CT_v3905	((void*)startLabel+8896)
#define F0_Case_46matchOne	((void*)startLabel+8904)
#define FN_LAMBDA3541	((void*)startLabel+8984)
#define CT_v3907	((void*)startLabel+9004)
#define CF_LAMBDA3541	((void*)startLabel+9012)
#define FN_LAMBDA3540	((void*)startLabel+9032)
#define CT_v3911	((void*)startLabel+9072)
#define F0_LAMBDA3540	((void*)startLabel+9080)
#define FN_LAMBDA3539	((void*)startLabel+9120)
#define v3916	((void*)startLabel+9188)
#define v3915	((void*)startLabel+9192)
#define v3912	((void*)startLabel+9232)
#define CT_v3917	((void*)startLabel+9248)
#define F0_LAMBDA3539	((void*)startLabel+9256)
#define FN_LAMBDA3538	((void*)startLabel+9304)
#define CT_v3919	((void*)startLabel+9324)
#define CF_LAMBDA3538	((void*)startLabel+9332)
#define FN_LAMBDA3537	((void*)startLabel+9360)
#define CT_v3920	((void*)startLabel+9388)
#define F0_LAMBDA3537	((void*)startLabel+9396)
#define FN_LAMBDA3536	((void*)startLabel+9440)
#define CT_v3921	((void*)startLabel+9468)
#define F0_LAMBDA3536	((void*)startLabel+9476)
#define FN_LAMBDA3535	((void*)startLabel+9520)
#define CT_v3922	((void*)startLabel+9652)
#define F0_LAMBDA3535	((void*)startLabel+9660)
#define FN_LAMBDA3534	((void*)startLabel+9760)
#define CT_v3923	((void*)startLabel+9880)
#define F0_LAMBDA3534	((void*)startLabel+9888)
#define FN_LAMBDA3533	((void*)startLabel+9944)
#define CT_v3924	((void*)startLabel+9996)
#define F0_LAMBDA3533	((void*)startLabel+10004)
#define FN_LAMBDA3532	((void*)startLabel+10044)
#define CT_v3925	((void*)startLabel+10124)
#define F0_LAMBDA3532	((void*)startLabel+10132)
#define FN_LAMBDA3531	((void*)startLabel+10152)
#define CT_v3926	((void*)startLabel+10176)
#define F0_LAMBDA3531	((void*)startLabel+10184)
#define FN_LAMBDA3530	((void*)startLabel+10204)
#define CT_v3930	((void*)startLabel+10268)
#define F0_LAMBDA3530	((void*)startLabel+10276)
#define FN_LAMBDA3529	((void*)startLabel+10336)
#define CT_v3931	((void*)startLabel+10356)
#define F0_LAMBDA3529	((void*)startLabel+10364)
#define FN_LAMBDA3528	((void*)startLabel+10388)
#define CT_v3932	((void*)startLabel+10416)
#define F0_LAMBDA3528	((void*)startLabel+10424)
#define FN_LAMBDA3527	((void*)startLabel+10456)
#define CT_v3933	((void*)startLabel+10484)
#define F0_LAMBDA3527	((void*)startLabel+10492)
#define FN_LAMBDA3526	((void*)startLabel+10512)
#define CT_v3937	((void*)startLabel+10576)
#define F0_LAMBDA3526	((void*)startLabel+10584)
#define FN_LAMBDA3525	((void*)startLabel+10644)
#define CT_v3938	((void*)startLabel+10664)
#define F0_LAMBDA3525	((void*)startLabel+10672)
#define FN_LAMBDA3524	((void*)startLabel+10696)
#define CT_v3939	((void*)startLabel+10724)
#define F0_LAMBDA3524	((void*)startLabel+10732)
#define FN_LAMBDA3523	((void*)startLabel+10764)
#define CT_v3940	((void*)startLabel+10792)
#define F0_LAMBDA3523	((void*)startLabel+10800)
#define FN_LAMBDA3522	((void*)startLabel+10820)
#define CT_v3944	((void*)startLabel+10872)
#define F0_LAMBDA3522	((void*)startLabel+10880)
#define FN_LAMBDA3521	((void*)startLabel+10928)
#define CT_v3945	((void*)startLabel+10948)
#define F0_LAMBDA3521	((void*)startLabel+10956)
#define FN_LAMBDA3520	((void*)startLabel+10984)
#define CT_v3946	((void*)startLabel+11020)
#define F0_LAMBDA3520	((void*)startLabel+11028)
#define FN_LAMBDA3519	((void*)startLabel+11060)
#define CT_v3950	((void*)startLabel+11112)
#define F0_LAMBDA3519	((void*)startLabel+11120)
#define FN_LAMBDA3518	((void*)startLabel+11168)
#define CT_v3951	((void*)startLabel+11188)
#define F0_LAMBDA3518	((void*)startLabel+11196)
#define FN_LAMBDA3517	((void*)startLabel+11224)
#define CT_v3952	((void*)startLabel+11260)
#define F0_LAMBDA3517	((void*)startLabel+11268)
#define FN_LAMBDA3516	((void*)startLabel+11300)
#define CT_v3956	((void*)startLabel+11340)
#define F0_LAMBDA3516	((void*)startLabel+11348)
#define FN_LAMBDA3515	((void*)startLabel+11384)
#define CT_v3957	((void*)startLabel+11400)
#define F0_LAMBDA3515	((void*)startLabel+11408)
#define FN_Case_46matchAltIf	((void*)startLabel+11432)
#define v3992	((void*)startLabel+11500)
#define v3965	((void*)startLabel+11504)
#define v3993	((void*)startLabel+11516)
#define v3969	((void*)startLabel+11520)
#define v3994	((void*)startLabel+11532)
#define v3973	((void*)startLabel+11536)
#define v3995	((void*)startLabel+11548)
#define v3977	((void*)startLabel+11552)
#define v3996	((void*)startLabel+11564)
#define v3981	((void*)startLabel+11568)
#define v3978	((void*)startLabel+11587)
#define v3974	((void*)startLabel+11592)
#define v3970	((void*)startLabel+11597)
#define v3966	((void*)startLabel+11602)
#define v3982	((void*)startLabel+11607)
#define v3997	((void*)startLabel+11628)
#define v3986	((void*)startLabel+11632)
#define v3987	((void*)startLabel+11651)
#define v3988	((void*)startLabel+11715)
#define v3989	((void*)startLabel+11734)
#define v3983	((void*)startLabel+11753)
#define v3990	((void*)startLabel+11758)
#define v3962	((void*)startLabel+11774)
#define v3958	((void*)startLabel+11779)
#define CT_v3998	((void*)startLabel+11828)
#define F0_Case_46matchAltIf	((void*)startLabel+11836)
#define FN_LAMBDA3553	((void*)startLabel+11948)
#define CT_v4000	((void*)startLabel+11968)
#define CF_LAMBDA3553	((void*)startLabel+11976)
#define FN_LAMBDA3552	((void*)startLabel+11988)
#define CT_v4002	((void*)startLabel+12008)
#define CF_LAMBDA3552	((void*)startLabel+12016)
#define FN_LAMBDA3551	((void*)startLabel+12040)
#define CT_v4003	((void*)startLabel+12060)
#define F0_LAMBDA3551	((void*)startLabel+12068)
#define FN_LAMBDA3550	((void*)startLabel+12096)
#define CT_v4004	((void*)startLabel+12116)
#define F0_LAMBDA3550	((void*)startLabel+12124)
#define FN_LAMBDA3549	((void*)startLabel+12152)
#define CT_v4005	((void*)startLabel+12172)
#define F0_LAMBDA3549	((void*)startLabel+12180)
#define FN_LAMBDA3548	((void*)startLabel+12196)
#define CT_v4007	((void*)startLabel+12216)
#define CF_LAMBDA3548	((void*)startLabel+12224)
#define FN_LAMBDA3547	((void*)startLabel+12236)
#define CT_v4009	((void*)startLabel+12256)
#define CF_LAMBDA3547	((void*)startLabel+12264)
#define FN_LAMBDA3546	((void*)startLabel+12276)
#define CT_v4010	((void*)startLabel+12296)
#define CF_LAMBDA3546	((void*)startLabel+12304)
#define FN_LAMBDA3545	((void*)startLabel+12316)
#define CT_v4012	((void*)startLabel+12336)
#define CF_LAMBDA3545	((void*)startLabel+12344)
#define FN_LAMBDA3544	((void*)startLabel+12368)
#define CT_v4013	((void*)startLabel+12388)
#define F0_LAMBDA3544	((void*)startLabel+12396)
#define FN_LAMBDA3543	((void*)startLabel+12424)
#define CT_v4014	((void*)startLabel+12544)
#define F0_LAMBDA3543	((void*)startLabel+12552)
#define FN_LAMBDA3542	((void*)startLabel+12596)
#define CT_v4015	((void*)startLabel+12628)
#define F0_LAMBDA3542	((void*)startLabel+12636)
#define FN_Case_46mkIfLit	((void*)startLabel+12660)
#define CT_v4016	((void*)startLabel+12776)
#define F0_Case_46mkIfLit	((void*)startLabel+12784)
#define FN_LAMBDA3554	((void*)startLabel+12824)
#define CT_v4017	((void*)startLabel+12856)
#define F0_LAMBDA3554	((void*)startLabel+12864)
#define FN_Case_46matchAltCon	((void*)startLabel+12880)
#define CT_v4021	((void*)startLabel+12916)
#define F0_Case_46matchAltCon	((void*)startLabel+12924)
#define FN_LAMBDA3557	((void*)startLabel+12964)
#define CT_v4022	((void*)startLabel+13028)
#define F0_LAMBDA3557	((void*)startLabel+13036)
#define FN_LAMBDA3556	((void*)startLabel+13088)
#define CT_v4023	((void*)startLabel+13116)
#define F0_LAMBDA3556	((void*)startLabel+13124)
#define FN_LAMBDA3555	((void*)startLabel+13148)
#define CT_v4024	((void*)startLabel+13172)
#define F0_LAMBDA3555	((void*)startLabel+13180)
#define FN_Case_46matchAltInt	((void*)startLabel+13196)
#define CT_v4028	((void*)startLabel+13240)
#define F0_Case_46matchAltInt	((void*)startLabel+13248)
#define FN_LAMBDA3558	((void*)startLabel+13280)
#define CT_v4029	((void*)startLabel+13308)
#define F0_LAMBDA3558	((void*)startLabel+13316)
#define FN_Case_46matchNK	((void*)startLabel+13340)
#define v4039	((void*)startLabel+13408)
#define v4037	((void*)startLabel+13412)
#define v4034	((void*)startLabel+13452)
#define v4030	((void*)startLabel+13457)
#define CT_v4040	((void*)startLabel+13488)
#define F0_Case_46matchNK	((void*)startLabel+13496)
#define FN_LAMBDA3563	((void*)startLabel+13532)
#define CT_v4042	((void*)startLabel+13552)
#define CF_LAMBDA3563	((void*)startLabel+13560)
#define FN_LAMBDA3562	((void*)startLabel+13584)
#define CT_v4043	((void*)startLabel+13684)
#define F0_LAMBDA3562	((void*)startLabel+13692)
#define FN_LAMBDA3561	((void*)startLabel+13728)
#define CT_v4044	((void*)startLabel+13756)
#define F0_LAMBDA3561	((void*)startLabel+13764)
#define FN_LAMBDA3560	((void*)startLabel+13800)
#define CT_v4045	((void*)startLabel+13884)
#define F0_LAMBDA3560	((void*)startLabel+13892)
#define FN_LAMBDA3559	((void*)startLabel+13924)
#define CT_v4046	((void*)startLabel+13988)
#define F0_LAMBDA3559	((void*)startLabel+13996)
#define FN_Case_46caseCode	((void*)startLabel+14012)
#define v4048	((void*)startLabel+14022)
#define v4049	((void*)startLabel+14034)
#define CT_v4051	((void*)startLabel+14060)
#define F0_Case_46caseCode	((void*)startLabel+14068)
#define FN_LAMBDA3576	((void*)startLabel+14108)
#define CT_v4052	((void*)startLabel+14136)
#define F0_LAMBDA3576	((void*)startLabel+14144)
#define FN_LAMBDA3575	((void*)startLabel+14180)
#define CT_v4053	((void*)startLabel+14220)
#define F0_LAMBDA3575	((void*)startLabel+14228)
#define FN_LAMBDA3574	((void*)startLabel+14272)
#define CT_v4054	((void*)startLabel+14380)
#define F0_LAMBDA3574	((void*)startLabel+14388)
#define FN_LAMBDA3573	((void*)startLabel+14460)
#define CT_v4055	((void*)startLabel+14524)
#define F0_LAMBDA3573	((void*)startLabel+14532)
#define FN_LAMBDA3572	((void*)startLabel+14556)
#define CT_v4056	((void*)startLabel+14580)
#define F0_LAMBDA3572	((void*)startLabel+14588)
#define FN_LAMBDA3571	((void*)startLabel+14608)
#define CT_v4057	((void*)startLabel+14632)
#define F0_LAMBDA3571	((void*)startLabel+14640)
#define FN_LAMBDA3570	((void*)startLabel+14652)
#define CT_v4058	((void*)startLabel+14676)
#define F0_LAMBDA3570	((void*)startLabel+14684)
#define FN_LAMBDA3569	((void*)startLabel+14704)
#define CT_v4059	((void*)startLabel+14728)
#define F0_LAMBDA3569	((void*)startLabel+14736)
#define FN_LAMBDA3568	((void*)startLabel+14752)
#define CT_v4060	((void*)startLabel+14796)
#define F0_LAMBDA3568	((void*)startLabel+14804)
#define FN_LAMBDA3567	((void*)startLabel+14852)
#define CT_v4061	((void*)startLabel+14896)
#define F0_LAMBDA3567	((void*)startLabel+14904)
#define FN_LAMBDA3566	((void*)startLabel+14952)
#define CT_v4062	((void*)startLabel+14976)
#define F0_LAMBDA3566	((void*)startLabel+14984)
#define FN_LAMBDA3565	((void*)startLabel+15016)
#define CT_v4063	((void*)startLabel+15048)
#define F0_LAMBDA3565	((void*)startLabel+15056)
#define FN_Case_46Prelude_461055_46select	((void*)startLabel+15096)
#define CT_v4067	((void*)startLabel+15124)
#define F0_Case_46Prelude_461055_46select	((void*)startLabel+15132)
#define FN_LAMBDA3564	((void*)startLabel+15168)
#define CT_v4068	((void*)startLabel+15288)
#define F0_LAMBDA3564	((void*)startLabel+15296)
#define FN_Case_46caseTopDecls	((void*)startLabel+15324)
#define CT_v4069	((void*)startLabel+15348)
#define F0_Case_46caseTopDecls	((void*)startLabel+15356)
#define CT_v4079	((void*)startLabel+15700)
#define FN_LAMBDA3577	((void*)startLabel+15792)
#define CT_v4080	((void*)startLabel+15920)
#define F0_LAMBDA3577	((void*)startLabel+15928)
#define ST_v3999	((void*)startLabel+15952)
#define ST_v4008	((void*)startLabel+15954)
#define ST_v4006	((void*)startLabel+15999)
#define ST_v3593	((void*)startLabel+16049)
#define ST_v3595	((void*)startLabel+16051)
#define ST_v3691	((void*)startLabel+16054)
#define ST_v3869	((void*)startLabel+16087)
#define ST_v3918	((void*)startLabel+16153)
#define ST_v3739	((void*)startLabel+16219)
#define ST_v3791	((void*)startLabel+16276)
#define ST_v3906	((void*)startLabel+16333)
#define ST_v4041	((void*)startLabel+16390)
#define ST_v3603	((void*)startLabel+16447)
#define ST_v3629	((void*)startLabel+16502)
#define ST_v3667	((void*)startLabel+16558)
#define ST_v3680	((void*)startLabel+16614)
#define ST_v3771	((void*)startLabel+16670)
#define ST_v3879	((void*)startLabel+16726)
#define ST_v3689	((void*)startLabel+16782)
#define ST_v3775	((void*)startLabel+16817)
#define ST_v3749	((void*)startLabel+16864)
#define ST_v3762	((void*)startLabel+16902)
#define ST_v4011	((void*)startLabel+16938)
#define ST_v4001	((void*)startLabel+16984)
#define ST_v3720	((void*)startLabel+17005)
#define ST_v3722	((void*)startLabel+17014)
extern Node FN_Prelude_46Ord_46Prelude_462[];
extern Node CF_Prelude_46Ord_46TokenId_46TokenId[];
extern Node CF_Prelude_46Ord_46Id_46Id[];
extern Node FN_List_46sort[];
extern Node FN_Prelude_46map[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node F0_Prelude_46snd[];
extern Node FN_IntState_46tidIS[];
extern Node FN_CaseLib_46caseUniques[];
extern Node FN_State_46_62_62_62_61[];
extern Node FN_Util_46Extra_46pair[];
extern Node FN_Prelude_46_46[];
extern Node FN_Prelude_46Num_46Prelude_46Int_46_45[];
extern Node FN_Prelude_46_33_33[];
extern Node FN_State_46unitS[];
extern Node FN_Prelude_46_43_43[];
extern Node FN_Prelude_46_36[];
extern Node FN_NHC_46Internal_46_95patternMatchFail[];
extern Node FN_State_46_61_62_62_62[];
extern Node CF_Prelude_46concat[];
extern Node FN_State_46mapS[];
extern Node CF_Util_46Extra_46noPos[];
extern Node FN_Prelude_46flip[];
extern Node F0_CaseLib_46caseUnique[];
extern Node F0_CaseLib_46caseState[];
extern Node FN_IntState_46mrpsIS[];
extern Node FN_TokenId_46forceM[];
extern Node F0_TokenId_46visible[];
extern Node F0_Util_46Extra_46strPos[];
extern Node FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos[];
extern Node CF_TokenId_46tunknown[];
extern Node FN_CaseLib_46caseAdd[];
extern Node FN_State_46_62_62_62[];
extern Node FN_CaseOpt_46singleVars[];
extern Node FN_Bind_46identPat[];
extern Node FN_Prelude_46length[];
extern Node FN_CaseLib_46caseTuple[];
extern Node F0_Maybe_46isJust[];
extern Node F0_Prelude_46fst[];
extern Node FN_Prelude_46zip[];
extern Node FN_Prelude_46Enum_46Prelude_46Int_46enumFrom[];
extern Node FN_NHC_46Internal_46_95apply2[];
extern Node FN_Prelude_46filter[];
extern Node FN_Prelude_46uncurry[];
extern Node F0_CaseLib_46caseTrue[];
extern Node FN_Util_46Extra_46strPos[];
extern Node FN_CaseLib_46caseIdent[];
extern Node F0_CaseLib_46caseRatioCon[];
extern Node FN_Prelude_46Enum_46Prelude_46Char_46fromEnum[];
extern Node FN_FSLib_46fsExp2i[];
extern Node F0_CaseLib_46caseUndef[];
extern Node F0_Prelude_46error[];
extern Node FN_Prelude_46error[];
extern Node FN_Ratio_46numerator[];
extern Node CF_Prelude_46Integral_46Prelude_46Integer[];
extern Node FN_Ratio_46denominator[];
extern Node CF_SyntaxPos_46HasPos_46Syntax_46Exp[];
extern Node FN_SyntaxPos_46getPos[];
extern Node FN_Prelude_46all[];
extern Node F0_SyntaxUtil_46isExpVar[];
extern Node F0_CaseHelp_46alt2fun[];
extern Node FN_CaseOpt_46optFatBar[];
extern Node CF_State_46unitS0[];
extern Node F0_CaseLib_46caseList[];
extern Node FN_CaseHelp_46splitPattern[];
extern Node FN_Prelude_46any[];
extern Node F0_CaseHelp_46needLet[];
extern Node CF_SyntaxPos_46HasPos_46PosCode_46PosExp[];
extern Node FN_Prelude_46unzip[];
extern Node FN_Prelude_46concatMap[];
extern Node F0_CaseHelp_46getTrans[];
extern Node FN_CaseHelp_46varExpT[];
extern Node FN_CaseHelp_46varExp[];
extern Node FN_CaseHelp_46getTrans[];
extern Node FN_CaseLib_46caseTranslate[];
extern Node FN_State_46_62_61_62[];
extern Node FN_SyntaxUtil_46dropPatAs[];
extern Node F0_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos[];
extern Node FN_Prelude_46foldr1[];
extern Node FN_CaseHelp_46sortInt[];
extern Node FN_SyntaxPos_46HasPos_46PosCode_46PosExp_46getPos[];
extern Node FN_CaseHelp_46sortCon[];
extern Node F0_CaseLib_46caseEqualNumEq[];
extern Node F0_CaseLib_46caseEqInteger[];
extern Node FN_Util_46Extra_46strace[];
extern Node F0_CaseLib_46caseEqDouble[];
extern Node F0_CaseLib_46caseEqFloat[];
extern Node FN_SyntaxPos_46HasPos_46Prelude_462_46getPos[];
extern Node CF_SyntaxPos_46HasPos_46Syntax_46Fun[];
extern Node FN_Prelude_46head[];
extern Node FN_Prelude_46fst[];
extern Node FN_Prelude_46Num_46Prelude_46Int_46_43[];
extern Node FN_IntState_46lookupIS[];
extern Node FN_Maybe_46fromJust[];
extern Node FN_Info_46superclassesI[];
extern Node FN_Info_46methodsI[];
extern Node CF_TokenId_46t_95eqInteger[];
extern Node CF_TokenId_46t_95eqFloat[];
extern Node CF_TokenId_46t_95eqDouble[];
extern Node CF_TokenId_46tTrue[];
extern Node CF_TokenId_46t_95List[];
extern Node CF_TokenId_46t_95Colon[];
extern Node CF_TokenId_46t_95patternMatchFail[];
extern Node CF_TokenId_46t_95undef[];
extern Node CF_Data_46Map_46empty[];
extern Node FN_Prelude_46concat[];
extern Node CF_TokenId_46t_95equalequal[];
extern Node CF_TokenId_46tNum[];
extern Node CF_TokenId_46tEq[];

static Node startLabel[] = {
  bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3579)
,	/* FN_Case_46forceOrder: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3579: (byte 0) */
  HW(8,2)
, 0
,	/* F0_Case_46forceOrder: (byte 0) */
  CAPTAG(useLabel(FN_Case_46forceOrder),2)
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46Id_46Id)
, VAPTAG(useLabel(FN_List_46sort))
, CAPTAG(useLabel(FN_LAMBDA3442),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(F0_Prelude_46snd)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3580)
,	/* FN_LAMBDA3442: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,2)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3580: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA3442: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3442),2)
, VAPTAG(useLabel(FN_IntState_46tidIS))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3587)
,	/* FN_Case_46oneSel: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(ZAP_STACK_P1,1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_I4,HEAP_I1,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_P1,0)
, bytes2word(HEAP_P1,3,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,8)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3587: (byte 0) */
  HW(3,4)
, 0
,	/* F0_Case_46oneSel: (byte 0) */
  CAPTAG(useLabel(FN_Case_46oneSel),4)
, CAPTAG(useLabel(FN_CaseLib_46caseUniques),2)
, CAPTAG(useLabel(FN_LAMBDA3443),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3588)
,	/* FN_LAMBDA3443: (byte 0) */
  bytes2word(NEEDHEAP_P1,48,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,4,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(6,HEAP_CVAL_P1,6,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG,5,HEAP_INT_P1,1)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG_ARG,4,3)
, bytes2word(HEAP_OFF_N1,18,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,5,HEAP_ARG_ARG,4)
, bytes2word(2,HEAP_OFF_N1,6,HEAP_CVAL_N1)
, bytes2word(6,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(38,HEAP_OFF_N1,38,HEAP_OFF_N1)
, bytes2word(38,HEAP_OFF_N1,9,HEAP_CVAL_N1)
, bytes2word(7,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(2,3,0)
, CONSTR(1,2,0)
, CONSTR(0,4,0)
, CONSTR(8,2,0)
, CONSTR(0,0,0)
,	/* CT_v3588: (byte 0) */
  HW(7,6)
, 0
,	/* F0_LAMBDA3443: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3443),6)
, CAPTAG(useLabel(FN_Util_46Extra_46pair),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_Prelude_46Num_46Prelude_46Int_46_45))
, VAPTAG(useLabel(FN_Prelude_46_33_33))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3592)
,	/* FN_Case_46caseNoMatch: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_P1)
, bytes2word(34,UNPACK,11,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I5,HEAP_P1,9)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,13,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,4,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(0,0,0)
,	/* CT_v3592: (byte 0) */
  HW(5,4)
, 0
,	/* F0_Case_46caseNoMatch: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseNoMatch),4)
, VAPTAG(useLabel(FN_LAMBDA3444))
, VAPTAG(useLabel(FN_LAMBDA3445))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, VAPTAG(useLabel(FN_Prelude_46_36))
, useLabel(F0_Case_46caseExp)
, bytes2word(0,0,0,0)
, useLabel(CT_v3594)
,	/* FN_LAMBDA3445: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3593)
,	/* CT_v3594: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3445: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3445))
, bytes2word(0,0,0,0)
, useLabel(CT_v3596)
,	/* FN_LAMBDA3444: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3595)
,	/* CT_v3596: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3444: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3444))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3602)
,	/* FN_Case_46caseDecls: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v3601: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v3600: (byte 2) */
  bytes2word(10,0,UNPACK,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_I1,HEAP_ARG)
,	/* v3597: (byte 2) */
  bytes2word(2,RETURN_EVAL,HEAP_CVAL_I4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3602: (byte 0) */
  HW(3,2)
, 0
,	/* F0_Case_46caseDecls: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseDecls),2)
, VAPTAG(useLabel(FN_Case_46caseDepends))
, VAPTAG(useLabel(FN_LAMBDA3446))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3604)
,	/* FN_LAMBDA3446: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3603)
,	/* CT_v3604: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3446: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3446))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3613)
,	/* FN_Case_46caseDepends: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v3606: (byte 2) */
  bytes2word(TOP(7),BOT(7),POP_I1,PUSH_ARG_I2)
,	/* v3607: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,PUSH_P1)
, bytes2word(0,ZAP_STACK_P1,1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3609: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(32),BOT(32))
, bytes2word(UNPACK,1,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I5,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(7,HEAP_I2,HEAP_ARG,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
,	/* v3610: (byte 4) */
  bytes2word(7,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(UNPACK,1,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,10,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,11,HEAP_CVAL_P1)
, bytes2word(12,HEAP_P1,0,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,7,HEAP_I2)
, bytes2word(HEAP_ARG,2,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3613: (byte 0) */
  HW(10,2)
, 0
,	/* F0_Case_46caseDepends: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseDepends),2)
, CAPTAG(useLabel(FN_LAMBDA3447),2)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46caseDecl))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, VAPTAG(useLabel(FN_Case_46caseDepends))
, CAPTAG(useLabel(FN_LAMBDA3448),2)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(CF_Prelude_46concat)
, VAPTAG(useLabel(FN_State_46mapS))
, useLabel(F0_Case_46caseDecl)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3614)
,	/* FN_LAMBDA3448: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,1,2)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,4,0)
, CONSTR(1,0,0)
,	/* CT_v3614: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA3448: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3448),2)
, useLabel(CF_Util_46Extra_46noPos)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3615)
,	/* FN_LAMBDA3447: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,1,2)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,4,0)
, CONSTR(0,0,0)
,	/* CT_v3615: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA3447: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3447),2)
, useLabel(CF_Util_46Extra_46noPos)
, bytes2word(1,0,0,1)
, useLabel(CT_v3628)
,	/* FN_Case_46caseDecl: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,18,TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(40),BOT(40))
, bytes2word(TOP(64),BOT(64),TOP(97),BOT(97))
, bytes2word(TOP(36),BOT(36),TOP(131),BOT(131))
, bytes2word(TOP(146),BOT(146),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
,	/* v3626: (byte 2) */
  bytes2word(TOP(36),BOT(36),POP_I1,JUMP)
,	/* v3619: (byte 2) */
  bytes2word(144,0,UNPACK,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,0)
, bytes2word(HEAP_I1,HEAP_CVAL_N1,2,HEAP_I1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_CVAL_N1)
, bytes2word(1,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1)
,	/* v3620: (byte 2) */
  bytes2word(4,RETURN_EVAL,UNPACK,8)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(0,HEAP_P1,3,HEAP_P1)
, bytes2word(4,HEAP_I2,HEAP_I1,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_N1,2,HEAP_P1)
, bytes2word(3,HEAP_OFF_N1,9,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_I3)
,	/* v3621: (byte 3) */
  bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,UNPACK)
, bytes2word(5,HEAP_CVAL_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_P1,0,HEAP_P1)
, bytes2word(3,HEAP_INT_P1,0,HEAP_I2)
, bytes2word(HEAP_I1,HEAP_OFF_N1,7,HEAP_CVAL_N1)
, bytes2word(2,HEAP_P1,3,HEAP_OFF_N1)
, bytes2word(9,HEAP_CVAL_IN3,HEAP_CVAL_N1,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1,4)
,	/* v3622: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,1,PUSH_P1)
, bytes2word(0,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I4,HEAP_I1)
,	/* v3625: (byte 4) */
  bytes2word(HEAP_I2,HEAP_P1,3,RETURN_EVAL)
, bytes2word(UNPACK,3,HEAP_CVAL_I5,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,7)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,9)
, bytes2word(HEAP_P1,0,HEAP_I1,HEAP_I2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
,	/* v3616: (byte 4) */
  bytes2word(7,HEAP_OFF_N1,6,RETURN_EVAL)
, bytes2word(HEAP_CVAL_P1,11,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,0,0)
, CONSTR(2,6,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
, CONSTR(1,2,0)
,	/* CT_v3628: (byte 0) */
  HW(10,1)
, 0
,	/* F0_Case_46caseDecl: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseDecl),1)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46caseDeclPatAs))
, CAPTAG(useLabel(FN_LAMBDA3449),2)
, CAPTAG(useLabel(FN_Prelude_46flip),1)
, CAPTAG(useLabel(FN_Util_46Extra_46pair),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, VAPTAG(useLabel(FN_Case_46matchFun))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, VAPTAG(useLabel(FN_LAMBDA3450))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3630)
,	/* FN_LAMBDA3450: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3629)
,	/* CT_v3630: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3450: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3450))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3631)
,	/* FN_LAMBDA3449: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3631: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3449: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3449),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3637)
,	/* FN_Case_46caseDeclPatAs: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,28,TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(60),BOT(60),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3636: (byte 2) */
  bytes2word(TOP(56),BOT(56),POP_I1,JUMP)
,	/* v3635: (byte 2) */
  bytes2word(19,0,UNPACK,3)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,3,HEAP_I2)
, bytes2word(HEAP_ARG,2,HEAP_I1,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
,	/* v3632: (byte 3) */
  bytes2word(HEAP_OFF_N1,8,RETURN_EVAL,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,6,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3637: (byte 0) */
  HW(4,3)
, 0
,	/* F0_Case_46caseDeclPatAs: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseDeclPatAs),3)
, CAPTAG(useLabel(FN_LAMBDA3454),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseUnique)
, CAPTAG(useLabel(FN_LAMBDA3456),1)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3638)
,	/* FN_LAMBDA3456: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,4)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(7,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3638: (byte 0) */
  HW(3,4)
, 0
,	/* F0_LAMBDA3456: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3456),4)
, CAPTAG(useLabel(FN_LAMBDA3455),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseState)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3639)
,	/* FN_LAMBDA3455: (byte 0) */
  bytes2word(NEEDHEAP_P1,38,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_I5,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,6)
, bytes2word(HEAP_INT_P1,0,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,4,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_ARG,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(13,HEAP_OFF_N1,7,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
, CONSTR(12,5,0)
, CONSTR(1,0,0)
,	/* CT_v3639: (byte 0) */
  HW(11,5)
, 0
,	/* F0_LAMBDA3455: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3455),5)
, VAPTAG(useLabel(FN_IntState_46mrpsIS))
, CAPTAG(useLabel(FN_TokenId_46forceM),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_TokenId_46visible)
, useLabel(F0_Util_46Extra_46strPos)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_TokenId_46tunknown)
, CAPTAG(useLabel(FN_CaseLib_46caseAdd),2)
, VAPTAG(useLabel(FN_Case_46caseDeclPatFix))
, VAPTAG(useLabel(FN_State_46_62_62_62))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3640)
,	/* FN_LAMBDA3454: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,6)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG_ARG,4,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,9)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3640: (byte 0) */
  HW(3,6)
, 0
,	/* F0_LAMBDA3454: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3454),6)
, CAPTAG(useLabel(FN_LAMBDA3453),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseState)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v3641)
,	/* FN_LAMBDA3453: (byte 0) */
  bytes2word(NEEDHEAP_P1,52,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(7,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_I5,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,6)
, bytes2word(HEAP_INT_P1,0,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG,1,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG_ARG,6,5)
, bytes2word(HEAP_CVAL_N1,5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,12,HEAP_OFF_N1,9)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,5)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,18,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_P1,14,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_ARG,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(15,HEAP_OFF_N1,10,HEAP_OFF_N1)
, bytes2word(8,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
, CONSTR(14,2,0)
, CONSTR(0,2,0)
, CONSTR(12,5,0)
, CONSTR(1,0,0)
,	/* CT_v3641: (byte 0) */
  HW(13,7)
, 0
,	/* F0_LAMBDA3453: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3453),7)
, VAPTAG(useLabel(FN_IntState_46mrpsIS))
, CAPTAG(useLabel(FN_TokenId_46forceM),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_TokenId_46visible)
, useLabel(F0_Util_46Extra_46strPos)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_TokenId_46tunknown)
, CAPTAG(useLabel(FN_CaseLib_46caseAdd),2)
, VAPTAG(useLabel(FN_Case_46caseDeclPatFix))
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_LAMBDA3452),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3642)
,	/* FN_LAMBDA3452: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,5,2,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_ARG,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(6,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3642: (byte 0) */
  HW(4,6)
, 0
,	/* F0_LAMBDA3452: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3452),6)
, VAPTAG(useLabel(FN_Case_46onePat))
, VAPTAG(useLabel(FN_Case_46caseDecls))
, CAPTAG(useLabel(FN_LAMBDA3451),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3643)
,	/* FN_LAMBDA3451: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,HEAP_ARG,4,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,8)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v3643: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3451: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3451),4)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3647)
,	/* FN_Case_46caseDeclPatFix: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I4,HEAP_ARG_ARG,4)
, bytes2word(2,HEAP_ARG,3,HEAP_I1)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,8)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3647: (byte 0) */
  HW(3,4)
, 0
,	/* F0_Case_46caseDeclPatFix: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseDeclPatFix),4)
, CAPTAG(useLabel(FN_CaseOpt_46singleVars),2)
, CAPTAG(useLabel(FN_LAMBDA3466),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3652)
,	/* FN_LAMBDA3466: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,6,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3649: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(35),BOT(35))
, bytes2word(POP_I1,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I4,HEAP_P1,0)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG,3,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,4,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,10)
,	/* v3650: (byte 3) */
  bytes2word(HEAP_OFF_N1,9,RETURN_EVAL,UNPACK)
, bytes2word(1,HEAP_CVAL_I4,HEAP_P1,0)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(8,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG,3,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,4,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,10)
, bytes2word(HEAP_OFF_N1,9,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v3652: (byte 0) */
  HW(6,6)
, 0
,	/* F0_LAMBDA3466: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3466),6)
, VAPTAG(useLabel(FN_Bind_46identPat))
, VAPTAG(useLabel(FN_Prelude_46length))
, CAPTAG(useLabel(FN_CaseLib_46caseTuple),2)
, CAPTAG(useLabel(FN_LAMBDA3460),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, CAPTAG(useLabel(FN_LAMBDA3465),1)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v3653)
,	/* FN_LAMBDA3465: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,6,2,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG_ARG,7,4)
, bytes2word(HEAP_ARG_ARG,5,6,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,7,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3653: (byte 0) */
  HW(4,7)
, 0
,	/* F0_LAMBDA3465: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3465),7)
, VAPTAG(useLabel(FN_Case_46onePat))
, VAPTAG(useLabel(FN_Case_46caseDecls))
, CAPTAG(useLabel(FN_LAMBDA3464),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3654)
,	/* FN_LAMBDA3464: (byte 0) */
  bytes2word(NEEDHEAP_P1,35,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,4,3,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_INT_P1)
, bytes2word(1,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(11,HEAP_OFF_N1,6,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(22,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(14,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(15,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(6,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
,	/* CT_v3654: (byte 0) */
  HW(13,5)
, 0
,	/* F0_LAMBDA3464: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3464),5)
, CAPTAG(useLabel(FN_Case_46oneSel),1)
, CAPTAG(useLabel(FN_LAMBDA3462),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Maybe_46isJust)
, useLabel(F0_Prelude_46fst)
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Int_46enumFrom))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_Prelude_46filter))
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA3463),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3655)
,	/* FN_LAMBDA3463: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,HEAP_ARG,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,8)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,4,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v3655: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3463: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3463),4)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(1,0,0,1)
, useLabel(CT_v3666)
,	/* FN_LAMBDA3462: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,UNPACK)
, bytes2word(2,PUSH_P1,0,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3665: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v3663: (byte 4) */
  bytes2word(POP_I1,JUMP,11,0)
, bytes2word(UNPACK,1,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I1,HEAP_P1,3)
,	/* v3660: (byte 1) */
  bytes2word(RETURN,POP_P1,2,JUMP)
,	/* v3656: (byte 2) */
  bytes2word(2,0,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3666: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA3462: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3462),1)
, VAPTAG(useLabel(FN_LAMBDA3461))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3668)
,	/* FN_LAMBDA3461: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3667)
,	/* CT_v3668: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3461: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3461))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v3669)
,	/* FN_LAMBDA3460: (byte 0) */
  bytes2word(NEEDHEAP_P1,34,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,6,7,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,10)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG_ARG,6,2)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG_ARG,7,4,HEAP_ARG_ARG)
, bytes2word(5,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(7,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(1,1,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(15,2,0)
,	/* CT_v3669: (byte 0) */
  HW(7,7)
, 0
,	/* F0_LAMBDA3460: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3460),7)
, CAPTAG(useLabel(FN_LAMBDA3457),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_Case_46onePat))
, VAPTAG(useLabel(FN_Case_46caseDecls))
, CAPTAG(useLabel(FN_LAMBDA3459),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3670)
,	/* FN_LAMBDA3459: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(4,3,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_INT_P1,1)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_ARG)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
,	/* CT_v3670: (byte 0) */
  HW(7,5)
, 0
,	/* F0_LAMBDA3459: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3459),5)
, CAPTAG(useLabel(FN_Case_46oneSel),1)
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Int_46enumFrom))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA3458),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3671)
,	/* FN_LAMBDA3458: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,HEAP_ARG,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,8)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,4,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v3671: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3458: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3458),4)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3672)
,	/* FN_LAMBDA3457: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(14,2,0)
,	/* CT_v3672: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3457: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3457),2)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3673)
,	/* FN_Case_46onePat: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,4)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(7,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3673: (byte 0) */
  HW(3,4)
, 0
,	/* F0_Case_46onePat: (byte 0) */
  CAPTAG(useLabel(FN_Case_46onePat),4)
, CAPTAG(useLabel(FN_LAMBDA3473),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseTrue)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3679)
,	/* FN_LAMBDA3473: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,5,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,28,NOP)
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(60),BOT(60))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3678: (byte 4) */
  bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3677: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(4,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_P1,7,HEAP_I1)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,10,HEAP_OFF_N1)
,	/* v3674: (byte 2) */
  bytes2word(8,RETURN_EVAL,HEAP_CVAL_P1,9)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3679: (byte 0) */
  HW(8,5)
, 0
,	/* F0_LAMBDA3473: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3473),5)
, VAPTAG(useLabel(FN_LAMBDA3467))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_Case_46caseNoMatch),2)
, CAPTAG(useLabel(FN_LAMBDA3471),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA3472))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3681)
,	/* FN_LAMBDA3472: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3680)
,	/* CT_v3681: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3472: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3472))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3682)
,	/* FN_LAMBDA3471: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG,6,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_ARG)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,6,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3682: (byte 0) */
  HW(3,6)
, 0
,	/* F0_LAMBDA3471: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3471),6)
, VAPTAG(useLabel(FN_Case_46fixRhs))
, CAPTAG(useLabel(FN_LAMBDA3470),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3687)
,	/* FN_LAMBDA3470: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v3684: (byte 2) */
  bytes2word(TOP(10),BOT(10),POP_I1,PUSH_HEAP)
,	/* v3685: (byte 4) */
  bytes2word(HEAP_CVAL_I3,HEAP_ARG,4,RETURN_EVAL)
, bytes2word(UNPACK,1,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG_ARG,4,2,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3687: (byte 0) */
  HW(7,4)
, 0
,	/* F0_LAMBDA3470: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3470),4)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_LAMBDA3468))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_Case_46caseNoMatch),2)
, CAPTAG(useLabel(FN_LAMBDA3469),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3688)
,	/* FN_LAMBDA3469: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_N1,5)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,21,HEAP_OFF_N1,5)
, bytes2word(HEAP_ARG,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
, CONSTR(1,1,0)
, CONSTR(0,1,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v3688: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3469: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3469),4)
, VAPTAG(useLabel(FN_Case_46match))
, bytes2word(0,0,0,0)
, useLabel(CT_v3690)
,	/* FN_LAMBDA3468: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3689)
,	/* CT_v3690: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3468: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3468))
, bytes2word(0,0,0,0)
, useLabel(CT_v3692)
,	/* FN_LAMBDA3467: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3691)
,	/* CT_v3692: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3467: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3467))
, bytes2word(1,0,0,1)
, useLabel(CT_v3719)
,	/* FN_Case_46caseExp: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,28,TOP(56),BOT(56))
, bytes2word(TOP(60),BOT(60),TOP(73),BOT(73))
, bytes2word(TOP(83),BOT(83),TOP(56),BOT(56))
, bytes2word(TOP(94),BOT(94),TOP(56),BOT(56))
, bytes2word(TOP(110),BOT(110),TOP(119),BOT(119))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(156),BOT(156),TOP(174),BOT(174))
, bytes2word(TOP(182),BOT(182),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(195),BOT(195),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(304),BOT(304))
, bytes2word(TOP(56),BOT(56),TOP(328),BOT(328))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3717: (byte 2) */
  bytes2word(TOP(333),BOT(333),POP_I1,JUMP)
,	/* v3696: (byte 2) */
  bytes2word(41,1,UNPACK,1)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,0,HEAP_CVAL_I4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,4)
,	/* v3697: (byte 3) */
  bytes2word(HEAP_OFF_N1,3,RETURN_EVAL,UNPACK)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_I1,HEAP_I2,HEAP_P1,3)
,	/* v3698: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,3,HEAP_CVAL_I3)
, bytes2word(HEAP_I2,PUSH_HEAP,HEAP_CVAL_P1,7)
,	/* v3699: (byte 4) */
  bytes2word(HEAP_I2,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(UNPACK,3,HEAP_CVAL_I3,HEAP_I1)
, bytes2word(HEAP_CVAL_P1,8,HEAP_P1,0)
, bytes2word(HEAP_I2,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
,	/* v3700: (byte 4) */
  bytes2word(6,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(POP_I1,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,2)
,	/* v3701: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,4,HEAP_CVAL_P1)
, bytes2word(10,HEAP_P1,0,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,3,HEAP_CVAL_I3)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_I3)
, bytes2word(HEAP_I2,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,6,HEAP_OFF_N1)
,	/* v3702: (byte 2) */
  bytes2word(4,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_P1,12,HEAP_CVAL_P1,13)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,14,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
,	/* v3703: (byte 4) */
  bytes2word(6,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_P1)
,	/* v3704: (byte 4) */
  bytes2word(15,HEAP_I1,HEAP_I2,RETURN)
, bytes2word(UNPACK,2,HEAP_CVAL_N1,2)
, bytes2word(HEAP_P1,0,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
,	/* v3705: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,7)
, bytes2word(TOP(14),BOT(14),TOP(25),BOT(25))
, bytes2word(TOP(38),BOT(38),TOP(50),BOT(50))
, bytes2word(TOP(62),BOT(62),TOP(74),BOT(74))
,	/* v3707: (byte 2) */
  bytes2word(TOP(86),BOT(86),UNPACK,2)
, bytes2word(HEAP_CVAL_IN3,HEAP_I2,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
,	/* v3708: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,HEAP_CVAL_P1)
, bytes2word(16,HEAP_I2,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,17,HEAP_OFF_N1)
,	/* v3709: (byte 2) */
  bytes2word(5,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,4,HEAP_I2,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
,	/* v3710: (byte 2) */
  bytes2word(4,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,5,HEAP_I2,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
,	/* v3711: (byte 2) */
  bytes2word(4,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,6,HEAP_I2,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
,	/* v3712: (byte 2) */
  bytes2word(4,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,7,HEAP_I2,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
,	/* v3713: (byte 2) */
  bytes2word(4,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_P1,18,HEAP_I1,HEAP_CVAL_N1)
, bytes2word(8,HEAP_I2,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
,	/* v3714: (byte 2) */
  bytes2word(4,RETURN_EVAL,UNPACK,3)
, bytes2word(HEAP_CVAL_P1,19,HEAP_P1,0)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,20,HEAP_P1,0)
, bytes2word(HEAP_I1,HEAP_I2,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,7,HEAP_OFF_N1)
,	/* v3715: (byte 2) */
  bytes2word(6,RETURN_EVAL,UNPACK,1)
,	/* v3716: (byte 3) */
  bytes2word(PUSH_CVAL_P1,21,RETURN_EVAL,UNPACK)
, bytes2word(2,HEAP_CVAL_P1,22,HEAP_CVAL_P1)
, bytes2word(23,HEAP_P1,0,HEAP_CVAL_P1)
, bytes2word(24,HEAP_OFF_N1,4,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,25)
, bytes2word(HEAP_CVAL_P1,26,HEAP_OFF_N1,5)
,	/* v3693: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_P1,27,HEAP_CVAL_P1)
, bytes2word(28,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(23,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(24,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,29)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(11,2,0)
, CONSTR(12,2,0)
, CONSTR(13,2,0)
, CONSTR(10,2,0)
, CONSTR(15,2,0)
, CONSTR(14,2,0)
, CONSTR(9,2,0)
, CONSTR(6,0,0)
,	/* CT_v3719: (byte 0) */
  HW(27,1)
, 0
,	/* F0_Case_46caseExp: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseExp),1)
, VAPTAG(useLabel(FN_Case_46caseExp))
, CAPTAG(useLabel(FN_LAMBDA3474),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_Case_46matchLambda))
, VAPTAG(useLabel(FN_Case_46caseDecls))
, CAPTAG(useLabel(FN_LAMBDA3475),1)
, VAPTAG(useLabel(FN_State_46unitS))
, CAPTAG(useLabel(FN_LAMBDA3476),3)
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, VAPTAG(useLabel(FN_State_46mapS))
, useLabel(F0_Case_46caseExp)
, CAPTAG(useLabel(FN_LAMBDA3477),1)
, CAPTAG(useLabel(FN_CaseLib_46caseIdent),2)
, CAPTAG(useLabel(FN_LAMBDA3478),1)
, useLabel(F0_CaseLib_46caseRatioCon)
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Char_46fromEnum))
, CAPTAG(useLabel(FN_LAMBDA3479),1)
, CAPTAG(useLabel(FN_FSLib_46fsExp2i),2)
, useLabel(F0_CaseLib_46caseUndef)
, VAPTAG(useLabel(FN_LAMBDA3480))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, VAPTAG(useLabel(FN_Prelude_46_36))
, useLabel(F0_Prelude_46error)
, VAPTAG(useLabel(FN_LAMBDA3481))
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos))
, VAPTAG(useLabel(FN_Prelude_46error))
, bytes2word(0,0,0,0)
, useLabel(CT_v3721)
,	/* FN_LAMBDA3481: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3720)
,	/* CT_v3721: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3481: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3481))
, bytes2word(0,0,0,0)
, useLabel(CT_v3723)
,	/* FN_LAMBDA3480: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3722)
,	/* CT_v3723: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3480: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3480))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3724)
,	/* FN_LAMBDA3479: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
,	/* CT_v3724: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3479: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3479),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3725)
,	/* FN_LAMBDA3478: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_N1,1,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,2,HEAP_CVAL_N1)
, bytes2word(1,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,14,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(3,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(14,2,0)
,	/* CT_v3725: (byte 0) */
  HW(4,3)
, 0
,	/* F0_LAMBDA3478: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3478),3)
, VAPTAG(useLabel(FN_Ratio_46numerator))
, useLabel(CF_Prelude_46Integral_46Prelude_46Integer)
, VAPTAG(useLabel(FN_Ratio_46denominator))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3726)
,	/* FN_LAMBDA3477: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(1,2,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(3,2,0)
,	/* CT_v3726: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA3477: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3477),2)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3727)
,	/* FN_LAMBDA3476: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG,4,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(7,5,0)
, CONSTR(0,0,0)
,	/* CT_v3727: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA3476: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3476),4)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3728)
,	/* FN_LAMBDA3475: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,3,HEAP_ARG,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3728: (byte 0) */
  HW(1,3)
, 0
,	/* F0_LAMBDA3475: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3475),3)
, VAPTAG(useLabel(FN_Case_46matchCase))
, bytes2word(1,0,0,1)
, useLabel(CT_v3729)
,	/* FN_LAMBDA3474: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(3,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v3729: (byte 0) */
  HW(1,1)
, 0
,	/* F0_LAMBDA3474: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3474),1)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3738)
,	/* FN_Case_46matchFun: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDSTACK_I16,PUSH_ARG_I3,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3736: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v3733: (byte 4) */
  bytes2word(POP_I1,JUMP,28,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(ZAP_STACK_P1,2,ZAP_STACK_P1,1)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,3)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,0,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,3,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,6,HEAP_OFF_N1)
,	/* v3730: (byte 2) */
  bytes2word(5,RETURN_EVAL,HEAP_CVAL_P1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3738: (byte 0) */
  HW(5,3)
, 0
,	/* F0_Case_46matchFun: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchFun),3)
, CAPTAG(useLabel(FN_CaseLib_46caseUniques),2)
, CAPTAG(useLabel(FN_LAMBDA3487),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA3488))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3740)
,	/* FN_LAMBDA3488: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3739)
,	/* CT_v3740: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3488: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3488))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3741)
,	/* FN_LAMBDA3487: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG_ARG,3)
, bytes2word(1,HEAP_ARG,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v3741: (byte 0) */
  HW(6,3)
, 0
,	/* F0_LAMBDA3487: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3487),3)
, VAPTAG(useLabel(FN_LAMBDA3482))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_Case_46caseNoMatch),2)
, CAPTAG(useLabel(FN_LAMBDA3486),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3742)
,	/* FN_LAMBDA3486: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,0,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,4,HEAP_ARG_ARG)
, bytes2word(2,4,HEAP_CVAL_P1,9)
, bytes2word(HEAP_ARG,3,HEAP_P1,0)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3742: (byte 0) */
  HW(8,4)
, 0
,	/* F0_LAMBDA3486: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3486),4)
, useLabel(CF_SyntaxPos_46HasPos_46Syntax_46Exp)
, CAPTAG(useLabel(FN_LAMBDA3483),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, CAPTAG(useLabel(FN_LAMBDA3484),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Case_46match))
, CAPTAG(useLabel(FN_LAMBDA3485),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3743)
,	/* FN_LAMBDA3485: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,4,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG_ARG,2,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1,7)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v3743: (byte 0) */
  HW(1,3)
, 0
,	/* F0_LAMBDA3485: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3485),3)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3744)
,	/* FN_LAMBDA3484: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
,	/* CT_v3744: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3484: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3484),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3748)
,	/* FN_LAMBDA3483: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_OFF_N1,4,HEAP_I2)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3748: (byte 0) */
  HW(2,2)
, 0
,	/* F0_LAMBDA3483: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3483),2)
, VAPTAG(useLabel(FN_SyntaxPos_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, bytes2word(0,0,0,0)
, useLabel(CT_v3750)
,	/* FN_LAMBDA3482: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3749)
,	/* CT_v3750: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3482: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3482))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3753)
,	/* FN_Case_46matchLambda: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_ARG_I2,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(1,EVAL,NEEDHEAP_I32,JUMPFALSE)
, bytes2word(22,0,HEAP_CVAL_I5,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_OFF_N1)
,	/* v3751: (byte 2) */
  bytes2word(4,RETURN_EVAL,HEAP_CVAL_P1,9)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,10)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3753: (byte 0) */
  HW(9,3)
, 0
,	/* F0_Case_46matchLambda: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchLambda),3)
, VAPTAG(useLabel(FN_Prelude_46all))
, useLabel(F0_SyntaxUtil_46isExpVar)
, CAPTAG(useLabel(FN_LAMBDA3491),1)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46caseExp))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, CAPTAG(useLabel(FN_CaseLib_46caseUniques),2)
, CAPTAG(useLabel(FN_LAMBDA3497),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3754)
,	/* FN_LAMBDA3497: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG_ARG,4)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,7,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3754: (byte 0) */
  HW(6,4)
, 0
,	/* F0_LAMBDA3497: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3497),4)
, VAPTAG(useLabel(FN_LAMBDA3492))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_Case_46caseNoMatch),2)
, CAPTAG(useLabel(FN_LAMBDA3496),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3755)
,	/* FN_LAMBDA3496: (byte 0) */
  bytes2word(NEEDHEAP_P1,38,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_P1,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,1,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,2,HEAP_CVAL_N1)
, bytes2word(5,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(17,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_P1,9,HEAP_ARG)
, bytes2word(4,HEAP_P1,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,3,0)
, CONSTR(1,1,0)
, CONSTR(0,0,0)
, CONSTR(0,1,0)
,	/* CT_v3755: (byte 0) */
  HW(8,5)
, 0
,	/* F0_LAMBDA3496: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3496),5)
, useLabel(CF_SyntaxPos_46HasPos_46Syntax_46Exp)
, CAPTAG(useLabel(FN_LAMBDA3493),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, CAPTAG(useLabel(FN_LAMBDA3494),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Case_46match))
, CAPTAG(useLabel(FN_LAMBDA3495),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3756)
,	/* FN_LAMBDA3495: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,4,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG_ARG,2,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1,7)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(17,5,0)
, CONSTR(0,0,0)
,	/* CT_v3756: (byte 0) */
  HW(1,3)
, 0
,	/* F0_LAMBDA3495: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3495),3)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3757)
,	/* FN_LAMBDA3494: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
,	/* CT_v3757: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3494: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3494),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3761)
,	/* FN_LAMBDA3493: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_OFF_N1,4,HEAP_I2)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3761: (byte 0) */
  HW(2,2)
, 0
,	/* F0_LAMBDA3493: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3493),2)
, VAPTAG(useLabel(FN_SyntaxPos_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, bytes2word(0,0,0,0)
, useLabel(CT_v3763)
,	/* FN_LAMBDA3492: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3762)
,	/* CT_v3763: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3492: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3492))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3764)
,	/* FN_LAMBDA3491: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,7,HEAP_ARG,3)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(17,5,0)
, CONSTR(0,0,0)
,	/* CT_v3764: (byte 0) */
  HW(2,3)
, 0
,	/* F0_LAMBDA3491: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3491),3)
, CAPTAG(useLabel(FN_LAMBDA3490),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, bytes2word(1,0,0,1)
, useLabel(CT_v3770)
,	/* FN_LAMBDA3490: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,28,TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(60),BOT(60))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3769: (byte 2) */
  bytes2word(TOP(56),BOT(56),POP_I1,JUMP)
,	/* v3768: (byte 2) */
  bytes2word(10,0,UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_I1)
,	/* v3765: (byte 2) */
  bytes2word(HEAP_I2,RETURN,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3770: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA3490: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3490),1)
, VAPTAG(useLabel(FN_LAMBDA3489))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3772)
,	/* FN_LAMBDA3489: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3771)
,	/* CT_v3772: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3489: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3489))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3773)
,	/* FN_Case_46matchCase: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG_ARG,2)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3773: (byte 0) */
  HW(6,3)
, 0
,	/* F0_Case_46matchCase: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchCase),3)
, VAPTAG(useLabel(FN_LAMBDA3498))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_Case_46caseNoMatch),2)
, CAPTAG(useLabel(FN_LAMBDA3499),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3774)
,	/* FN_LAMBDA3499: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(3,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v3774: (byte 0) */
  HW(3,3)
, 0
,	/* F0_LAMBDA3499: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3499),3)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_CaseHelp_46alt2fun)
, VAPTAG(useLabel(FN_Case_46match))
, bytes2word(0,0,0,0)
, useLabel(CT_v3776)
,	/* FN_LAMBDA3498: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3775)
,	/* CT_v3776: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3498: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3498))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3790)
,	/* FN_Case_46fixFuns: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v3787: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v3780: (byte 2) */
  bytes2word(71,0,UNPACK,2)
, bytes2word(PUSH_P1,0,ZAP_STACK_P1,1)
, bytes2word(EVAL,UNPACK,3,PUSH_P1)
, bytes2word(4,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v3789: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v3786: (byte 2) */
  bytes2word(16,0,POP_I1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_I1,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I4,HEAP_P1)
,	/* v3783: (byte 4) */
  bytes2word(3,HEAP_OFF_N1,6,RETURN_EVAL)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_I1,HEAP_OFF_N1,5,HEAP_CVAL_I4)
, bytes2word(HEAP_I2,HEAP_OFF_N1,6,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG,1,HEAP_P1)
, bytes2word(4,HEAP_ARG,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,8)
,	/* v3777: (byte 3) */
  bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,HEAP_CVAL_P1)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,2,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,0,0)
,	/* CT_v3790: (byte 0) */
  HW(7,3)
, 0
,	/* F0_Case_46fixFuns: (byte 0) */
  CAPTAG(useLabel(FN_Case_46fixFuns),3)
, VAPTAG(useLabel(FN_Case_46fixRhs))
, VAPTAG(useLabel(FN_Case_46caseDecls))
, VAPTAG(useLabel(FN_State_46unitS))
, CAPTAG(useLabel(FN_LAMBDA3501),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA3502))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3792)
,	/* FN_LAMBDA3502: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3791)
,	/* CT_v3792: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3502: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3502))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3793)
,	/* FN_LAMBDA3501: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG,3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,4,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3793: (byte 0) */
  HW(3,4)
, 0
,	/* F0_LAMBDA3501: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3501),4)
, VAPTAG(useLabel(FN_Case_46fixFuns))
, CAPTAG(useLabel(FN_LAMBDA3500),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3794)
,	/* FN_LAMBDA3500: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG_RET_EVAL)
, bytes2word(1,2,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3794: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA3500: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3500),2)
, VAPTAG(useLabel(FN_CaseOpt_46optFatBar))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3799)
,	/* FN_Case_46fixRhs: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v3796: (byte 2) */
  bytes2word(TOP(15),BOT(15),UNPACK,1)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,4)
,	/* v3797: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,1)
, bytes2word(HEAP_I1,HEAP_ARG,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3799: (byte 0) */
  HW(4,3)
, 0
,	/* F0_Case_46fixRhs: (byte 0) */
  CAPTAG(useLabel(FN_Case_46fixRhs),3)
, VAPTAG(useLabel(FN_Case_46caseExp))
, VAPTAG(useLabel(FN_State_46_62_62_62))
, useLabel(CF_State_46unitS0)
, VAPTAG(useLabel(FN_Case_46fixPatGdExp))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3807)
,	/* FN_Case_46fixPatGdExp: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v3801: (byte 2) */
  bytes2word(TOP(7),BOT(7),POP_I1,PUSH_ARG_I3)
,	/* v3802: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,PUSH_P1)
, bytes2word(0,ZAP_STACK_P1,1,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_P1,3)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,HEAP_I2,HEAP_OFF_N1,7)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3807: (byte 0) */
  HW(2,3)
, 0
,	/* F0_Case_46fixPatGdExp: (byte 0) */
  CAPTAG(useLabel(FN_Case_46fixPatGdExp),3)
, VAPTAG(useLabel(FN_Case_46fixPatGdExp))
, VAPTAG(useLabel(FN_Case_46fixQuals))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3832)
,	/* FN_Case_46fixQuals: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v3809: (byte 2) */
  bytes2word(TOP(10),BOT(10),POP_I1,PUSH_HEAP)
,	/* v3810: (byte 4) */
  bytes2word(HEAP_CVAL_I3,HEAP_ARG,2,RETURN_EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(ZAP_STACK_P1,1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,3,TOP(6),BOT(6))
,	/* v3812: (byte 4) */
  bytes2word(TOP(70),BOT(70),TOP(234),BOT(234))
, bytes2word(UNPACK,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_P1)
, bytes2word(3,HEAP_ARG,2,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,4,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_N1,5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I4,HEAP_I1)
, bytes2word(HEAP_P1,0,HEAP_ARG,3)
, bytes2word(HEAP_I2,PUSH_HEAP,HEAP_CVAL_I5,HEAP_CVAL_P1)
,	/* v3813: (byte 4) */
  bytes2word(6,HEAP_OFF_N1,7,RETURN_EVAL)
, bytes2word(UNPACK,1,PUSH_P1,0)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,28)
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(60),BOT(60))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3829: (byte 4) */
  bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3817: (byte 4) */
  bytes2word(POP_I1,JUMP,63,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3830: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v3821: (byte 4) */
  bytes2word(POP_I1,JUMP,42,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3831: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v3825: (byte 4) */
  bytes2word(POP_I1,JUMP,21,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(0,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,6,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
,	/* v3822: (byte 3) */
  bytes2word(HEAP_ARG_ARG_RET_EVAL,2,3,POP_P1)
,	/* v3818: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v3814: (byte 1) */
  bytes2word(0,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,2,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,0,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_I2,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
,	/* v3826: (byte 4) */
  bytes2word(4,HEAP_ARG,3,RETURN_EVAL)
, bytes2word(UNPACK,1,HEAP_CVAL_P1,7)
, bytes2word(HEAP_I2,HEAP_ARG_ARG,2,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,11,HEAP_I1)
, bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
, CONSTR(1,1,0)
, CONSTR(0,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v3832: (byte 0) */
  HW(9,3)
, 0
,	/* F0_Case_46fixQuals: (byte 0) */
  CAPTAG(useLabel(FN_Case_46fixQuals),3)
, VAPTAG(useLabel(FN_Case_46caseExp))
, CAPTAG(useLabel(FN_LAMBDA3506),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseUnique)
, VAPTAG(useLabel(FN_Case_46fixQuals))
, CAPTAG(useLabel(FN_LAMBDA3507),3)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, VAPTAG(useLabel(FN_Case_46caseDecls))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3833)
,	/* FN_LAMBDA3507: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG,3,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(7,5,0)
, CONSTR(1,0,0)
,	/* CT_v3833: (byte 0) */
  HW(1,3)
, 0
,	/* F0_LAMBDA3507: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3507),3)
, useLabel(CF_Util_46Extra_46noPos)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3834)
,	/* FN_LAMBDA3506: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_I1,HEAP_ARG,5,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,2,HEAP_P1)
, bytes2word(0,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_CVAL_P1)
, bytes2word(7,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
,	/* CT_v3834: (byte 0) */
  HW(6,5)
, 0
,	/* F0_LAMBDA3506: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3506),5)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos))
, CAPTAG(useLabel(FN_LAMBDA3503),2)
, VAPTAG(useLabel(FN_Prelude_46uncurry))
, VAPTAG(useLabel(FN_Case_46match))
, CAPTAG(useLabel(FN_LAMBDA3505),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3835)
,	/* FN_LAMBDA3505: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG,4,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3835: (byte 0) */
  HW(3,4)
, 0
,	/* F0_LAMBDA3505: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3505),4)
, VAPTAG(useLabel(FN_Case_46caseExp))
, CAPTAG(useLabel(FN_LAMBDA3504),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3836)
,	/* FN_LAMBDA3504: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(4,HEAP_CVAL_IN3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,8,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,5)
, bytes2word(HEAP_OFF_N1,18,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,6,HEAP_ARG,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v3836: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3504: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3504),4)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3837)
,	/* FN_LAMBDA3503: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
,	/* CT_v3837: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3503: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3503),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3843)
,	/* FN_Case_46match: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(8),BOT(8))
,	/* v3842: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v3841: (byte 2) */
  bytes2word(13,0,POP_I1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,2,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,5)
,	/* v3838: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_P1,6,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v3843: (byte 0) */
  HW(5,3)
, 0
,	/* F0_Case_46match: (byte 0) */
  CAPTAG(useLabel(FN_Case_46match),3)
, CAPTAG(useLabel(FN_LAMBDA3509),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseTrue)
, CAPTAG(useLabel(FN_LAMBDA3514),1)
, useLabel(F0_CaseLib_46caseState)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3844)
,	/* FN_LAMBDA3514: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,4)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(7,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3844: (byte 0) */
  HW(3,4)
, 0
,	/* F0_LAMBDA3514: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3514),4)
, CAPTAG(useLabel(FN_LAMBDA3513),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseList)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3868)
,	/* FN_LAMBDA3513: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(5,1,HEAP_ARG,2)
, bytes2word(PUSH_P1,0,ZAP_ARG_I1,ZAP_ARG_I2)
, bytes2word(ZAP_ARG,5,EVAL,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v3848: (byte 2) */
  bytes2word(TOP(7),BOT(7),POP_I1,PUSH_ARG_I3)
,	/* v3849: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v3865: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v3853: (byte 4) */
  bytes2word(POP_I1,JUMP,11,0)
, bytes2word(POP_I1,PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(4,HEAP_I1,HEAP_ARG,3)
,	/* v3850: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v3845: (byte 2) */
  bytes2word(2,0,PUSH_ARG,4)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v3866: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v3857: (byte 4) */
  bytes2word(POP_I1,JUMP,102,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,18)
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(40),BOT(40),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
, bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
,	/* v3867: (byte 4) */
  bytes2word(TOP(36),BOT(36),TOP(36),BOT(36))
,	/* v3861: (byte 4) */
  bytes2word(POP_I1,JUMP,13,0)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,4,HEAP_P1,5)
,	/* v3858: (byte 3) */
  bytes2word(HEAP_ARG,3,RETURN_EVAL,PUSH_P1)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,EVAL,NEEDHEAP_I32)
, bytes2word(APPLY,1,EVAL,NEEDHEAP_I32)
, bytes2word(JUMPFALSE,18,0,HEAP_CVAL_P1)
, bytes2word(8,HEAP_I1,HEAP_I2,HEAP_ARG)
, bytes2word(3,HEAP_P1,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_P1,10)
,	/* v3862: (byte 3) */
  bytes2word(HEAP_OFF_N1,7,RETURN_EVAL,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,4,HEAP_P1)
,	/* v3854: (byte 4) */
  bytes2word(3,HEAP_ARG,3,RETURN_EVAL)
, bytes2word(HEAP_CVAL_P1,11,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3868: (byte 0) */
  HW(10,5)
, 0
,	/* F0_LAMBDA3513: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3513),5)
, VAPTAG(useLabel(FN_CaseHelp_46splitPattern))
, VAPTAG(useLabel(FN_Case_46matchOne))
, VAPTAG(useLabel(FN_Case_46matchMany))
, VAPTAG(useLabel(FN_Prelude_46any))
, useLabel(F0_CaseHelp_46needLet)
, CAPTAG(useLabel(FN_LAMBDA3511),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseUnique)
, VAPTAG(useLabel(FN_LAMBDA3512))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3870)
,	/* FN_LAMBDA3512: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3869)
,	/* CT_v3870: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3512: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3512))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3871)
,	/* FN_LAMBDA3511: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,0)
, bytes2word(HEAP_ARG,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_CVAL_P1)
, bytes2word(7,HEAP_ARG,5,HEAP_P1)
, bytes2word(0,HEAP_ARG,4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(8,2,0)
,	/* CT_v3871: (byte 0) */
  HW(6,5)
, 0
,	/* F0_LAMBDA3511: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3511),5)
, useLabel(CF_SyntaxPos_46HasPos_46PosCode_46PosExp)
, VAPTAG(useLabel(FN_SyntaxPos_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Case_46matchMany))
, CAPTAG(useLabel(FN_LAMBDA3510),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3872)
,	/* FN_LAMBDA3510: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,8,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,5)
, bytes2word(HEAP_OFF_N1,18,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,6,HEAP_ARG,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v3872: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3510: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3510),4)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3878)
,	/* FN_LAMBDA3509: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,28,TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(60),BOT(60),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3877: (byte 2) */
  bytes2word(TOP(56),BOT(56),POP_I1,JUMP)
,	/* v3876: (byte 2) */
  bytes2word(10,0,UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_I2,HEAP_ARG_ARG_RET_EVAL)
,	/* v3873: (byte 2) */
  bytes2word(1,2,HEAP_CVAL_I4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3878: (byte 0) */
  HW(3,3)
, 0
,	/* F0_LAMBDA3509: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3509),3)
, VAPTAG(useLabel(FN_Case_46fixFuns))
, VAPTAG(useLabel(FN_LAMBDA3508))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3880)
,	/* FN_LAMBDA3508: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3879)
,	/* CT_v3880: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3508: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3508))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3885)
,	/* FN_Case_46matchMany: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v3882: (byte 2) */
  bytes2word(TOP(7),BOT(7),POP_I1,PUSH_ARG_I3)
,	/* v3883: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_I1,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_I1,HEAP_OFF_N1,7)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3885: (byte 0) */
  HW(2,3)
, 0
,	/* F0_Case_46matchMany: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchMany),3)
, VAPTAG(useLabel(FN_Case_46matchMany))
, VAPTAG(useLabel(FN_Case_46matchOne))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3905)
,	/* FN_Case_46matchOne: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v3901: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v3889: (byte 2) */
  bytes2word(209,0,UNPACK,2)
, bytes2word(PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(6,NOP,TOP(12),BOT(12))
, bytes2word(TOP(55),BOT(55),TOP(91),BOT(91))
, bytes2word(TOP(128),BOT(128),TOP(148),BOT(148))
,	/* v3891: (byte 2) */
  bytes2word(TOP(168),BOT(168),UNPACK,1)
, bytes2word(PUSH_P1,0,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,1)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,2)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,0)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_P1,3,HEAP_CVAL_P1,8)
, bytes2word(HEAP_P1,4,HEAP_I1,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
,	/* v3894: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,1,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_I5,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(4,HEAP_I1,HEAP_CVAL_P1,12)
, bytes2word(HEAP_I2,HEAP_P1,0,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
,	/* v3895: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_I5,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,3,HEAP_I1)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_I2,HEAP_CVAL_P1,13,HEAP_P1)
, bytes2word(0,HEAP_P1,3,HEAP_I1)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,9,HEAP_OFF_N1)
,	/* v3896: (byte 2) */
  bytes2word(7,RETURN_EVAL,UNPACK,1)
, bytes2word(HEAP_CVAL_P1,14,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(15,HEAP_I2,HEAP_P1,0)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,7,HEAP_OFF_N1)
,	/* v3897: (byte 2) */
  bytes2word(6,RETURN_EVAL,UNPACK,1)
, bytes2word(HEAP_CVAL_P1,14,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(16,HEAP_I2,HEAP_P1,0)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,7,HEAP_OFF_N1)
,	/* v3898: (byte 2) */
  bytes2word(6,RETURN_EVAL,UNPACK,1)
, bytes2word(PUSH_P1,0,ZAP_STACK_P1,1)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,2)
, bytes2word(HEAP_CVAL_P1,14,HEAP_P1,3)
, bytes2word(HEAP_CVAL_P1,17,HEAP_P1,4)
, bytes2word(HEAP_I1,HEAP_ARG,3,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,7)
,	/* v3886: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_P1,18,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3905: (byte 0) */
  HW(17,3)
, 0
,	/* F0_Case_46matchOne: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchOne),3)
, VAPTAG(useLabel(FN_Prelude_46unzip))
, VAPTAG(useLabel(FN_Prelude_46concatMap))
, useLabel(F0_CaseHelp_46getTrans)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_CaseHelp_46varExpT))
, CAPTAG(useLabel(FN_LAMBDA3516),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Prelude_46fst)
, CAPTAG(useLabel(FN_LAMBDA3519),1)
, CAPTAG(useLabel(FN_LAMBDA3522),1)
, VAPTAG(useLabel(FN_CaseHelp_46varExp))
, CAPTAG(useLabel(FN_LAMBDA3526),1)
, CAPTAG(useLabel(FN_LAMBDA3530),1)
, CAPTAG(useLabel(FN_LAMBDA3540),1)
, VAPTAG(useLabel(FN_LAMBDA3541))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3907)
,	/* FN_LAMBDA3541: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3906)
,	/* CT_v3907: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3541: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3541))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3911)
,	/* FN_LAMBDA3540: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,5,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,3,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,4,HEAP_CVAL_I4,HEAP_P1)
, bytes2word(0,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_I2,HEAP_I1,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(11,HEAP_OFF_N1,9,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3911: (byte 0) */
  HW(4,5)
, 0
,	/* F0_LAMBDA3540: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3540),5)
, VAPTAG(useLabel(FN_CaseHelp_46getTrans))
, CAPTAG(useLabel(FN_CaseLib_46caseTranslate),2)
, VAPTAG(useLabel(FN_LAMBDA3539))
, VAPTAG(useLabel(FN_State_46_62_61_62))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3917)
,	/* FN_LAMBDA3539: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(6,ZAP_ARG,6,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,28,NOP)
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(60),BOT(60))
,	/* v3916: (byte 4) */
  bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3915: (byte 4) */
  bytes2word(POP_I1,JUMP,42,0)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_I2,PUSH_HEAP,HEAP_CVAL_I5,HEAP_P1)
, bytes2word(3,HEAP_CVAL_P1,6,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,8,HEAP_ARG)
, bytes2word(1,HEAP_P1,3,HEAP_P1)
, bytes2word(0,HEAP_I1,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG_ARG,4,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
,	/* v3912: (byte 4) */
  bytes2word(12,HEAP_OFF_N1,11,RETURN_EVAL)
, bytes2word(HEAP_CVAL_P1,10,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3917: (byte 0) */
  HW(9,6)
, 0
,	/* F0_LAMBDA3539: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3539),6)
, VAPTAG(useLabel(FN_SyntaxUtil_46dropPatAs))
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos))
, VAPTAG(useLabel(FN_Bind_46identPat))
, VAPTAG(useLabel(FN_Prelude_46length))
, CAPTAG(useLabel(FN_CaseLib_46caseTuple),2)
, CAPTAG(useLabel(FN_LAMBDA3537),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA3538))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3919)
,	/* FN_LAMBDA3538: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3918)
,	/* CT_v3919: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3538: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3538))
, bytes2word(9,0,8,1)
, bytes2word(7,2,6,3)
, bytes2word(5,4,4,5)
, bytes2word(3,6,2,7)
, bytes2word(1,8,0,9)
, useLabel(CT_v3920)
,	/* FN_LAMBDA3537: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,9,3)
, bytes2word(HEAP_ARG_ARG,4,5,HEAP_ARG_ARG)
, bytes2word(6,7,HEAP_ARG,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(12,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3920: (byte 0) */
  HW(3,9)
, 0
,	/* F0_LAMBDA3537: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3537),9)
, CAPTAG(useLabel(FN_LAMBDA3536),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseUnique)
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v3921)
,	/* FN_LAMBDA3536: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,10,5,HEAP_ARG_ARG)
, bytes2word(6,7,HEAP_ARG_ARG,8)
, bytes2word(9,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,13,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v3921: (byte 0) */
  HW(3,10)
, 0
,	/* F0_LAMBDA3536: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3536),10)
, CAPTAG(useLabel(FN_LAMBDA3535),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseState)
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v3922)
,	/* FN_LAMBDA3535: (byte 0) */
  bytes2word(NEEDHEAP_P1,60,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(11,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_I5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,5,HEAP_OFF_N1)
, bytes2word(6,HEAP_INT_P1,0,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,6,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,7,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG_ARG,6,5,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,4,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_CVAL_P1,13)
, bytes2word(HEAP_CVAL_P1,14,HEAP_INT_P1,1)
, bytes2word(HEAP_CVAL_P1,15,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,20,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,PUSH_HEAP,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,15,HEAP_OFF_N1,13)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
, CONSTR(12,5,0)
, CONSTR(1,0,0)
,	/* CT_v3922: (byte 0) */
  HW(17,11)
, 0
,	/* F0_LAMBDA3535: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3535),11)
, VAPTAG(useLabel(FN_IntState_46mrpsIS))
, CAPTAG(useLabel(FN_TokenId_46forceM),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Util_46Extra_46strPos)
, useLabel(F0_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos)
, useLabel(F0_TokenId_46visible)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_TokenId_46tunknown)
, CAPTAG(useLabel(FN_CaseLib_46caseAdd),2)
, CAPTAG(useLabel(FN_Case_46oneSel),1)
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Int_46enumFrom))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_State_46mapS))
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_LAMBDA3534),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v3923)
,	/* FN_LAMBDA3534: (byte 0) */
  bytes2word(NEEDHEAP_P1,44,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(4,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(10,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_I3,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,4,HEAP_CVAL_N1)
, bytes2word(5,HEAP_CVAL_N1,6,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_N1,7,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,7,HEAP_ARG_ARG)
, bytes2word(6,1,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_P1,8,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,11)
, bytes2word(HEAP_ARG_ARG,8,9,HEAP_ARG)
, bytes2word(10,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,13,HEAP_OFF_N1,10)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
, CONSTR(1,1,0)
, CONSTR(0,0,0)
, CONSTR(0,1,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(15,2,0)
,	/* CT_v3923: (byte 0) */
  HW(7,11)
, 0
,	/* F0_LAMBDA3534: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3534),11)
, useLabel(CF_Util_46Extra_46noPos)
, CAPTAG(useLabel(FN_LAMBDA3531),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_Case_46matchCase))
, CAPTAG(useLabel(FN_LAMBDA3533),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v3924)
,	/* FN_LAMBDA3533: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,8,3)
, bytes2word(HEAP_ARG,4,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,5)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,7)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(11,HEAP_OFF_N1,6,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v3924: (byte 0) */
  HW(4,8)
, 0
,	/* F0_LAMBDA3533: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3533),8)
, CAPTAG(useLabel(FN_LAMBDA3532),1)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46match))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3925)
,	/* FN_LAMBDA3532: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_ARG_ARG,4)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(8,HEAP_CVAL_IN3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,8,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,5,HEAP_OFF_N1)
, bytes2word(20,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(6,HEAP_ARG,6,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v3925: (byte 0) */
  HW(1,6)
, 0
,	/* F0_LAMBDA3532: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3532),6)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3926)
,	/* FN_LAMBDA3531: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(14,2,0)
,	/* CT_v3926: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3531: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3531),2)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3930)
,	/* FN_LAMBDA3530: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,3,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_P1,8,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,9)
, bytes2word(HEAP_P1,0,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,11)
, bytes2word(HEAP_ARG,3,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,16,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3930: (byte 0) */
  HW(11,4)
, 0
,	/* F0_LAMBDA3530: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3530),4)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_CaseHelp_46getTrans)
, useLabel(F0_Prelude_46fst)
, VAPTAG(useLabel(FN_Prelude_46concatMap))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_CaseLib_46caseTranslate),2)
, CAPTAG(useLabel(FN_Case_46matchAltIf),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA3529),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_State_46_62_61_62))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3931)
,	/* FN_LAMBDA3529: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,3)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3931: (byte 0) */
  HW(2,3)
, 0
,	/* F0_LAMBDA3529: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3529),3)
, CAPTAG(useLabel(FN_LAMBDA3528),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3932)
,	/* FN_LAMBDA3528: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3932: (byte 0) */
  HW(4,3)
, 0
,	/* F0_LAMBDA3528: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3528),3)
, CAPTAG(useLabel(FN_LAMBDA3527),2)
, VAPTAG(useLabel(FN_Prelude_46foldr1))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_CaseOpt_46optFatBar))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3933)
,	/* FN_LAMBDA3527: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(5,3,0)
, CONSTR(1,0,0)
,	/* CT_v3933: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3527: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3527),2)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3937)
,	/* FN_LAMBDA3526: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,3,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_P1,8,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,9)
, bytes2word(HEAP_P1,0,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,11)
, bytes2word(HEAP_ARG,3,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,16,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3937: (byte 0) */
  HW(11,4)
, 0
,	/* F0_LAMBDA3526: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3526),4)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_CaseHelp_46getTrans)
, useLabel(F0_Prelude_46fst)
, VAPTAG(useLabel(FN_Prelude_46concatMap))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_CaseLib_46caseTranslate),2)
, CAPTAG(useLabel(FN_Case_46matchNK),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA3525),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_State_46_62_61_62))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3938)
,	/* FN_LAMBDA3525: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,3)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3938: (byte 0) */
  HW(2,3)
, 0
,	/* F0_LAMBDA3525: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3525),3)
, CAPTAG(useLabel(FN_LAMBDA3524),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3939)
,	/* FN_LAMBDA3524: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3939: (byte 0) */
  HW(4,3)
, 0
,	/* F0_LAMBDA3524: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3524),3)
, CAPTAG(useLabel(FN_LAMBDA3523),2)
, VAPTAG(useLabel(FN_Prelude_46foldr1))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_CaseOpt_46optFatBar))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3940)
,	/* FN_LAMBDA3523: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(5,3,0)
, CONSTR(1,0,0)
,	/* CT_v3940: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3523: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3523),2)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3944)
,	/* FN_LAMBDA3522: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,5,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,4,HEAP_CVAL_I3)
, bytes2word(HEAP_I1,HEAP_P1,0,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG,4)
, bytes2word(HEAP_P1,3,HEAP_I2,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(6,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,19,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3944: (byte 0) */
  HW(7,5)
, 0
,	/* F0_LAMBDA3522: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3522),5)
, CAPTAG(useLabel(FN_CaseLib_46caseTranslate),2)
, CAPTAG(useLabel(FN_Case_46matchAltInt),1)
, VAPTAG(useLabel(FN_CaseHelp_46sortInt))
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA3521),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_State_46_62_61_62))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3945)
,	/* FN_LAMBDA3521: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,2)
, bytes2word(4,HEAP_ARG,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(6,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3945: (byte 0) */
  HW(2,4)
, 0
,	/* F0_LAMBDA3521: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3521),4)
, CAPTAG(useLabel(FN_LAMBDA3520),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3946)
,	/* FN_LAMBDA3520: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(2,3,0)
,	/* CT_v3946: (byte 0) */
  HW(3,4)
, 0
,	/* F0_LAMBDA3520: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3520),4)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46PosCode_46PosExp_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_CaseOpt_46optFatBar))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3950)
,	/* FN_LAMBDA3519: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,4,HEAP_CVAL_I3)
, bytes2word(HEAP_I1,HEAP_P1,0,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(7,HEAP_ARG,3,HEAP_P1)
, bytes2word(3,HEAP_I2,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(18,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3950: (byte 0) */
  HW(7,4)
, 0
,	/* F0_LAMBDA3519: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3519),4)
, CAPTAG(useLabel(FN_CaseLib_46caseTranslate),2)
, CAPTAG(useLabel(FN_Case_46matchAltCon),1)
, VAPTAG(useLabel(FN_CaseHelp_46sortCon))
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA3518),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_State_46_62_61_62))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3951)
,	/* FN_LAMBDA3518: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,2)
, bytes2word(4,HEAP_ARG,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(6,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3951: (byte 0) */
  HW(2,4)
, 0
,	/* F0_LAMBDA3518: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3518),4)
, CAPTAG(useLabel(FN_LAMBDA3517),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3952)
,	/* FN_LAMBDA3517: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(2,3,0)
,	/* CT_v3952: (byte 0) */
  HW(3,4)
, 0
,	/* F0_LAMBDA3517: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3517),4)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46PosCode_46PosExp_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_CaseOpt_46optFatBar))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3956)
,	/* FN_LAMBDA3516: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,4,HEAP_CVAL_I3)
, bytes2word(HEAP_I1,HEAP_P1,0,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_I5,HEAP_I2,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,13,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3956: (byte 0) */
  HW(5,4)
, 0
,	/* F0_LAMBDA3516: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3516),4)
, CAPTAG(useLabel(FN_CaseLib_46caseTranslate),2)
, VAPTAG(useLabel(FN_Case_46match))
, CAPTAG(useLabel(FN_LAMBDA3515),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_State_46_62_61_62))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3957)
,	/* FN_LAMBDA3515: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3957: (byte 0) */
  HW(2,2)
, 0
,	/* F0_LAMBDA3515: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3515),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3998)
,	/* FN_Case_46matchAltIf: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG_I3,EVAL,UNPACK)
, bytes2word(2,PUSH_P1,0,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,28,NOP)
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(60),BOT(60))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(163),BOT(163))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(314),BOT(314))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3992: (byte 4) */
  bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v3965: (byte 4) */
  bytes2word(POP_I1,JUMP,16,1)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3993: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v3969: (byte 4) */
  bytes2word(POP_I1,JUMP,84,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3994: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v3973: (byte 4) */
  bytes2word(POP_I1,JUMP,63,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3995: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v3977: (byte 4) */
  bytes2word(POP_I1,JUMP,42,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v3996: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v3981: (byte 4) */
  bytes2word(POP_I1,JUMP,21,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_I2,HEAP_P1)
, bytes2word(6,HEAP_ARG,1,HEAP_P1)
, bytes2word(8,HEAP_ARG,2,HEAP_P1)
, bytes2word(9,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
,	/* v3978: (byte 3) */
  bytes2word(HEAP_OFF_N1,9,RETURN_EVAL,POP_P1)
,	/* v3974: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v3970: (byte 1) */
  bytes2word(0,POP_P1,2,JUMP)
,	/* v3966: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v3982: (byte 3) */
  bytes2word(JUMP,169,0,UNPACK)
, bytes2word(2,PUSH_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,7,TOP(18),BOT(18))
, bytes2word(TOP(37),BOT(37),TOP(14),BOT(14))
, bytes2word(TOP(14),BOT(14),TOP(101),BOT(101))
,	/* v3997: (byte 4) */
  bytes2word(TOP(120),BOT(120),TOP(14),BOT(14))
,	/* v3986: (byte 4) */
  bytes2word(POP_I1,JUMP,123,0)
, bytes2word(UNPACK,2,HEAP_CVAL_P1,6)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_I2)
, bytes2word(HEAP_P1,4,HEAP_P1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_P1,7)
,	/* v3987: (byte 3) */
  bytes2word(HEAP_OFF_N1,8,RETURN_EVAL,UNPACK)
, bytes2word(2,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_I2,HEAP_CVAL_P1,10)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,16,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,15,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_I2,HEAP_P1,4)
, bytes2word(HEAP_P1,5,HEAP_CVAL_I4,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,8,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,12)
,	/* v3988: (byte 3) */
  bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,UNPACK)
, bytes2word(2,HEAP_CVAL_P1,18,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_I2,HEAP_P1)
, bytes2word(4,HEAP_P1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_P1,16,HEAP_OFF_N1)
,	/* v3989: (byte 2) */
  bytes2word(8,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_P1,19,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_I2,HEAP_P1,4)
, bytes2word(HEAP_P1,5,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_P1,20,HEAP_OFF_N1,8)
,	/* v3983: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v3990: (byte 2) */
  bytes2word(18,0,UNPACK,3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_I2,HEAP_P1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,21)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_OFF_N1)
,	/* v3962: (byte 2) */
  bytes2word(6,RETURN_EVAL,POP_P1,2)
,	/* v3958: (byte 3) */
  bytes2word(JUMP,2,0,HEAP_CVAL_P1)
, bytes2word(22,HEAP_CVAL_P1,23,HEAP_CVAL_P1)
, bytes2word(24,HEAP_CVAL_P1,25,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,26,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,27,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3998: (byte 0) */
  HW(25,3)
, 0
,	/* F0_Case_46matchAltIf: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchAltIf),3)
, CAPTAG(useLabel(FN_LAMBDA3543),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseEqualNumEq)
, CAPTAG(useLabel(FN_LAMBDA3544),1)
, useLabel(F0_CaseLib_46caseEqInteger)
, VAPTAG(useLabel(FN_LAMBDA3545))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_LAMBDA3546))
, VAPTAG(useLabel(FN_LAMBDA3547))
, VAPTAG(useLabel(FN_LAMBDA3548))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_Util_46Extra_46strace),1)
, CAPTAG(useLabel(FN_LAMBDA3549),1)
, useLabel(F0_CaseLib_46caseEqDouble)
, VAPTAG(useLabel(FN_Prelude_46_36))
, CAPTAG(useLabel(FN_LAMBDA3550),1)
, CAPTAG(useLabel(FN_LAMBDA3551),1)
, useLabel(F0_CaseLib_46caseEqFloat)
, VAPTAG(useLabel(FN_Case_46matchAltIf))
, VAPTAG(useLabel(FN_LAMBDA3552))
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Prelude_462_46getPos))
, useLabel(CF_SyntaxPos_46HasPos_46Syntax_46Exp)
, useLabel(CF_SyntaxPos_46HasPos_46Syntax_46Fun)
, VAPTAG(useLabel(FN_LAMBDA3553))
, VAPTAG(useLabel(FN_Prelude_46error))
, bytes2word(0,0,0,0)
, useLabel(CT_v4000)
,	/* FN_LAMBDA3553: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3999)
,	/* CT_v4000: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3553: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3553))
, bytes2word(0,0,0,0)
, useLabel(CT_v4002)
,	/* FN_LAMBDA3552: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4001)
,	/* CT_v4002: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3552: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3552))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4003)
,	/* FN_LAMBDA3551: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG_RET_EVAL,5,6)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4003: (byte 0) */
  HW(1,6)
, 0
,	/* F0_LAMBDA3551: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3551),6)
, VAPTAG(useLabel(FN_Case_46mkIfLit))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4004)
,	/* FN_LAMBDA3550: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG_RET_EVAL,5,6)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4004: (byte 0) */
  HW(1,6)
, 0
,	/* F0_LAMBDA3550: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3550),6)
, VAPTAG(useLabel(FN_Case_46mkIfLit))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4005)
,	/* FN_LAMBDA3549: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG_RET_EVAL,5,6)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4005: (byte 0) */
  HW(1,6)
, 0
,	/* F0_LAMBDA3549: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3549),6)
, VAPTAG(useLabel(FN_Case_46mkIfLit))
, bytes2word(0,0,0,0)
, useLabel(CT_v4007)
,	/* FN_LAMBDA3548: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4006)
,	/* CT_v4007: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3548: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3548))
, bytes2word(0,0,0,0)
, useLabel(CT_v4009)
,	/* FN_LAMBDA3547: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4008)
,	/* CT_v4009: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3547: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3547))
, bytes2word(0,0,0,0)
, useLabel(CT_v4010)
,	/* FN_LAMBDA3546: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3999)
,	/* CT_v4010: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3546: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3546))
, bytes2word(0,0,0,0)
, useLabel(CT_v4012)
,	/* FN_LAMBDA3545: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4011)
,	/* CT_v4012: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3545: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3545))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4013)
,	/* FN_LAMBDA3544: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG_RET_EVAL,5,6)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4013: (byte 0) */
  HW(1,6)
, 0
,	/* F0_LAMBDA3544: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3544),6)
, VAPTAG(useLabel(FN_Case_46mkIfLit))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4014)
,	/* FN_LAMBDA3543: (byte 0) */
  bytes2word(NEEDHEAP_P1,49,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG_ARG,7,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_OFF_N1,14)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,24)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,5,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,5,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,15,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_N1,5,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,0,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(14,2,0)
,	/* CT_v4014: (byte 0) */
  HW(6,7)
, 0
,	/* F0_LAMBDA3543: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3543),7)
, CAPTAG(useLabel(FN_LAMBDA3542),3)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Case_46caseExp))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, VAPTAG(useLabel(FN_Case_46match))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4015)
,	/* FN_LAMBDA3542: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG,4,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(7,5,0)
, CONSTR(0,0,0)
,	/* CT_v4015: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA3542: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3542),4)
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4016)
,	/* FN_Case_46mkIfLit: (byte 0) */
  bytes2word(NEEDHEAP_P1,46,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_ARG_ARG,3)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,21,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,5,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_P1,7,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(15,HEAP_OFF_N1,6,HEAP_CVAL_N1)
, bytes2word(5,HEAP_CVAL_I4,HEAP_OFF_N1,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,0,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(14,2,0)
,	/* CT_v4016: (byte 0) */
  HW(5,6)
, 0
,	/* F0_Case_46mkIfLit: (byte 0) */
  CAPTAG(useLabel(FN_Case_46mkIfLit),6)
, CAPTAG(useLabel(FN_LAMBDA3554),3)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46caseExp))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, VAPTAG(useLabel(FN_Case_46match))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4017)
,	/* FN_LAMBDA3554: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG,4,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(7,5,0)
, CONSTR(0,0,0)
,	/* CT_v4017: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA3554: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3554),4)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4021)
,	/* FN_Case_46matchAltCon: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_I1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,6)
, bytes2word(HEAP_ARG,1,HEAP_I1,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4021: (byte 0) */
  HW(5,2)
, 0
,	/* F0_Case_46matchAltCon: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchAltCon),2)
, VAPTAG(useLabel(FN_Prelude_46head))
, VAPTAG(useLabel(FN_Prelude_46fst))
, CAPTAG(useLabel(FN_CaseLib_46caseUniques),2)
, CAPTAG(useLabel(FN_LAMBDA3557),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4022)
,	/* FN_LAMBDA3557: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG,4,HEAP_CVAL_P1)
, bytes2word(6,HEAP_P1,0,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,10)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG_ARG,3)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,0,0)
,	/* CT_v4022: (byte 0) */
  HW(9,4)
, 0
,	/* F0_LAMBDA3557: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3557),4)
, CAPTAG(useLabel(FN_LAMBDA3555),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46match))
, CAPTAG(useLabel(FN_LAMBDA3556),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4023)
,	/* FN_LAMBDA3556: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(6,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,4,0)
,	/* CT_v4023: (byte 0) */
  HW(2,3)
, 0
,	/* F0_LAMBDA3556: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3556),3)
, useLabel(CF_Util_46Extra_46noPos)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4024)
,	/* FN_LAMBDA3555: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,2,0)
,	/* CT_v4024: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3555: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3555),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4028)
,	/* FN_Case_46matchAltInt: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_OFF_N1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,2,HEAP_I1,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I5,HEAP_P1,0)
, bytes2word(HEAP_ARG,1,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,0,0)
,	/* CT_v4028: (byte 0) */
  HW(4,3)
, 0
,	/* F0_Case_46matchAltInt: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchAltInt),3)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46match))
, CAPTAG(useLabel(FN_LAMBDA3558),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4029)
,	/* FN_LAMBDA3558: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(6,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
,	/* CT_v4029: (byte 0) */
  HW(2,3)
, 0
,	/* F0_LAMBDA3558: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3558),3)
, useLabel(CF_Util_46Extra_46noPos)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4040)
,	/* FN_Case_46matchNK: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,UNPACK)
, bytes2word(2,PUSH_P1,0,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,28,NOP)
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
, bytes2word(TOP(56),BOT(56),TOP(56),BOT(56))
,	/* v4039: (byte 4) */
  bytes2word(TOP(60),BOT(60),TOP(56),BOT(56))
,	/* v4037: (byte 4) */
  bytes2word(POP_I1,JUMP,42,0)
, bytes2word(UNPACK,6,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_P1,7)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I5,HEAP_I2,HEAP_ARG)
, bytes2word(1,HEAP_P1,4,HEAP_I1)
, bytes2word(HEAP_P1,5,HEAP_P1,0)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
,	/* v4034: (byte 4) */
  bytes2word(12,HEAP_OFF_N1,9,RETURN_EVAL)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v4030: (byte 1) */
  bytes2word(0,HEAP_CVAL_P1,7,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4040: (byte 0) */
  HW(6,3)
, 0
,	/* F0_Case_46matchNK: (byte 0) */
  CAPTAG(useLabel(FN_Case_46matchNK),3)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Case_46match))
, CAPTAG(useLabel(FN_LAMBDA3562),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA3563))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4042)
,	/* FN_LAMBDA3563: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4041)
,	/* CT_v4042: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3563: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3563))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4043)
,	/* FN_LAMBDA3562: (byte 0) */
  bytes2word(NEEDHEAP_P1,33,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG_ARG,6)
, bytes2word(2,HEAP_CVAL_IN3,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_N1,5)
, bytes2word(HEAP_OFF_N1,10,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,6,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG_ARG,6,1,HEAP_OFF_N1)
, bytes2word(6,HEAP_CVAL_I3,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG)
, bytes2word(7,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,8,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,3,0)
, CONSTR(1,2,0)
, CONSTR(0,3,0)
, CONSTR(1,1,0)
, CONSTR(0,1,0)
, CONSTR(14,2,0)
, CONSTR(0,0,0)
,	/* CT_v4043: (byte 0) */
  HW(3,7)
, 0
,	/* F0_LAMBDA3562: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3562),7)
, VAPTAG(useLabel(FN_Case_46caseDecl))
, CAPTAG(useLabel(FN_LAMBDA3561),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4044)
,	/* FN_LAMBDA3561: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG_ARG,6,4,HEAP_ARG)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,8,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4044: (byte 0) */
  HW(3,6)
, 0
,	/* F0_LAMBDA3561: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3561),6)
, VAPTAG(useLabel(FN_Case_46caseExp))
, CAPTAG(useLabel(FN_LAMBDA3560),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4045)
,	/* FN_LAMBDA3560: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_IN3,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,5)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,6,HEAP_ARG_ARG,4)
, bytes2word(1,HEAP_OFF_N1,6,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_I4,HEAP_ARG_ARG)
, bytes2word(3,6,HEAP_ARG_ARG,4)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,7,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(13,3,0)
, CONSTR(1,2,0)
, CONSTR(0,3,0)
, CONSTR(1,1,0)
, CONSTR(0,1,0)
, CONSTR(0,0,0)
,	/* CT_v4045: (byte 0) */
  HW(3,6)
, 0
,	/* F0_LAMBDA3560: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3560),6)
, VAPTAG(useLabel(FN_Case_46caseDecl))
, CAPTAG(useLabel(FN_LAMBDA3559),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4046)
,	/* FN_LAMBDA3559: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,2,HEAP_ARG_ARG)
, bytes2word(3,5,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,10,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,10,HEAP_OFF_N1)
, bytes2word(6,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(16,HEAP_ARG_ARG,3,1)
, bytes2word(HEAP_OFF_N1,10,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(7,5,0)
, CONSTR(6,0,0)
, CONSTR(1,4,0)
, CONSTR(0,0,0)
,	/* CT_v4046: (byte 0) */
  HW(1,5)
, 0
,	/* F0_LAMBDA3559: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3559),5)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(1,0,0,1)
, useLabel(CT_v4051)
,	/* FN_Case_46caseCode: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4048: (byte 2) */
  bytes2word(TOP(16),BOT(16),UNPACK,2)
, bytes2word(HEAP_CVAL_I3,HEAP_I1,HEAP_P1,0)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
,	/* v4049: (byte 2) */
  bytes2word(5,RETURN_EVAL,UNPACK,6)
, bytes2word(HEAP_CVAL_P1,6,HEAP_I1,HEAP_I2)
, bytes2word(HEAP_P1,4,HEAP_P1,5)
, bytes2word(HEAP_P1,0,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(9,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4051: (byte 0) */
  HW(4,1)
, 0
,	/* F0_Case_46caseCode: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseCode),1)
, CAPTAG(useLabel(FN_LAMBDA3568),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseState)
, CAPTAG(useLabel(FN_LAMBDA3576),1)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4052)
,	/* FN_LAMBDA3576: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,5)
, bytes2word(1,HEAP_ARG,2,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,3,7,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,11)
, bytes2word(HEAP_OFF_N1,8,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4052: (byte 0) */
  HW(3,7)
, 0
,	/* F0_LAMBDA3576: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3576),7)
, CAPTAG(useLabel(FN_FSLib_46fsExp2i),2)
, CAPTAG(useLabel(FN_LAMBDA3575),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4053)
,	/* FN_LAMBDA3575: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG_ARG,3,6,HEAP_ARG_ARG)
, bytes2word(4,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,10,HEAP_OFF_N1)
, bytes2word(9,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4053: (byte 0) */
  HW(5,6)
, 0
,	/* F0_LAMBDA3575: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3575),6)
, VAPTAG(useLabel(FN_Prelude_46length))
, VAPTAG(useLabel(FN_Prelude_46Num_46Prelude_46Int_46_43))
, CAPTAG(useLabel(FN_CaseLib_46caseTuple),2)
, CAPTAG(useLabel(FN_LAMBDA3574),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4054)
,	/* FN_LAMBDA3574: (byte 0) */
  bytes2word(NEEDHEAP_P1,46,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG,6,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I5,HEAP_ARG,7)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,2)
, bytes2word(HEAP_P1,0,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,10,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,11,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_CVAL_I4,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,12)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,25)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,14)
, bytes2word(HEAP_ARG_ARG,4,5,HEAP_ARG)
, bytes2word(6,PUSH_HEAP,HEAP_CVAL_P1,15)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(15,2,0)
,	/* CT_v4054: (byte 0) */
  HW(13,7)
, 0
,	/* F0_LAMBDA3574: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3574),7)
, CAPTAG(useLabel(FN_LAMBDA3569),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(CF_Util_46Extra_46noPos)
, CAPTAG(useLabel(FN_LAMBDA3570),1)
, CAPTAG(useLabel(FN_LAMBDA3571),2)
, CAPTAG(useLabel(FN_Prelude_46flip),1)
, CAPTAG(useLabel(FN_LAMBDA3572),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, VAPTAG(useLabel(FN_Case_46forceOrder))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, VAPTAG(useLabel(FN_Case_46caseExp))
, CAPTAG(useLabel(FN_LAMBDA3573),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4055)
,	/* FN_LAMBDA3573: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,7,HEAP_ARG)
, bytes2word(4,HEAP_CVAL_IN3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,8,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,5,0)
, CONSTR(0,0,0)
,	/* CT_v4055: (byte 0) */
  HW(3,4)
, 0
,	/* F0_LAMBDA3573: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3573),4)
, CAPTAG(useLabel(FN_Util_46Extra_46pair),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(1,0,0,1)
, useLabel(CT_v4056)
,	/* FN_LAMBDA3572: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,1,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(14,2,0)
,	/* CT_v4056: (byte 0) */
  HW(1,1)
, 0
,	/* F0_LAMBDA3572: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3572),1)
, useLabel(CF_Util_46Extra_46noPos)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4057)
,	/* FN_LAMBDA3571: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v4057: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3571: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3571),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v4058)
,	/* FN_LAMBDA3570: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,1,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
,	/* CT_v4058: (byte 0) */
  HW(1,1)
, 0
,	/* F0_LAMBDA3570: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3570),1)
, useLabel(CF_Util_46Extra_46noPos)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4059)
,	/* FN_LAMBDA3569: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(14,2,0)
,	/* CT_v4059: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3569: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3569),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4060)
,	/* FN_LAMBDA3568: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,3)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_I5,HEAP_ARG_ARG,2)
, bytes2word(1,HEAP_CVAL_P1,6,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(8,HEAP_ARG,3,HEAP_P1)
, bytes2word(0,HEAP_ARG,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4060: (byte 0) */
  HW(7,3)
, 0
,	/* F0_LAMBDA3568: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3568),3)
, VAPTAG(useLabel(FN_IntState_46lookupIS))
, VAPTAG(useLabel(FN_Maybe_46fromJust))
, CAPTAG(useLabel(FN_FSLib_46fsExp2i),3)
, VAPTAG(useLabel(FN_Info_46superclassesI))
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA3567),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4061)
,	/* FN_LAMBDA3567: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,9,HEAP_ARG,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4061: (byte 0) */
  HW(8,4)
, 0
,	/* F0_LAMBDA3567: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3567),4)
, VAPTAG(useLabel(FN_Info_46methodsI))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46fst)
, VAPTAG(useLabel(FN_Case_46forceOrder))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_CaseLib_46caseUniques),2)
, CAPTAG(useLabel(FN_LAMBDA3566),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4062)
,	/* FN_LAMBDA3566: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG_ARG,1,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4062: (byte 0) */
  HW(4,2)
, 0
,	/* F0_LAMBDA3566: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3566),2)
, VAPTAG(useLabel(FN_Prelude_46length))
, CAPTAG(useLabel(FN_CaseLib_46caseTuple),2)
, CAPTAG(useLabel(FN_LAMBDA3565),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4063)
,	/* FN_LAMBDA3565: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,6)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_ARG,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4063: (byte 0) */
  HW(5,3)
, 0
,	/* F0_LAMBDA3565: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3565),3)
, CAPTAG(useLabel(FN_Case_46Prelude_461055_46select),3)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_State_46mapS))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4067)
,	/* FN_Case_46Prelude_461055_46select: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG,3,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(8,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4067: (byte 0) */
  HW(3,4)
, 0
,	/* F0_Case_46Prelude_461055_46select: (byte 0) */
  CAPTAG(useLabel(FN_Case_46Prelude_461055_46select),4)
, CAPTAG(useLabel(FN_LAMBDA3564),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_CaseLib_46caseUnique)
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4068)
,	/* FN_LAMBDA3564: (byte 0) */
  bytes2word(NEEDHEAP_P1,45,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG_ARG,2,6,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_IN3,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,6,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG,4,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,5,HEAP_CVAL_N1)
, bytes2word(5,HEAP_CVAL_I3,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(6,HEAP_CVAL_I3,HEAP_OFF_N1,22)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,35)
, bytes2word(HEAP_OFF_N1,35,HEAP_OFF_N1,31)
, bytes2word(HEAP_OFF_N1,9,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,5,0)
, CONSTR(2,3,0)
, CONSTR(0,4,0)
, CONSTR(8,2,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v4068: (byte 0) */
  HW(4,6)
, 0
,	/* F0_LAMBDA3564: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3564),6)
, useLabel(CF_Util_46Extra_46noPos)
, CAPTAG(useLabel(FN_Util_46Extra_46pair),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(1,0,0,1)
, useLabel(CT_v4069)
,	/* FN_Case_46caseTopDecls: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4069: (byte 0) */
  HW(5,1)
, 0
,	/* F0_Case_46caseTopDecls: (byte 0) */
  CAPTAG(useLabel(FN_Case_46caseTopDecls),1)
, VAPTAG(useLabel(FN_State_46unitS))
, useLabel(CF_Prelude_46concat)
, VAPTAG(useLabel(FN_State_46mapS))
, useLabel(F0_Case_46caseDecl)
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4079)
,};
Node FN_Case_46caseTopLevel[] = {
  bytes2word(NEEDHEAP_P1,111,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_ARG_ARG,5,2)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,6,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_N1,1,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(5,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_OFF_N1)
, bytes2word(14,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_N1,1,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,2,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,6)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,7,HEAP_OFF_N1)
, bytes2word(86,HEAP_OFF_N1,78,HEAP_OFF_N1)
, bytes2word(69,HEAP_OFF_N1,60,HEAP_OFF_N1)
, bytes2word(51,HEAP_OFF_N1,29,HEAP_OFF_N1)
, bytes2word(20,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(12,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(14,PUSH_I1,PUSH_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,15,HEAP_ARG,4)
, bytes2word(ZAP_ARG_I1,ZAP_ARG_I2,ZAP_ARG,4)
, bytes2word(ZAP_ARG,5,ZAP_ARG,6)
, bytes2word(ZAP_STACK_P1,4,EVAL,NEEDHEAP_I32)
, bytes2word(APPLY,2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_I1,PUSH_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,17,HEAP_ARG,3)
, bytes2word(ZAP_ARG_I3,ZAP_STACK_P1,5,ZAP_STACK_P1)
, bytes2word(4,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(2,EVAL,UNPACK,2)
, bytes2word(PUSH_I1,ZAP_STACK_P1,2,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_P1)
, bytes2word(18,HEAP_CVAL_I5,HEAP_OFF_N1,2)
, bytes2word(HEAP_I2,HEAP_CVAL_P1,19,HEAP_P1)
, bytes2word(4,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,4)
, bytes2word(HEAP_I1,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,11,0)
, CONSTR(8,2,0)
, CONSTR(15,2,0)
, CONSTR(4,0,0)
, CONSTR(14,2,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
,	/* CT_v4079: (byte 0) */
  HW(17,6)
, 0
,};
Node F0_Case_46caseTopLevel[] = {
  CAPTAG(useLabel(FN_Case_46caseTopLevel),6)
, CAPTAG(useLabel(FN_LAMBDA3577),1)
, useLabel(CF_TokenId_46t_95eqInteger)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_Util_46Extra_46noPos)
, useLabel(CF_TokenId_46t_95eqFloat)
, useLabel(CF_TokenId_46t_95eqDouble)
, useLabel(CF_TokenId_46tTrue)
, useLabel(CF_TokenId_46t_95List)
, useLabel(CF_TokenId_46t_95Colon)
, useLabel(CF_TokenId_46t_95patternMatchFail)
, useLabel(CF_TokenId_46t_95undef)
, useLabel(CF_Data_46Map_46empty)
, VAPTAG(useLabel(FN_Case_46caseTopDecls))
, VAPTAG(useLabel(FN_State_46mapS))
, useLabel(F0_Case_46caseCode)
, VAPTAG(useLabel(FN_Prelude_46concat))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4080)
,	/* FN_LAMBDA3577: (byte 0) */
  bytes2word(NEEDHEAP_P1,49,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_N1,2,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,5,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,6,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,6,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,6)
, bytes2word(HEAP_OFF_N1,36,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,7,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(22,3,0)
, CONSTR(7,0,0)
, CONSTR(14,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v4080: (byte 0) */
  HW(5,2)
, 0
,	/* F0_LAMBDA3577: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3577),2)
, useLabel(CF_TokenId_46t_95equalequal)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_Util_46Extra_46noPos)
, useLabel(CF_TokenId_46tNum)
, useLabel(CF_TokenId_46tEq)
,	/* ST_v3999: (byte 0) */
 	/* ST_v4008: (byte 2) */
  bytes2word(10,0,32,32)
, bytes2word(32,32,67,111)
, bytes2word(109,112,105,108)
, bytes2word(101,100,32,99)
, bytes2word(111,100,101,32)
, bytes2word(95,119,105,108)
, bytes2word(108,95,32,103)
, bytes2word(105,118,101,32)
, bytes2word(119,114,111,110)
, bytes2word(103,32,114,101)
, bytes2word(115,117,108,116)
,	/* ST_v4006: (byte 3) */
  bytes2word(46,10,0,32)
, bytes2word(32,32,32,84)
, bytes2word(104,105,115,32)
, bytes2word(99,111,109,112)
, bytes2word(105,108,101,114)
, bytes2word(32,105,115,32)
, bytes2word(97,116,32,102)
, bytes2word(97,117,108,116)
, bytes2word(32,45,32,114)
, bytes2word(101,112,111,114)
, bytes2word(116,32,97,115)
, bytes2word(32,97,32,98)
, bytes2word(117,103,46,10)
,	/* ST_v3593: (byte 1) */
 	/* ST_v3595: (byte 3) */
  bytes2word(0,46,0,58)
,	/* ST_v3691: (byte 2) */
  bytes2word(32,0,65,108)
, bytes2word(108,32,103,117)
, bytes2word(97,114,100,115)
, bytes2word(32,102,97,108)
, bytes2word(115,101,32,102)
, bytes2word(111,114,32,112)
, bytes2word(97,116,116,101)
, bytes2word(114,110,32,97)
,	/* ST_v3869: (byte 3) */
  bytes2word(116,32,0,67)
, bytes2word(97,115,101,58)
, bytes2word(32,78,111,32)
, bytes2word(109,97,116,99)
, bytes2word(104,105,110,103)
, bytes2word(32,97,108,116)
, bytes2word(101,114,110,97)
, bytes2word(116,105,118,101)
, bytes2word(32,105,110,32)
, bytes2word(99,97,115,101)
, bytes2word(32,101,120,112)
, bytes2word(114,101,115,115)
, bytes2word(105,111,110,32)
, bytes2word(97,116,32,51)
, bytes2word(49,49,58,55)
, bytes2word(45,51,49,57)
, bytes2word(58,52,52,46)
,	/* ST_v3918: (byte 1) */
  bytes2word(0,67,97,115)
, bytes2word(101,58,32,78)
, bytes2word(111,32,109,97)
, bytes2word(116,99,104,105)
, bytes2word(110,103,32,97)
, bytes2word(108,116,101,114)
, bytes2word(110,97,116,105)
, bytes2word(118,101,32,105)
, bytes2word(110,32,99,97)
, bytes2word(115,101,32,101)
, bytes2word(120,112,114,101)
, bytes2word(115,115,105,111)
, bytes2word(110,32,97,116)
, bytes2word(32,51,56,51)
, bytes2word(58,51,45,52)
, bytes2word(48,51,58,51)
,	/* ST_v3739: (byte 3) */
  bytes2word(53,46,0,67)
, bytes2word(97,115,101,58)
, bytes2word(32,80,97,116)
, bytes2word(116,101,114,110)
, bytes2word(32,109,97,116)
, bytes2word(99,104,32,102)
, bytes2word(97,105,108,117)
, bytes2word(114,101,32,105)
, bytes2word(110,32,102,117)
, bytes2word(110,99,116,105)
, bytes2word(111,110,32,97)
, bytes2word(116,32,50,51)
, bytes2word(49,58,49,45)
, bytes2word(50,51,55,58)
,	/* ST_v3791: (byte 4) */
  bytes2word(52,56,46,0)
, bytes2word(67,97,115,101)
, bytes2word(58,32,80,97)
, bytes2word(116,116,101,114)
, bytes2word(110,32,109,97)
, bytes2word(116,99,104,32)
, bytes2word(102,97,105,108)
, bytes2word(117,114,101,32)
, bytes2word(105,110,32,102)
, bytes2word(117,110,99,116)
, bytes2word(105,111,110,32)
, bytes2word(97,116,32,50)
, bytes2word(54,53,58,49)
, bytes2word(45,50,55,48)
, bytes2word(58,49,55,46)
,	/* ST_v3906: (byte 1) */
  bytes2word(0,67,97,115)
, bytes2word(101,58,32,80)
, bytes2word(97,116,116,101)
, bytes2word(114,110,32,109)
, bytes2word(97,116,99,104)
, bytes2word(32,102,97,105)
, bytes2word(108,117,114,101)
, bytes2word(32,105,110,32)
, bytes2word(102,117,110,99)
, bytes2word(116,105,111,110)
, bytes2word(32,97,116,32)
, bytes2word(51,52,52,58)
, bytes2word(49,45,52,48)
, bytes2word(51,58,51,53)
,	/* ST_v4041: (byte 2) */
  bytes2word(46,0,67,97)
, bytes2word(115,101,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,102,117,110)
, bytes2word(99,116,105,111)
, bytes2word(110,32,97,116)
, bytes2word(32,52,53,57)
, bytes2word(58,49,45,52)
, bytes2word(55,48,58,56)
,	/* ST_v3603: (byte 3) */
  bytes2word(54,46,0,67)
, bytes2word(97,115,101,58)
, bytes2word(32,80,97,116)
, bytes2word(116,101,114,110)
, bytes2word(32,109,97,116)
, bytes2word(99,104,32,102)
, bytes2word(97,105,108,117)
, bytes2word(114,101,32,105)
, bytes2word(110,32,102,117)
, bytes2word(110,99,116,105)
, bytes2word(111,110,32,97)
, bytes2word(116,32,56,55)
, bytes2word(58,49,45,56)
, bytes2word(55,58,53,56)
,	/* ST_v3629: (byte 2) */
  bytes2word(46,0,67,97)
, bytes2word(115,101,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,102,117,110)
, bytes2word(99,116,105,111)
, bytes2word(110,32,97,116)
, bytes2word(32,57,57,58)
, bytes2word(49,45,49,48)
, bytes2word(56,58,51,50)
,	/* ST_v3667: (byte 2) */
  bytes2word(46,0,67,97)
, bytes2word(115,101,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,108,97,109)
, bytes2word(98,100,97,32)
, bytes2word(97,116,32,49)
, bytes2word(51,54,58,49)
, bytes2word(55,45,49,51)
, bytes2word(54,58,51,55)
,	/* ST_v3680: (byte 2) */
  bytes2word(46,0,67,97)
, bytes2word(115,101,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,108,97,109)
, bytes2word(98,100,97,32)
, bytes2word(97,116,32,49)
, bytes2word(55,48,58,49)
, bytes2word(55,45,49,55)
, bytes2word(57,58,54,57)
,	/* ST_v3771: (byte 2) */
  bytes2word(46,0,67,97)
, bytes2word(115,101,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,108,97,109)
, bytes2word(98,100,97,32)
, bytes2word(97,116,32,50)
, bytes2word(52,52,58,52)
, bytes2word(52,45,50,52)
, bytes2word(52,58,54,54)
,	/* ST_v3879: (byte 2) */
  bytes2word(46,0,67,97)
, bytes2word(115,101,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,108,97,109)
, bytes2word(98,100,97,32)
, bytes2word(97,116,32,51)
, bytes2word(48,50,58,51)
, bytes2word(53,45,51,48)
, bytes2word(50,58,55,54)
,	/* ST_v3689: (byte 2) */
  bytes2word(46,0,78,111)
, bytes2word(32,109,97,116)
, bytes2word(99,104,32,105)
, bytes2word(110,32,112,97)
, bytes2word(116,116,101,114)
, bytes2word(110,32,101,120)
, bytes2word(112,114,101,115)
, bytes2word(115,105,111,110)
, bytes2word(32,97,116,32)
,	/* ST_v3775: (byte 1) */
  bytes2word(0,78,111,32)
, bytes2word(109,97,116,99)
, bytes2word(104,105,110,103)
, bytes2word(32,97,108,116)
, bytes2word(101,114,110,97)
, bytes2word(116,105,118,101)
, bytes2word(32,105,110,32)
, bytes2word(99,97,115,101)
, bytes2word(32,101,120,112)
, bytes2word(114,101,115,115)
, bytes2word(105,111,110,32)
,	/* ST_v3749: (byte 4) */
  bytes2word(97,116,32,0)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,102,117,110)
, bytes2word(99,116,105,111)
, bytes2word(110,32,97,116)
,	/* ST_v3762: (byte 2) */
  bytes2word(32,0,80,97)
, bytes2word(116,116,101,114)
, bytes2word(110,32,109,97)
, bytes2word(116,99,104,32)
, bytes2word(102,97,105,108)
, bytes2word(117,114,101,32)
, bytes2word(105,110,32,108)
, bytes2word(97,109,98,100)
, bytes2word(97,32,97,116)
,	/* ST_v4011: (byte 2) */
  bytes2word(32,0,87,97)
, bytes2word(114,110,105,110)
, bytes2word(103,58,32,108)
, bytes2word(105,116,101,114)
, bytes2word(97,108,32,110)
, bytes2word(117,109,101,114)
, bytes2word(105,99,32,82)
, bytes2word(97,116,105,111)
, bytes2word(110,97,108,32)
, bytes2word(112,97,116,116)
, bytes2word(101,114,110,32)
,	/* ST_v4001: (byte 4) */
  bytes2word(97,116,32,0)
, bytes2word(87,104,97,116)
, bytes2word(63,32,109,97)
, bytes2word(116,99,104,65)
, bytes2word(108,116,73,102)
, bytes2word(32,97,116,32)
,	/* ST_v3720: (byte 1) */
  bytes2word(0,99,97,115)
, bytes2word(101,69,120,112)
,	/* ST_v3722: (byte 2) */
  bytes2word(32,0,99,97)
, bytes2word(115,101,69,120)
, bytes2word(112,58,32,69)
, bytes2word(120,112,84,121)
, bytes2word(112,101,82,101)
, bytes2word(112,32,0,0)
,};
