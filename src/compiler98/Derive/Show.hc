#include "newmacros.h"
#include "runtime.h"

#define FN_Derive_46Show_46simpleNT	((void*)startLabel+8)
#define v1544	((void*)startLabel+28)
#define v1541	((void*)startLabel+32)
#define v1542	((void*)startLabel+38)
#define v1543	((void*)startLabel+44)
#define v1538	((void*)startLabel+50)
#define CT_v1545	((void*)startLabel+68)
#define F0_Derive_46Show_46simpleNT	((void*)startLabel+76)
#define FN_Derive_46Show_46patConstr	((void*)startLabel+100)
#define v1561	((void*)startLabel+118)
#define v1549	((void*)startLabel+122)
#define v1553	((void*)startLabel+204)
#define v1564	((void*)startLabel+216)
#define v1557	((void*)startLabel+220)
#define v1554	((void*)startLabel+229)
#define v1558	((void*)startLabel+237)
#define v1546	((void*)startLabel+321)
#define CT_v1566	((void*)startLabel+360)
#define F0_Derive_46Show_46patConstr	((void*)startLabel+368)
#define FN_LAMBDA1491	((void*)startLabel+464)
#define CT_v1568	((void*)startLabel+484)
#define CF_LAMBDA1491	((void*)startLabel+492)
#define FN_Derive_46Show_46Prelude_46585_46ints	((void*)startLabel+508)
#define CT_v1569	((void*)startLabel+564)
#define F0_Derive_46Show_46Prelude_46585_46ints	((void*)startLabel+572)
#define FN_Derive_46Show_46Prelude_46577_46toExp	((void*)startLabel+616)
#define v1572	((void*)startLabel+648)
#define CT_v1575	((void*)startLabel+668)
#define F0_Derive_46Show_46Prelude_46577_46toExp	((void*)startLabel+676)
#define FN_Derive_46Show_46getType	((void*)startLabel+708)
#define v1577	((void*)startLabel+718)
#define v1580	((void*)startLabel+799)
#define CT_v1586	((void*)startLabel+872)
#define F0_Derive_46Show_46getType	((void*)startLabel+880)
#define FN_LAMBDA1493	((void*)startLabel+944)
#define v1588	((void*)startLabel+956)
#define v1589	((void*)startLabel+980)
#define CT_v1591	((void*)startLabel+1080)
#define F0_LAMBDA1493	((void*)startLabel+1088)
#define FN_LAMBDA1492	((void*)startLabel+1108)
#define CT_v1593	((void*)startLabel+1128)
#define CF_LAMBDA1492	((void*)startLabel+1136)
#define FN_Derive_46Show_46mkShowFunTs	((void*)startLabel+1164)
#define CT_v1594	((void*)startLabel+1192)
#define F0_Derive_46Show_46mkShowFunTs	((void*)startLabel+1200)
#define FN_LAMBDA1503	((void*)startLabel+1244)
#define v1611	((void*)startLabel+1320)
#define v1598	((void*)startLabel+1324)
#define v1612	((void*)startLabel+1338)
#define v1602	((void*)startLabel+1342)
#define v1613	((void*)startLabel+1354)
#define v1606	((void*)startLabel+1358)
#define v1614	((void*)startLabel+1372)
#define v1610	((void*)startLabel+1376)
#define v1599	((void*)startLabel+1417)
#define v1595	((void*)startLabel+1454)
#define CT_v1615	((void*)startLabel+1492)
#define F0_LAMBDA1503	((void*)startLabel+1500)
#define FN_LAMBDA1502	((void*)startLabel+1572)
#define CT_v1617	((void*)startLabel+1592)
#define CF_LAMBDA1502	((void*)startLabel+1600)
#define FN_LAMBDA1501	((void*)startLabel+1632)
#define CT_v1618	((void*)startLabel+1692)
#define F0_LAMBDA1501	((void*)startLabel+1700)
#define FN_LAMBDA1500	((void*)startLabel+1760)
#define CT_v1622	((void*)startLabel+1888)
#define F0_LAMBDA1500	((void*)startLabel+1896)
#define FN_LAMBDA1499	((void*)startLabel+1940)
#define CT_v1623	((void*)startLabel+2016)
#define F0_LAMBDA1499	((void*)startLabel+2024)
#define FN_LAMBDA1498	((void*)startLabel+2036)
#define CT_v1627	((void*)startLabel+2076)
#define F0_LAMBDA1498	((void*)startLabel+2084)
#define FN_LAMBDA1497	((void*)startLabel+2116)
#define CT_v1628	((void*)startLabel+2132)
#define F0_LAMBDA1497	((void*)startLabel+2140)
#define FN_LAMBDA1496	((void*)startLabel+2168)
#define CT_v1629	((void*)startLabel+2200)
#define F0_LAMBDA1496	((void*)startLabel+2208)
#define FN_LAMBDA1495	((void*)startLabel+2224)
#define CT_v1630	((void*)startLabel+2248)
#define F0_LAMBDA1495	((void*)startLabel+2256)
#define FN_LAMBDA1494	((void*)startLabel+2272)
#define CT_v1631	((void*)startLabel+2296)
#define F0_LAMBDA1494	((void*)startLabel+2304)
#define FN_Derive_46Show_46mkShowFun	((void*)startLabel+2336)
#define v1659	((void*)startLabel+2466)
#define v1635	((void*)startLabel+2470)
#define v1660	((void*)startLabel+2482)
#define v1639	((void*)startLabel+2486)
#define v1643	((void*)startLabel+2498)
#define v1644	((void*)startLabel+2537)
#define v1662	((void*)startLabel+2548)
#define v1648	((void*)startLabel+2552)
#define v1663	((void*)startLabel+2564)
#define v1652	((void*)startLabel+2568)
#define v1649	((void*)startLabel+2608)
#define v1645	((void*)startLabel+2613)
#define v1640	((void*)startLabel+2618)
#define v1655	((void*)startLabel+2674)
#define v1636	((void*)startLabel+2710)
#define v1632	((void*)startLabel+2715)
#define CT_v1664	((void*)startLabel+2760)
#define F0_Derive_46Show_46mkShowFun	((void*)startLabel+2768)
#define FN_LAMBDA1527	((void*)startLabel+2876)
#define CT_v1666	((void*)startLabel+2896)
#define CF_LAMBDA1527	((void*)startLabel+2904)
#define FN_LAMBDA1526	((void*)startLabel+2936)
#define CT_v1667	((void*)startLabel+2976)
#define F0_LAMBDA1526	((void*)startLabel+2984)
#define FN_LAMBDA1525	((void*)startLabel+3040)
#define CT_v1668	((void*)startLabel+3392)
#define F0_LAMBDA1525	((void*)startLabel+3400)
#define FN_LAMBDA1524	((void*)startLabel+3480)
#define CT_v1669	((void*)startLabel+3552)
#define F0_LAMBDA1524	((void*)startLabel+3560)
#define FN_LAMBDA1523	((void*)startLabel+3588)
#define CT_v1670	((void*)startLabel+3612)
#define F0_LAMBDA1523	((void*)startLabel+3620)
#define FN_LAMBDA1522	((void*)startLabel+3640)
#define CT_v1671	((void*)startLabel+3692)
#define F0_LAMBDA1522	((void*)startLabel+3700)
#define FN_Derive_46Show_46Prelude_46517_46expShowsPrec10	((void*)startLabel+3720)
#define CT_v1672	((void*)startLabel+3772)
#define F0_Derive_46Show_46Prelude_46517_46expShowsPrec10	((void*)startLabel+3780)
#define FN_Derive_46Show_46Prelude_46518_46expShowsLabel	((void*)startLabel+3796)
#define CT_v1673	((void*)startLabel+3880)
#define F0_Derive_46Show_46Prelude_46518_46expShowsLabel	((void*)startLabel+3888)
#define FN_LAMBDA1521	((void*)startLabel+3920)
#define CT_v1675	((void*)startLabel+3940)
#define CF_LAMBDA1521	((void*)startLabel+3948)
#define FN_LAMBDA1520	((void*)startLabel+3960)
#define CT_v1677	((void*)startLabel+3980)
#define CF_LAMBDA1520	((void*)startLabel+3988)
#define FN_LAMBDA1519	((void*)startLabel+4000)
#define CT_v1679	((void*)startLabel+4020)
#define CF_LAMBDA1519	((void*)startLabel+4028)
#define FN_LAMBDA1518	((void*)startLabel+4040)
#define CT_v1681	((void*)startLabel+4060)
#define CF_LAMBDA1518	((void*)startLabel+4068)
#define FN_LAMBDA1517	((void*)startLabel+4084)
#define CT_v1682	((void*)startLabel+4104)
#define F0_LAMBDA1517	((void*)startLabel+4112)
#define FN_LAMBDA1516	((void*)startLabel+4144)
#define CT_v1683	((void*)startLabel+4168)
#define F0_LAMBDA1516	((void*)startLabel+4176)
#define FN_LAMBDA1515	((void*)startLabel+4208)
#define CT_v1684	((void*)startLabel+4392)
#define F0_LAMBDA1515	((void*)startLabel+4400)
#define FN_LAMBDA1514	((void*)startLabel+4436)
#define CT_v1685	((void*)startLabel+4524)
#define F0_LAMBDA1514	((void*)startLabel+4532)
#define FN_Derive_46Show_46Prelude_46508_46expShowsPrec10	((void*)startLabel+4560)
#define CT_v1686	((void*)startLabel+4612)
#define F0_Derive_46Show_46Prelude_46508_46expShowsPrec10	((void*)startLabel+4620)
#define FN_LAMBDA1513	((void*)startLabel+4636)
#define CT_v1687	((void*)startLabel+4656)
#define F0_LAMBDA1513	((void*)startLabel+4664)
#define FN_LAMBDA1512	((void*)startLabel+4696)
#define CT_v1688	((void*)startLabel+4720)
#define F0_LAMBDA1512	((void*)startLabel+4728)
#define FN_LAMBDA1511	((void*)startLabel+4760)
#define CT_v1689	((void*)startLabel+4792)
#define F0_LAMBDA1511	((void*)startLabel+4800)
#define FN_LAMBDA1510	((void*)startLabel+4848)
#define CT_v1690	((void*)startLabel+5168)
#define F0_LAMBDA1510	((void*)startLabel+5176)
#define FN_LAMBDA1509	((void*)startLabel+5212)
#define CT_v1691	((void*)startLabel+5224)
#define F0_LAMBDA1509	((void*)startLabel+5232)
#define FN_LAMBDA1508	((void*)startLabel+5244)
#define CT_v1692	((void*)startLabel+5256)
#define F0_LAMBDA1508	((void*)startLabel+5264)
#define FN_LAMBDA1507	((void*)startLabel+5276)
#define CT_v1693	((void*)startLabel+5288)
#define F0_LAMBDA1507	((void*)startLabel+5296)
#define FN_LAMBDA1506	((void*)startLabel+5308)
#define v1702	((void*)startLabel+5334)
#define v1699	((void*)startLabel+5338)
#define v1700	((void*)startLabel+5351)
#define v1696	((void*)startLabel+5359)
#define CT_v1703	((void*)startLabel+5384)
#define F0_LAMBDA1506	((void*)startLabel+5392)
#define FN_LAMBDA1505	((void*)startLabel+5412)
#define CT_v1705	((void*)startLabel+5432)
#define CF_LAMBDA1505	((void*)startLabel+5440)
#define FN_LAMBDA1504	((void*)startLabel+5452)
#define CT_v1706	((void*)startLabel+5472)
#define CF_LAMBDA1504	((void*)startLabel+5480)
#define CT_v1707	((void*)startLabel+5528)
#define FN_LAMBDA1535	((void*)startLabel+5572)
#define CT_v1708	((void*)startLabel+5852)
#define F0_LAMBDA1535	((void*)startLabel+5860)
#define FN_LAMBDA1534	((void*)startLabel+5952)
#define CT_v1709	((void*)startLabel+6004)
#define F0_LAMBDA1534	((void*)startLabel+6012)
#define FN_LAMBDA1533	((void*)startLabel+6080)
#define CT_v1710	((void*)startLabel+6184)
#define F0_LAMBDA1533	((void*)startLabel+6192)
#define FN_LAMBDA1532	((void*)startLabel+6276)
#define CT_v1711	((void*)startLabel+6380)
#define F0_LAMBDA1532	((void*)startLabel+6388)
#define FN_LAMBDA1531	((void*)startLabel+6472)
#define CT_v1712	((void*)startLabel+6532)
#define F0_LAMBDA1531	((void*)startLabel+6540)
#define FN_LAMBDA1530	((void*)startLabel+6600)
#define CT_v1713	((void*)startLabel+6644)
#define F0_LAMBDA1530	((void*)startLabel+6652)
#define FN_LAMBDA1529	((void*)startLabel+6692)
#define CT_v1714	((void*)startLabel+6764)
#define F0_LAMBDA1529	((void*)startLabel+6772)
#define FN_LAMBDA1528	((void*)startLabel+6808)
#define CT_v1715	((void*)startLabel+6864)
#define F0_LAMBDA1528	((void*)startLabel+6872)
#define ST_v1704	((void*)startLabel+6884)
#define ST_v1680	((void*)startLabel+6885)
#define ST_v1674	((void*)startLabel+6887)
#define ST_v1592	((void*)startLabel+6889)
#define ST_v1616	((void*)startLabel+6891)
#define ST_v1567	((void*)startLabel+6964)
#define ST_v1665	((void*)startLabel+7037)
#define ST_v1676	((void*)startLabel+7109)
#define ST_v1678	((void*)startLabel+7111)
extern Node CF_Prelude_46Num_46Prelude_46Integer[];
extern Node CF_Prelude_46Enum_46Prelude_46Integer[];
extern Node FN_Info_46ntI[];
extern Node FN_NHC_46Internal_46_95apply2[];
extern Node FN_Prelude_46_46[];
extern Node F0_Prelude_46snd[];
extern Node FN_List_46partition[];
extern Node FN_Prelude_46elem[];
extern Node CF_Prelude_46Eq_46Id_46Id[];
extern Node F0_NT_46freeNT[];
extern Node FN_Prelude_46filter[];
extern Node FN_State_46unitS[];
extern Node FN_Info_46uniqueI[];
extern Node FN_Prelude_46Num_46Prelude_46Eq[];
extern Node FN_NHC_46Internal_46_95apply3[];
extern Node FN_Prelude_46map[];
extern Node FN_NHC_46Internal_46_95patternMatchFail[];
extern Node FN_Prelude_46zip[];
extern Node FN_Prelude_46enumFrom[];
extern Node FN_Prelude_46fromInteger[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node F0_Prelude_46init[];
extern Node FN_Prelude_46_61_61[];
extern Node FN_Prelude_46show[];
extern Node FN_Prelude_46_43_43[];
extern Node FN_State_46_62_62_62_61[];
extern Node F0_IntState_46getUnique[];
extern Node F0_TokenId_46dropM[];
extern Node F0_Info_46tidI[];
extern Node F0_Prelude_46Show_46TokenId_46TokenId_46show[];
extern Node FN_State_46mapS[];
extern Node FN_State_46mapS0[];
extern Node CF_Prelude_46Show_46Id_46Id[];
extern Node FN_State_46_62_62_62[];
extern Node FN_Prelude_46unzip[];
extern Node FN_Prelude_46foldl[];
extern Node FN_Prelude_46concat[];
extern Node FN_TokenId_46visImport[];
extern Node FN_Prelude_46Show_46Id_46Id_46show[];
extern Node FN_IntState_46addNewLetBound[];
extern Node FN_Info_46tidI[];
extern Node FN_TokenId_46dropM[];
extern Node FN_Nice_46showsVar[];
extern Node FN_Nice_46showsOp[];
extern Node FN_Info_46fieldsI[];
extern Node FN_TokenId_46isTidOp[];
extern Node FN_Prelude_46any[];
extern Node F0_Maybe_46isNothing[];
extern Node F0_IntState_46getInfo[];
extern Node F0_Maybe_46fromJust[];
extern Node FN_Prelude_46flip[];
extern Node F0_Prelude_46_43_43[];
extern Node FN_List_46intersperse[];
extern Node FN_Prelude_46zipWith[];
extern Node FN_State_46_61_62_62_62[];
extern Node FN_MkSyntax_46mkInt[];
extern Node FN_Info_46fixityI[];
extern Node FN_Prelude_46Num_46Prelude_46Int_46_43[];
extern Node CF_TokenId_46t_95dot[];
extern Node CF_TokenId_46t_95lessthan[];
extern Node CF_TokenId_46tshowChar[];
extern Node CF_TokenId_46tshowParen[];
extern Node CF_TokenId_46tshowString[];
extern Node CF_TokenId_46tTrue[];
extern Node CF_TokenId_46tshowsType[];
extern Node CF_TokenId_46tshowsPrec[];
extern Node FN_IntState_46getInfo[];
extern Node FN_Info_46constrsI[];
extern Node F0_NT_46mkNTvar[];
extern Node FN_NT_46mkNTcons[];
extern Node FN_IntState_46addInstMethod[];
extern Node CF_TokenId_46tShow[];
extern Node FN_Prelude_46_36[];
extern Node F0_State_46unitS[];
extern Node FN_Derive_46Lib_46syntaxCtxs[];
extern Node FN_Derive_46Lib_46syntaxType[];

static Node startLabel[] = {
  bytes2word(1,0,0,1)
, useLabel(CT_v1545)
,	/* FN_Derive_46Show_46simpleNT: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,7,TOP(18),BOT(18))
, bytes2word(TOP(24),BOT(24),TOP(14),BOT(14))
, bytes2word(TOP(30),BOT(30),TOP(14),BOT(14))
,	/* v1544: (byte 4) */
  bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v1541: (byte 4) */
  bytes2word(POP_I1,JUMP,20,0)
, bytes2word(UNPACK,1,PUSH_HEAP,HEAP_CVAL_N1)
,	/* v1542: (byte 2) */
  bytes2word(1,RETURN,UNPACK,2)
,	/* v1543: (byte 4) */
  bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,RETURN)
, bytes2word(UNPACK,1,PUSH_HEAP,HEAP_CVAL_I3)
,	/* v1538: (byte 2) */
  bytes2word(HEAP_I1,RETURN_EVAL,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,0,0)
, CONSTR(1,0,0)
,	/* CT_v1545: (byte 0) */
  HW(1,1)
, 0
,	/* F0_Derive_46Show_46simpleNT: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46simpleNT),1)
, VAPTAG(useLabel(FN_Derive_46Show_46simpleNT))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1566)
,	/* FN_Derive_46Show_46patConstr: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,PUSH_HEAP,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(2,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v1561: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v1549: (byte 2) */
  bytes2word(201,0,UNPACK,4)
, bytes2word(HEAP_CVAL_P1,6,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,6,HEAP_P1)
, bytes2word(5,PUSH_P1,0,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,12,HEAP_CVAL_P1)
, bytes2word(13,HEAP_ARG,3,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,14,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(15,HEAP_OFF_N1,4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,14)
, bytes2word(HEAP_OFF_N1,4,ZAP_ARG_I3,ZAP_STACK_P1)
, bytes2word(5,ZAP_STACK_P1,4,ZAP_STACK_P1)
, bytes2word(3,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(1,SLIDE_P1,1,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1553: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(37),BOT(37))
, bytes2word(POP_I1,PUSH_I1,ZAP_STACK_P1,2)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1564: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1557: (byte 4) */
  bytes2word(POP_I1,JUMP,11,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,2)
,	/* v1554: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,2)
,	/* v1558: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,PUSH_P1)
, bytes2word(0,ZAP_STACK_P1,4,ZAP_STACK_P1)
, bytes2word(3,ZAP_STACK_P1,2,ZAP_STACK_P1)
, bytes2word(1,EVAL,NEEDHEAP_P1,33)
, bytes2word(UNPACK,2,HEAP_CVAL_P1,17)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,19,HEAP_P1,11)
, bytes2word(HEAP_CVAL_P1,20,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,4,HEAP_P1,0)
, bytes2word(HEAP_ARG,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_P1,9,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,11)
, bytes2word(HEAP_P1,10,HEAP_CVAL_P1,21)
, bytes2word(HEAP_OFF_N1,12,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,22,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(5,HEAP_OFF_N1,4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,3)
,	/* v1546: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_P1,22,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,23,HEAP_OFF_N1,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(15,2,0)
, CONSTR(0,0,0)
,	/* CT_v1566: (byte 0) */
  HW(21,4)
, 0
,	/* F0_Derive_46Show_46patConstr: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46patConstr),4)
, useLabel(CF_Prelude_46Num_46Prelude_46Integer)
, useLabel(CF_Prelude_46Enum_46Prelude_46Integer)
, VAPTAG(useLabel(FN_Info_46ntI))
, CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46585_46ints),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Derive_46Show_46simpleNT)
, useLabel(F0_Prelude_46snd)
, CAPTAG(useLabel(FN_List_46partition),1)
, VAPTAG(useLabel(FN_Prelude_46elem))
, useLabel(CF_Prelude_46Eq_46Id_46Id)
, useLabel(F0_NT_46freeNT)
, CAPTAG(useLabel(FN_Prelude_46filter),1)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Info_46uniqueI))
, CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46577_46toExp),4)
, VAPTAG(useLabel(FN_Prelude_46Num_46Prelude_46Eq))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply3))
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_LAMBDA1491))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v1568)
,	/* FN_LAMBDA1491: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1567)
,	/* CT_v1568: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1491: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1491))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v1569)
,	/* FN_Derive_46Show_46Prelude_46585_46ints: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_ARG_I1,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(3,HEAP_CADR_N1,1,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,8,ZAP_ARG_I1,ZAP_ARG_I2)
, bytes2word(ZAP_ARG_I3,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(1,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTRW(0,0)
,	/* CT_v1569: (byte 0) */
  HW(6,3)
, 0
,	/* F0_Derive_46Show_46Prelude_46585_46ints: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46585_46ints),3)
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_Prelude_46enumFrom))
, VAPTAG(useLabel(FN_Prelude_46fromInteger))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Prelude_46init)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v1575)
,	/* FN_Derive_46Show_46Prelude_46577_46toExp: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,5,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,PUSH_P1)
, bytes2word(0,PUSH_ARG_I3,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,2,ZAP_ARG_I2,ZAP_ARG_I3)
, bytes2word(ZAP_STACK_P1,4,ZAP_STACK_P1,3)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,2)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,5)
,	/* v1572: (byte 4) */
  bytes2word(0,PUSH_ARG,4,RETURN_EVAL)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_ARG)
, bytes2word(1,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(24,1,0)
,	/* CT_v1575: (byte 0) */
  HW(1,5)
, 0
,	/* F0_Derive_46Show_46Prelude_46577_46toExp: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46577_46toExp),5)
, VAPTAG(useLabel(FN_Prelude_46_61_61))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v1586)
,	/* FN_Derive_46Show_46getType: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,7,EVAL)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v1577: (byte 2) */
  bytes2word(TOP(85),BOT(85),POP_I1,PUSH_ARG)
, bytes2word(8,EVAL,NEEDHEAP_P1,38)
, bytes2word(UNPACK,3,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_I1,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CHAR_P1,118)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CHAR_P1,63,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,5,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,34,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,7)
,	/* v1580: (byte 3) */
  bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,UNPACK)
, bytes2word(2,PUSH_ZAP_ARG,8,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,3,HEAP_CVAL_P1)
, bytes2word(8,HEAP_ARG,2,HEAP_P1)
, bytes2word(3,HEAP_P1,0,HEAP_I2)
, bytes2word(HEAP_CVAL_P1,9,HEAP_ARG_ARG,1)
, bytes2word(5,HEAP_ARG,6,HEAP_P1)
, bytes2word(4,HEAP_P1,0,HEAP_I1)
, bytes2word(HEAP_ARG_ARG,3,2,HEAP_ARG)
, bytes2word(4,HEAP_I2,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(13,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1586: (byte 0) */
  HW(8,8)
, 0
,	/* F0_Derive_46Show_46getType: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46getType),8)
, VAPTAG(useLabel(FN_Prelude_46show))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_LAMBDA1492))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Derive_46Show_46patConstr))
, CAPTAG(useLabel(FN_LAMBDA1493),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1591)
,	/* FN_LAMBDA1493: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v1588: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(28),BOT(28))
, bytes2word(POP_I1,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(5,6,HEAP_ARG,10)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(8,HEAP_ARG_ARG,7,9)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG)
,	/* v1589: (byte 4) */
  bytes2word(4,HEAP_OFF_N1,12,RETURN_EVAL)
, bytes2word(UNPACK,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,7,HEAP_CVAL_IN3,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,2,HEAP_CVAL_N1)
, bytes2word(1,HEAP_P1,0,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_N1,5,HEAP_OFF_N1,4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,10,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,5,HEAP_ARG)
, bytes2word(9,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(6,HEAP_ARG,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_OFF_N1)
, bytes2word(14,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(12,1,0)
, CONSTR(0,0,0)
, CONSTR(0,1,0)
, CONSTR(0,3,0)
,	/* CT_v1591: (byte 0) */
  HW(2,11)
, 0
,	/* F0_LAMBDA1493: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1493),11)
, VAPTAG(useLabel(FN_Derive_46Show_46getType))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,0,0)
, useLabel(CT_v1593)
,	/* FN_LAMBDA1492: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1592)
,	/* CT_v1593: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1492: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1492))
, bytes2word(9,0,8,1)
, bytes2word(7,2,6,3)
, bytes2word(5,4,4,5)
, bytes2word(3,6,2,7)
, bytes2word(1,8,0,9)
, useLabel(CT_v1594)
,	/* FN_Derive_46Show_46mkShowFunTs: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,2)
, bytes2word(4,HEAP_ARG_ARG,9,3)
, bytes2word(HEAP_ARG_ARG,1,7,HEAP_ARG_ARG)
, bytes2word(6,5,HEAP_ARG,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(12,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1594: (byte 0) */
  HW(3,9)
, 0
,	/* F0_Derive_46Show_46mkShowFunTs: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46mkShowFunTs),9)
, CAPTAG(useLabel(FN_LAMBDA1503),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_IntState_46getUnique)
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v1615)
,	/* FN_LAMBDA1503: (byte 0) */
  bytes2word(NEEDHEAP_P1,40,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(6,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,7,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I5,HEAP_OFF_N1,13)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,4,HEAP_ARG_ARG)
, bytes2word(6,10,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(10,HEAP_ARG,9,ZAP_ARG)
, bytes2word(9,ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v1611: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1598: (byte 4) */
  bytes2word(POP_I1,JUMP,132,0)
, bytes2word(UNPACK,4,PUSH_P1,0)
, bytes2word(ZAP_STACK_P1,4,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(8),BOT(8))
,	/* v1612: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v1602: (byte 2) */
  bytes2word(77,0,POP_I1,PUSH_I1)
, bytes2word(ZAP_STACK_P1,2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(8),BOT(8))
,	/* v1613: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v1606: (byte 2) */
  bytes2word(61,0,POP_I1,PUSH_P1)
, bytes2word(2,ZAP_STACK_P1,3,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v1614: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1610: (byte 4) */
  bytes2word(POP_I1,JUMP,43,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_P1,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,5,HEAP_P1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(5,HEAP_OFF_N1,2,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,4)
,	/* v1599: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_P1,12,HEAP_ARG)
, bytes2word(6,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,0,HEAP_CVAL_P1)
, bytes2word(14,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG,3,HEAP_P1,4)
, bytes2word(HEAP_ARG_ARG,4,5,HEAP_ARG_ARG)
, bytes2word(6,7,HEAP_ARG,8)
, bytes2word(HEAP_P1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(15,HEAP_OFF_N1,15,HEAP_OFF_N1)
,	/* v1595: (byte 2) */
  bytes2word(13,RETURN_EVAL,HEAP_CVAL_P1,16)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,17,HEAP_OFF_N1)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(0,1,0)
, CONSTR(14,2,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1615: (byte 0) */
  HW(15,10)
, 0
,	/* F0_LAMBDA1503: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1503),10)
, CAPTAG(useLabel(FN_LAMBDA1494),1)
, CAPTAG(useLabel(FN_LAMBDA1495),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_TokenId_46dropM)
, useLabel(F0_Info_46tidI)
, useLabel(F0_Prelude_46Show_46TokenId_46TokenId_46show)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Info_46ntI))
, VAPTAG(useLabel(FN_State_46unitS))
, CAPTAG(useLabel(FN_LAMBDA1497),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA1501),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA1502))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v1617)
,	/* FN_LAMBDA1502: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1616)
,	/* CT_v1617: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1502: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1502))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1618)
,	/* FN_LAMBDA1501: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,11,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG_ARG,7)
, bytes2word(4,HEAP_ARG_ARG,1,6)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,9,HEAP_ARG)
, bytes2word(11,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(15,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_ARG_ARG,6,7,HEAP_ARG_ARG)
, bytes2word(8,9,HEAP_ARG,10)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,10,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1618: (byte 0) */
  HW(8,11)
, 0
,	/* F0_LAMBDA1501: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1501),11)
, CAPTAG(useLabel(FN_LAMBDA1498),1)
, VAPTAG(useLabel(FN_State_46mapS0))
, CAPTAG(useLabel(FN_Derive_46Show_46getType),1)
, useLabel(CF_Prelude_46Show_46Id_46Id)
, VAPTAG(useLabel(FN_State_46mapS))
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_LAMBDA1500),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v1622)
,	/* FN_LAMBDA1500: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_ARG,8,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,ZAP_ARG,8,EVAL)
, bytes2word(NEEDHEAP_I32,APPLY,1,EVAL)
, bytes2word(NEEDHEAP_P1,43,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_ARG,6,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(5,HEAP_ARG,7,HEAP_I1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,2,HEAP_P1)
, bytes2word(0,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_N1,5,HEAP_OFF_N1)
, bytes2word(33,HEAP_OFF_N1,10,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
, CONSTR(0,1,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1622: (byte 0) */
  HW(6,8)
, 0
,	/* F0_LAMBDA1500: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1500),8)
, VAPTAG(useLabel(FN_Prelude_46unzip))
, CAPTAG(useLabel(FN_LAMBDA1499),2)
, VAPTAG(useLabel(FN_Prelude_46foldl))
, VAPTAG(useLabel(FN_Prelude_46concat))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v1623)
,	/* FN_LAMBDA1499: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1623: (byte 0) */
  HW(0,5)
, 0
,	/* F0_LAMBDA1499: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1499),5)
, bytes2word(1,0,0,1)
, useLabel(CT_v1627)
,	/* FN_LAMBDA1498: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,3,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,HEAP_CVAL_N1,1,HEAP_CHAR_P1)
, bytes2word(118,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_I2)
, bytes2word(HEAP_OFF_N1,5,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v1627: (byte 0) */
  HW(4,1)
, 0
,	/* F0_LAMBDA1498: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1498),1)
, VAPTAG(useLabel(FN_TokenId_46visImport))
, VAPTAG(useLabel(FN_Prelude_46Show_46Id_46Id_46show))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_IntState_46addNewLetBound),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v1628)
,	/* FN_LAMBDA1497: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,2)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1628: (byte 0) */
  HW(3,2)
, 0
,	/* F0_LAMBDA1497: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1497),2)
, CAPTAG(useLabel(FN_LAMBDA1496),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_IntState_46getUnique)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v1629)
,	/* FN_LAMBDA1496: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG_ARG,1,3,HEAP_OFF_N1)
, bytes2word(6,PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(14,2,0)
,	/* CT_v1629: (byte 0) */
  HW(1,3)
, 0
,	/* F0_LAMBDA1496: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1496),3)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(1,0,0,1)
, useLabel(CT_v1630)
,	/* FN_LAMBDA1495: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(2,2,0)
, CONSTR(0,0,0)
,	/* CT_v1630: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA1495: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1495),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v1631)
,	/* FN_LAMBDA1494: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(19,2,0)
,	/* CT_v1631: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA1494: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1494),2)
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v1664)
,	/* FN_Derive_46Show_46mkShowFun: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_P1,75,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,10,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I5,HEAP_P1,0,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(4,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_ARG,9)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,5,HEAP_ARG)
, bytes2word(9,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_P1,8,HEAP_I1)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(9,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,5)
, bytes2word(HEAP_ARG,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG,10)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,6,HEAP_ARG)
, bytes2word(9,HEAP_OFF_N1,4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_ARG,10)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,12,HEAP_ARG)
, bytes2word(10,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v1659: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v1635: (byte 2) */
  bytes2word(247,0,UNPACK,4)
, bytes2word(PUSH_P1,3,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v1660: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v1639: (byte 2) */
  bytes2word(226,0,UNPACK,2)
, bytes2word(PUSH_I1,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v1643: (byte 2) */
  bytes2word(TOP(43),BOT(43),POP_I1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_P1)
, bytes2word(9,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(7,HEAP_OFF_N1,2,HEAP_CVAL_N1)
, bytes2word(8,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,5)
,	/* v1644: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1662: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1648: (byte 4) */
  bytes2word(POP_I1,JUMP,63,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v1663: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1652: (byte 4) */
  bytes2word(POP_I1,JUMP,42,0)
, bytes2word(POP_I1,PUSH_HEAP,HEAP_CVAL_P1,14)
, bytes2word(HEAP_P1,15,ZAP_STACK_P1,15)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,29)
, bytes2word(0,HEAP_CVAL_P1,15,HEAP_ARG)
, bytes2word(10,HEAP_P1,11,HEAP_ARG_ARG)
, bytes2word(5,7,HEAP_ARG,2)
, bytes2word(HEAP_P1,12,HEAP_ARG_ARG,8)
, bytes2word(4,HEAP_ARG_ARG,6,9)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,16,HEAP_CVAL_P1)
,	/* v1649: (byte 4) */
  bytes2word(17,HEAP_OFF_N1,13,RETURN_EVAL)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v1645: (byte 1) */
  bytes2word(0,POP_P1,2,JUMP)
,	/* v1640: (byte 2) */
  bytes2word(2,0,PUSH_P1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,18,HEAP_CVAL_P1)
, bytes2word(19,ZAP_ARG,10,ZAP_STACK_P1)
, bytes2word(12,ZAP_STACK_P1,10,EVAL)
, bytes2word(NEEDHEAP_I32,APPLY,1,EVAL)
, bytes2word(NEEDHEAP_I32,JUMPFALSE,36,0)
, bytes2word(HEAP_CVAL_P1,20,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_P1,21,HEAP_OFF_N1,3)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,22,HEAP_ARG)
, bytes2word(6,HEAP_P1,7,HEAP_ARG_ARG)
, bytes2word(5,7,HEAP_ARG_ARG,2)
, bytes2word(9,HEAP_ARG_ARG,8,4)
, bytes2word(HEAP_P1,9,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,14,HEAP_OFF_N1)
,	/* v1655: (byte 2) */
  bytes2word(12,RETURN_EVAL,HEAP_CVAL_P1,23)
, bytes2word(HEAP_ARG,9,HEAP_CVAL_P1,21)
, bytes2word(HEAP_OFF_N1,3,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(24,HEAP_P1,6,HEAP_ARG_ARG)
, bytes2word(3,6,HEAP_P1,7)
, bytes2word(HEAP_ARG_ARG,5,7,HEAP_ARG)
, bytes2word(2,HEAP_P1,9,HEAP_ARG_ARG)
, bytes2word(9,8,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,15,HEAP_OFF_N1)
,	/* v1636: (byte 2) */
  bytes2word(13,RETURN_EVAL,POP_P1,4)
,	/* v1632: (byte 3) */
  bytes2word(JUMP,2,0,HEAP_CVAL_P1)
, bytes2word(25,PUSH_HEAP,HEAP_CVAL_P1,26)
, bytes2word(HEAP_OFF_N1,2,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(0,1,0)
, CONSTR(15,2,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(0,0,0)
,	/* CT_v1664: (byte 0) */
  HW(24,10)
, 0
,	/* F0_Derive_46Show_46mkShowFun: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46mkShowFun),10)
, VAPTAG(useLabel(FN_Info_46tidI))
, VAPTAG(useLabel(FN_TokenId_46dropM))
, VAPTAG(useLabel(FN_Nice_46showsVar))
, VAPTAG(useLabel(FN_LAMBDA1504))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Nice_46showsOp))
, VAPTAG(useLabel(FN_LAMBDA1505))
, VAPTAG(useLabel(FN_Info_46uniqueI))
, VAPTAG(useLabel(FN_Info_46fieldsI))
, VAPTAG(useLabel(FN_Info_46ntI))
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_TokenId_46isTidOp))
, CAPTAG(useLabel(FN_LAMBDA1511),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_IntState_46getUnique)
, VAPTAG(useLabel(FN_Prelude_46any))
, useLabel(F0_Maybe_46isNothing)
, CAPTAG(useLabel(FN_LAMBDA1513),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA1515),1)
, CAPTAG(useLabel(FN_LAMBDA1517),1)
, CAPTAG(useLabel(FN_LAMBDA1526),1)
, VAPTAG(useLabel(FN_LAMBDA1527))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v1666)
,	/* FN_LAMBDA1527: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1665)
,	/* CT_v1666: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1527: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1527))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1667)
,	/* FN_LAMBDA1526: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,15)
, bytes2word(HEAP_OFF_N1,13,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1667: (byte 0) */
  HW(6,11)
, 0
,	/* F0_LAMBDA1526: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1526),11)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_IntState_46getInfo)
, useLabel(F0_Maybe_46fromJust)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA1525),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1668)
,	/* FN_LAMBDA1525: (byte 0) */
  bytes2word(NEEDHEAP_P1,165,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,5)
, bytes2word(HEAP_ARG,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_I5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,5,HEAP_ARG)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,6,HEAP_OFF_N1)
, bytes2word(2,HEAP_INT_P1,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,2,HEAP_INT_P1)
, bytes2word(9,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG_ARG,3,10)
, bytes2word(HEAP_CVAL_N1,5,HEAP_ARG,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,4,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,5,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,5,HEAP_ARG,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_ARG_ARG,8,9,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(7,HEAP_CVAL_P1,8,HEAP_I2)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_P1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,11)
, bytes2word(HEAP_P1,4,HEAP_CVAL_P1,12)
, bytes2word(HEAP_ARG_ARG,9,1,HEAP_ARG_ARG)
, bytes2word(8,2,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,7,HEAP_ARG)
, bytes2word(11,HEAP_CVAL_P1,14,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,18,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,14,HEAP_OFF_N1)
, bytes2word(27,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,33,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,15,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,10,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,49,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(7,HEAP_OFF_N1,2,HEAP_CVAL_N1)
, bytes2word(8,HEAP_OFF_N1,76,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(0,1,0)
, CONSTR(3,2,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(0,0,0)
,	/* CT_v1668: (byte 0) */
  HW(14,11)
, 0
,	/* F0_LAMBDA1525: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1525),11)
, VAPTAG(useLabel(FN_LAMBDA1518))
, VAPTAG(useLabel(FN_LAMBDA1519))
, VAPTAG(useLabel(FN_LAMBDA1520))
, CAPTAG(useLabel(FN_LAMBDA1522),2)
, CAPTAG(useLabel(FN_Prelude_46foldl),1)
, CAPTAG(useLabel(FN_LAMBDA1523),1)
, CAPTAG(useLabel(FN_Prelude_46flip),1)
, useLabel(F0_Prelude_46_43_43)
, CAPTAG(useLabel(FN_List_46intersperse),1)
, CAPTAG(useLabel(FN_LAMBDA1524),2)
, CAPTAG(useLabel(FN_Prelude_46zipWith),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v1669)
,	/* FN_LAMBDA1524: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_CVAL_I4,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,6,HEAP_CVAL_I5,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,5)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(7,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(15,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1669: (byte 0) */
  HW(3,7)
, 0
,	/* F0_LAMBDA1524: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1524),7)
, CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46518_46expShowsLabel),1)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46517_46expShowsPrec10),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v1670)
,	/* FN_LAMBDA1523: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v1670: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA1523: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1523),2)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1671)
,	/* FN_LAMBDA1522: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1671: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA1522: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1522),4)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1672)
,	/* FN_Derive_46Show_46Prelude_46517_46expShowsPrec10: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1672: (byte 0) */
  HW(0,4)
, 0
,	/* F0_Derive_46Show_46Prelude_46517_46expShowsPrec10: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46517_46expShowsPrec10),4)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v1673)
,	/* FN_Derive_46Show_46Prelude_46518_46expShowsLabel: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,5)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(0,0,0)
,	/* CT_v1673: (byte 0) */
  HW(5,3)
, 0
,	/* F0_Derive_46Show_46Prelude_46518_46expShowsLabel: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46518_46expShowsLabel),3)
, VAPTAG(useLabel(FN_Info_46tidI))
, VAPTAG(useLabel(FN_TokenId_46dropM))
, VAPTAG(useLabel(FN_Nice_46showsVar))
, VAPTAG(useLabel(FN_LAMBDA1521))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, bytes2word(0,0,0,0)
, useLabel(CT_v1675)
,	/* FN_LAMBDA1521: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1674)
,	/* CT_v1675: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1521: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1521))
, bytes2word(0,0,0,0)
, useLabel(CT_v1677)
,	/* FN_LAMBDA1520: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1676)
,	/* CT_v1677: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1520: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1520))
, bytes2word(0,0,0,0)
, useLabel(CT_v1679)
,	/* FN_LAMBDA1519: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1678)
,	/* CT_v1679: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1519: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1519))
, bytes2word(0,0,0,0)
, useLabel(CT_v1681)
,	/* FN_LAMBDA1518: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1680)
,	/* CT_v1681: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1518: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1518))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v1682)
,	/* FN_LAMBDA1517: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1682: (byte 0) */
  HW(4,2)
, 0
,	/* F0_LAMBDA1517: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1517),2)
, CAPTAG(useLabel(FN_LAMBDA1516),1)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, useLabel(F0_IntState_46getUnique)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v1683)
,	/* FN_LAMBDA1516: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(14,2,0)
,	/* CT_v1683: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA1516: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1516),2)
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v1684)
,	/* FN_LAMBDA1515: (byte 0) */
  bytes2word(NEEDHEAP_P1,77,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_INT_P1,10,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,2,HEAP_INT_P1,9)
, bytes2word(PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG_ARG,2,10,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(5,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_P1,0,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I3,HEAP_ARG_ARG,7)
, bytes2word(8,HEAP_ARG_ARG,6,1)
, bytes2word(HEAP_I1,HEAP_CVAL_I4,HEAP_OFF_N1,7)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,18,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,2,HEAP_CVAL_N1)
, bytes2word(7,HEAP_OFF_N1,45,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
, CONSTR(0,1,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(3,2,0)
, CONSTR(0,0,0)
,	/* CT_v1684: (byte 0) */
  HW(3,10)
, 0
,	/* F0_LAMBDA1515: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1515),10)
, CAPTAG(useLabel(FN_LAMBDA1514),2)
, VAPTAG(useLabel(FN_Prelude_46foldl))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v1685)
,	/* FN_LAMBDA1514: (byte 0) */
  bytes2word(NEEDHEAP_P1,34,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_I4,HEAP_OFF_N1,5)
, bytes2word(HEAP_ARG,7,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,15,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,5)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1685: (byte 0) */
  HW(2,7)
, 0
,	/* F0_LAMBDA1514: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1514),7)
, CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46508_46expShowsPrec10),1)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1686)
,	/* FN_Derive_46Show_46Prelude_46508_46expShowsPrec10: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1686: (byte 0) */
  HW(0,4)
, 0
,	/* F0_Derive_46Show_46Prelude_46508_46expShowsPrec10: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Show_46Prelude_46508_46expShowsPrec10),4)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v1687)
,	/* FN_LAMBDA1513: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1687: (byte 0) */
  HW(4,2)
, 0
,	/* F0_LAMBDA1513: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1513),2)
, CAPTAG(useLabel(FN_LAMBDA1512),1)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, useLabel(F0_IntState_46getUnique)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v1688)
,	/* FN_LAMBDA1512: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(14,2,0)
,	/* CT_v1688: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA1512: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1512),2)
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1689)
,	/* FN_LAMBDA1511: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,11)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG_ARG,4,5,HEAP_ARG_ARG)
, bytes2word(6,7,HEAP_ARG_ARG,8)
, bytes2word(9,HEAP_ARG,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,14)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1689: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA1511: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1511),11)
, CAPTAG(useLabel(FN_LAMBDA1510),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_IntState_46getUnique)
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1690)
,	/* FN_LAMBDA1510: (byte 0) */
  bytes2word(NEEDHEAP_P1,165,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_ARG_ARG,11,12)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(11,1,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,2,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,7,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_IN3,HEAP_P1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_P1)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,11)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG,11,HEAP_I1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_IN3,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,5,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,11)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG,11,HEAP_I2,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_IN3,HEAP_P1,4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,10,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,11)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_ARG,11,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_IN3,HEAP_P1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,10,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(11,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_IN3,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(9,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,11)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,11,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,9,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_ARG,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,11,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,63,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(11,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_IN3,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(92,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,11)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,5)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_N1,5,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_N1,6,HEAP_OFF_N1,122)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(0,1,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(14,2,0)
,	/* CT_v1690: (byte 0) */
  HW(6,12)
, 0
,	/* F0_LAMBDA1510: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1510),12)
, VAPTAG(useLabel(FN_LAMBDA1506))
, VAPTAG(useLabel(FN_LAMBDA1507))
, VAPTAG(useLabel(FN_LAMBDA1508))
, VAPTAG(useLabel(FN_LAMBDA1509))
, VAPTAG(useLabel(FN_MkSyntax_46mkInt))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(1,0,0,1)
, useLabel(CT_v1691)
,	/* FN_LAMBDA1509: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,3)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1691: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA1509: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1509),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v1692)
,	/* FN_LAMBDA1508: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,2)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1692: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA1508: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1508),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v1693)
,	/* FN_LAMBDA1507: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1693: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA1507: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1507),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v1703)
,	/* FN_LAMBDA1506: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,ZAP_ARG_I1,EVAL,UNPACK)
, bytes2word(2,PUSH_P1,0,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,5,NOP)
, bytes2word(TOP(10),BOT(10),TOP(10),BOT(10))
, bytes2word(TOP(14),BOT(14),TOP(27),BOT(27))
,	/* v1702: (byte 2) */
  bytes2word(TOP(10),BOT(10),POP_I1,JUMP)
,	/* v1699: (byte 2) */
  bytes2word(23,0,POP_I1,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,HEAP_INT_P1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,4)
,	/* v1700: (byte 3) */
  bytes2word(HEAP_I2,HEAP_I2,RETURN,POP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_I2)
,	/* v1696: (byte 3) */
  bytes2word(HEAP_I2,HEAP_I2,RETURN,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,HEAP_INT_P1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_I2,HEAP_I2)
, bytes2word(HEAP_OFF_N1,6,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
,	/* CT_v1703: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA1506: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1506),1)
, VAPTAG(useLabel(FN_Info_46fixityI))
, VAPTAG(useLabel(FN_Prelude_46Num_46Prelude_46Int_46_43))
, bytes2word(0,0,0,0)
, useLabel(CT_v1705)
,	/* FN_LAMBDA1505: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1704)
,	/* CT_v1705: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1505: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1505))
, bytes2word(0,0,0,0)
, useLabel(CT_v1706)
,	/* FN_LAMBDA1504: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1704)
,	/* CT_v1706: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1504: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1504))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v1707)
,};
Node FN_Derive_46Show_46deriveShow[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(5,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG_ARG,4,6,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,9)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1707: (byte 0) */
  HW(3,6)
, 0
,};
Node F0_Derive_46Show_46deriveShow[] = {
  CAPTAG(useLabel(FN_Derive_46Show_46deriveShow),6)
, CAPTAG(useLabel(FN_LAMBDA1535),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_IntState_46getUnique)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v1708)
,	/* FN_LAMBDA1535: (byte 0) */
  bytes2word(NEEDHEAP_P1,134,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,32)
, bytes2word(HEAP_CVAL_N1,5,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,6)
, bytes2word(HEAP_OFF_N1,15,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,7,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,8,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(9,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,10,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,6,HEAP_I1)
, bytes2word(HEAP_CVAL_N1,10,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,6,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG_ARG,6,7)
, bytes2word(HEAP_CVAL_P1,12,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_P1,13,HEAP_I2,HEAP_P1)
, bytes2word(4,HEAP_P1,0,HEAP_I1)
, bytes2word(HEAP_P1,9,HEAP_P1,5)
, bytes2word(HEAP_P1,3,HEAP_P1,7)
, bytes2word(HEAP_P1,6,HEAP_P1,8)
, bytes2word(HEAP_P1,10,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_ARG,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,20,HEAP_OFF_N1)
, bytes2word(19,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(2,0,0)
, CONSTR(15,2,0)
, CONSTR(4,0,0)
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(6,2,0)
, CONSTR(14,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v1708: (byte 0) */
  HW(12,7)
, 0
,	/* F0_LAMBDA1535: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1535),7)
, useLabel(CF_TokenId_46t_95dot)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_TokenId_46t_95lessthan)
, useLabel(CF_TokenId_46tshowChar)
, useLabel(CF_TokenId_46tshowParen)
, useLabel(CF_TokenId_46tshowString)
, useLabel(CF_TokenId_46tTrue)
, useLabel(CF_TokenId_46tshowsType)
, useLabel(CF_TokenId_46tshowsPrec)
, CAPTAG(useLabel(FN_IntState_46getInfo),2)
, CAPTAG(useLabel(FN_LAMBDA1534),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(17,0,16,1)
, bytes2word(15,2,14,3)
, bytes2word(13,4,12,5)
, bytes2word(11,6,10,7)
, bytes2word(9,8,8,9)
, bytes2word(7,10,6,11)
, bytes2word(5,12,4,13)
, bytes2word(3,14,2,15)
, bytes2word(1,16,0,17)
, useLabel(CT_v1709)
,	/* FN_LAMBDA1534: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,17)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,17)
, bytes2word(HEAP_ARG_ARG,12,13,HEAP_ARG_ARG)
, bytes2word(14,15,HEAP_ARG,16)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(22,HEAP_OFF_N1,20,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1709: (byte 0) */
  HW(5,17)
, 0
,	/* F0_LAMBDA1534: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1534),17)
, VAPTAG(useLabel(FN_Info_46constrsI))
, VAPTAG(useLabel(FN_State_46mapS))
, useLabel(F0_IntState_46getInfo)
, CAPTAG(useLabel(FN_LAMBDA1533),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,18,0)
, bytes2word(17,1,16,2)
, bytes2word(15,3,14,4)
, bytes2word(13,5,12,6)
, bytes2word(11,7,10,8)
, bytes2word(9,9,8,10)
, bytes2word(7,11,6,12)
, bytes2word(5,13,4,14)
, bytes2word(3,15,2,16)
, bytes2word(1,17,0,18)
, useLabel(CT_v1710)
,	/* FN_LAMBDA1533: (byte 0) */
  bytes2word(NEEDHEAP_P1,46,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(12,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,16,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG,15,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,16)
, bytes2word(HEAP_OFF_N1,13,HEAP_ARG,13)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,20)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,9)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG_ARG)
, bytes2word(12,18,HEAP_ARG_ARG,13)
, bytes2word(14,HEAP_ARG_ARG,15,16)
, bytes2word(HEAP_ARG,17,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,25,HEAP_OFF_N1)
, bytes2word(20,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1710: (byte 0) */
  HW(9,18)
, 0
,	/* F0_LAMBDA1533: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1533),18)
, VAPTAG(useLabel(FN_Info_46tidI))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_NT_46mkNTvar)
, VAPTAG(useLabel(FN_NT_46mkNTcons))
, CAPTAG(useLabel(FN_IntState_46addInstMethod),2)
, useLabel(CF_TokenId_46tShow)
, useLabel(CF_TokenId_46tshowsPrec)
, CAPTAG(useLabel(FN_LAMBDA1532),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,18,0)
, bytes2word(17,1,16,2)
, bytes2word(15,3,14,4)
, bytes2word(13,5,12,6)
, bytes2word(11,7,10,8)
, bytes2word(9,9,8,10)
, bytes2word(7,11,6,12)
, bytes2word(5,13,4,14)
, bytes2word(3,15,2,16)
, bytes2word(1,17,0,18)
, useLabel(CT_v1711)
,	/* FN_LAMBDA1532: (byte 0) */
  bytes2word(NEEDHEAP_P1,46,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(11,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,16,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG,15,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,16)
, bytes2word(HEAP_OFF_N1,13,HEAP_ARG,13)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,20)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,9)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG_ARG)
, bytes2word(12,13,HEAP_ARG_ARG,14)
, bytes2word(15,HEAP_ARG_ARG,16,18)
, bytes2word(HEAP_ARG,17,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,25,HEAP_OFF_N1)
, bytes2word(20,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1711: (byte 0) */
  HW(9,18)
, 0
,	/* F0_LAMBDA1532: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1532),18)
, VAPTAG(useLabel(FN_Info_46tidI))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_NT_46mkNTvar)
, VAPTAG(useLabel(FN_NT_46mkNTcons))
, CAPTAG(useLabel(FN_IntState_46addInstMethod),2)
, useLabel(CF_TokenId_46tShow)
, useLabel(CF_TokenId_46tshowsType)
, CAPTAG(useLabel(FN_LAMBDA1531),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,18,0)
, bytes2word(17,1,16,2)
, bytes2word(15,3,14,4)
, bytes2word(13,5,12,6)
, bytes2word(11,7,10,8)
, bytes2word(9,9,8,10)
, bytes2word(7,11,6,12)
, bytes2word(5,13,4,14)
, bytes2word(3,15,2,16)
, bytes2word(1,17,0,18)
, useLabel(CT_v1712)
,	/* FN_LAMBDA1531: (byte 0) */
  bytes2word(NEEDHEAP_P1,33,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(4,1,HEAP_ARG_ARG,7)
, bytes2word(8,HEAP_ARG_ARG,6,2)
, bytes2word(HEAP_ARG_ARG,3,9,HEAP_ARG)
, bytes2word(17,HEAP_CVAL_I4,HEAP_OFF_N1,11)
, bytes2word(HEAP_ARG,11,HEAP_CVAL_I5,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG_ARG)
, bytes2word(12,13,HEAP_ARG_ARG,14)
, bytes2word(15,HEAP_ARG_ARG,16,17)
, bytes2word(HEAP_ARG,18,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,20,HEAP_OFF_N1)
, bytes2word(18,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1712: (byte 0) */
  HW(4,18)
, 0
,	/* F0_LAMBDA1531: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1531),18)
, CAPTAG(useLabel(FN_Derive_46Show_46mkShowFun),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA1530),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,16,0)
, bytes2word(15,1,14,2)
, bytes2word(13,3,12,4)
, bytes2word(11,5,10,6)
, bytes2word(9,7,8,8)
, bytes2word(7,9,6,10)
, bytes2word(5,11,4,12)
, bytes2word(3,13,2,14)
, bytes2word(1,15,0,16)
, useLabel(CT_v1713)
,	/* FN_LAMBDA1530: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(14,7,HEAP_ARG,8)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,9,10)
, bytes2word(HEAP_ARG_ARG,11,12,HEAP_ARG_ARG)
, bytes2word(13,16,HEAP_ARG_ARG,14)
, bytes2word(15,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(20,HEAP_OFF_N1,11,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1713: (byte 0) */
  HW(3,16)
, 0
,	/* F0_LAMBDA1530: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1530),16)
, VAPTAG(useLabel(FN_Derive_46Show_46mkShowFunTs))
, CAPTAG(useLabel(FN_LAMBDA1529),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(9,0,8,1)
, bytes2word(7,2,6,3)
, bytes2word(5,4,4,5)
, bytes2word(3,6,2,7)
, bytes2word(1,8,0,9)
, useLabel(CT_v1714)
,	/* FN_LAMBDA1529: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,7,3)
, bytes2word(HEAP_ARG,4,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,7,5,HEAP_ARG)
, bytes2word(6,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,13,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,24,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(0,1,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(13,3,0)
,	/* CT_v1714: (byte 0) */
  HW(3,9)
, 0
,	/* F0_LAMBDA1529: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1529),9)
, CAPTAG(useLabel(FN_LAMBDA1528),1)
, VAPTAG(useLabel(FN_Prelude_46_36))
, useLabel(F0_State_46unitS)
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v1715)
,	/* FN_LAMBDA1528: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,3)
, bytes2word(1,HEAP_CVAL_I4,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(13,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(7,HEAP_ARG,6,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,5,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1715: (byte 0) */
  HW(2,6)
, 0
,	/* F0_LAMBDA1528: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1528),6)
, VAPTAG(useLabel(FN_Derive_46Lib_46syntaxCtxs))
, VAPTAG(useLabel(FN_Derive_46Lib_46syntaxType))
,	/* ST_v1704: (byte 0) */
 	/* ST_v1680: (byte 1) */
 	/* ST_v1674: (byte 3) */
  bytes2word(0,44,0,61)
,	/* ST_v1592: (byte 1) */
 	/* ST_v1616: (byte 3) */
  bytes2word(0,63,0,68)
, bytes2word(101,114,105,118)
, bytes2word(101,46,83,104)
, bytes2word(111,119,58,32)
, bytes2word(78,111,32,109)
, bytes2word(97,116,99,104)
, bytes2word(105,110,103,32)
, bytes2word(97,108,116,101)
, bytes2word(114,110,97,116)
, bytes2word(105,118,101,32)
, bytes2word(105,110,32,99)
, bytes2word(97,115,101,32)
, bytes2word(101,120,112,114)
, bytes2word(101,115,115,105)
, bytes2word(111,110,32,97)
, bytes2word(116,32,49,55)
, bytes2word(53,58,53,45)
, bytes2word(49,57,55,58)
,	/* ST_v1567: (byte 4) */
  bytes2word(49,57,46,0)
, bytes2word(68,101,114,105)
, bytes2word(118,101,46,83)
, bytes2word(104,111,119,58)
, bytes2word(32,78,111,32)
, bytes2word(109,97,116,99)
, bytes2word(104,105,110,103)
, bytes2word(32,97,108,116)
, bytes2word(101,114,110,97)
, bytes2word(116,105,118,101)
, bytes2word(32,105,110,32)
, bytes2word(99,97,115,101)
, bytes2word(32,101,120,112)
, bytes2word(114,101,115,115)
, bytes2word(105,111,110,32)
, bytes2word(97,116,32,50)
, bytes2word(49,57,58,51)
, bytes2word(45,50,50,53)
, bytes2word(58,51,57,46)
,	/* ST_v1665: (byte 1) */
  bytes2word(0,68,101,114)
, bytes2word(105,118,101,46)
, bytes2word(83,104,111,119)
, bytes2word(58,32,78,111)
, bytes2word(32,109,97,116)
, bytes2word(99,104,105,110)
, bytes2word(103,32,97,108)
, bytes2word(116,101,114,110)
, bytes2word(97,116,105,118)
, bytes2word(101,32,105,110)
, bytes2word(32,99,97,115)
, bytes2word(101,32,101,120)
, bytes2word(112,114,101,115)
, bytes2word(115,105,111,110)
, bytes2word(32,97,116,32)
, bytes2word(54,51,58,54)
, bytes2word(45,49,54,51)
, bytes2word(58,51,48,46)
,	/* ST_v1676: (byte 1) */
 	/* ST_v1678: (byte 3) */
  bytes2word(0,123,0,125)
, bytes2word(0,0,0,0)
,};
