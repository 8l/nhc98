#include "newmacros.h"
#include "runtime.h"

#define FN_Derive_46Read_46mkReadExp	((void*)startLabel+16)
#define v1056	((void*)startLabel+108)
#define v1024	((void*)startLabel+112)
#define v1057	((void*)startLabel+124)
#define v1028	((void*)startLabel+128)
#define v1032	((void*)startLabel+140)
#define v1033	((void*)startLabel+204)
#define v1059	((void*)startLabel+216)
#define v1037	((void*)startLabel+220)
#define v1060	((void*)startLabel+232)
#define v1041	((void*)startLabel+236)
#define v1038	((void*)startLabel+354)
#define v1034	((void*)startLabel+359)
#define v1029	((void*)startLabel+364)
#define v1025	((void*)startLabel+558)
#define v1021	((void*)startLabel+563)
#define v1019	((void*)startLabel+571)
#define v1061	((void*)startLabel+656)
#define v1047	((void*)startLabel+660)
#define v1062	((void*)startLabel+672)
#define v1051	((void*)startLabel+676)
#define v1063	((void*)startLabel+688)
#define v1055	((void*)startLabel+692)
#define v1052	((void*)startLabel+756)
#define v1048	((void*)startLabel+944)
#define v1044	((void*)startLabel+949)
#define v1042	((void*)startLabel+957)
#define CT_v1064	((void*)startLabel+1124)
#define F0_Derive_46Read_46mkReadExp	((void*)startLabel+1132)
#define FN_LAMBDA1008	((void*)startLabel+1368)
#define CT_v1065	((void*)startLabel+1588)
#define F0_LAMBDA1008	((void*)startLabel+1596)
#define FN_LAMBDA1007	((void*)startLabel+1668)
#define CT_v1069	((void*)startLabel+1692)
#define F0_LAMBDA1007	((void*)startLabel+1700)
#define FN_LAMBDA1006	((void*)startLabel+1716)
#define CT_v1071	((void*)startLabel+1736)
#define CF_LAMBDA1006	((void*)startLabel+1744)
#define FN_Derive_46Read_46Prelude_46519_46expReadFinal	((void*)startLabel+1760)
#define CT_v1072	((void*)startLabel+1860)
#define F0_Derive_46Read_46Prelude_46519_46expReadFinal	((void*)startLabel+1868)
#define FN_LAMBDA1005	((void*)startLabel+1892)
#define CT_v1074	((void*)startLabel+1912)
#define CF_LAMBDA1005	((void*)startLabel+1920)
#define FN_Derive_46Read_46Prelude_46520_46expLabel	((void*)startLabel+1940)
#define CT_v1075	((void*)startLabel+2048)
#define F0_Derive_46Read_46Prelude_46520_46expLabel	((void*)startLabel+2056)
#define FN_LAMBDA1004	((void*)startLabel+2088)
#define CT_v1076	((void*)startLabel+2108)
#define CF_LAMBDA1004	((void*)startLabel+2116)
#define FN_LAMBDA1003	((void*)startLabel+2128)
#define CT_v1078	((void*)startLabel+2148)
#define CF_LAMBDA1003	((void*)startLabel+2156)
#define FN_LAMBDA1002	((void*)startLabel+2168)
#define CT_v1080	((void*)startLabel+2188)
#define CF_LAMBDA1002	((void*)startLabel+2196)
#define FN_LAMBDA1001	((void*)startLabel+2208)
#define CT_v1081	((void*)startLabel+2220)
#define F0_LAMBDA1001	((void*)startLabel+2228)
#define FN_LAMBDA1000	((void*)startLabel+2240)
#define v1090	((void*)startLabel+2254)
#define v1085	((void*)startLabel+2258)
#define v1091	((void*)startLabel+2270)
#define v1089	((void*)startLabel+2274)
#define v1086	((void*)startLabel+2281)
#define v1082	((void*)startLabel+2286)
#define CT_v1092	((void*)startLabel+2308)
#define F0_LAMBDA1000	((void*)startLabel+2316)
#define FN_LAMBDA999	((void*)startLabel+2340)
#define CT_v1094	((void*)startLabel+2360)
#define CF_LAMBDA999	((void*)startLabel+2368)
#define FN_LAMBDA998	((void*)startLabel+2380)
#define CT_v1096	((void*)startLabel+2400)
#define CF_LAMBDA998	((void*)startLabel+2408)
#define FN_LAMBDA997	((void*)startLabel+2428)
#define CT_v1097	((void*)startLabel+2472)
#define F0_LAMBDA997	((void*)startLabel+2480)
#define FN_LAMBDA996	((void*)startLabel+2492)
#define CT_v1098	((void*)startLabel+2512)
#define CF_LAMBDA996	((void*)startLabel+2520)
#define FN_LAMBDA995	((void*)startLabel+2532)
#define CT_v1100	((void*)startLabel+2552)
#define CF_LAMBDA995	((void*)startLabel+2560)
#define FN_LAMBDA994	((void*)startLabel+2580)
#define CT_v1101	((void*)startLabel+2624)
#define F0_LAMBDA994	((void*)startLabel+2632)
#define FN_LAMBDA993	((void*)startLabel+2644)
#define CT_v1102	((void*)startLabel+2656)
#define F0_LAMBDA993	((void*)startLabel+2664)
#define FN_LAMBDA992	((void*)startLabel+2676)
#define CT_v1103	((void*)startLabel+2688)
#define F0_LAMBDA992	((void*)startLabel+2696)
#define FN_LAMBDA991	((void*)startLabel+2708)
#define CT_v1104	((void*)startLabel+2720)
#define F0_LAMBDA991	((void*)startLabel+2728)
#define FN_LAMBDA990	((void*)startLabel+2740)
#define v1113	((void*)startLabel+2766)
#define v1110	((void*)startLabel+2770)
#define v1111	((void*)startLabel+2783)
#define v1107	((void*)startLabel+2801)
#define CT_v1114	((void*)startLabel+2828)
#define F0_LAMBDA990	((void*)startLabel+2836)
#define FN_LAMBDA989	((void*)startLabel+2856)
#define CT_v1115	((void*)startLabel+2876)
#define CF_LAMBDA989	((void*)startLabel+2884)
#define CT_v1116	((void*)startLabel+2932)
#define FN_LAMBDA1017	((void*)startLabel+2976)
#define CT_v1117	((void*)startLabel+3000)
#define F0_LAMBDA1017	((void*)startLabel+3008)
#define FN_LAMBDA1016	((void*)startLabel+3048)
#define CT_v1118	((void*)startLabel+3144)
#define F0_LAMBDA1016	((void*)startLabel+3152)
#define FN_LAMBDA1015	((void*)startLabel+3208)
#define CT_v1119	((void*)startLabel+3248)
#define F0_LAMBDA1015	((void*)startLabel+3256)
#define FN_LAMBDA1014	((void*)startLabel+3312)
#define CT_v1120	((void*)startLabel+3404)
#define F0_LAMBDA1014	((void*)startLabel+3412)
#define FN_LAMBDA1013	((void*)startLabel+3480)
#define CT_v1121	((void*)startLabel+3524)
#define F0_LAMBDA1013	((void*)startLabel+3532)
#define FN_LAMBDA1012	((void*)startLabel+3580)
#define v1126	((void*)startLabel+3592)
#define v1125	((void*)startLabel+3596)
#define v1122	((void*)startLabel+3687)
#define CT_v1127	((void*)startLabel+3724)
#define F0_LAMBDA1012	((void*)startLabel+3732)
#define FN_LAMBDA1011	((void*)startLabel+3772)
#define CT_v1129	((void*)startLabel+3792)
#define CF_LAMBDA1011	((void*)startLabel+3800)
#define FN_LAMBDA1010	((void*)startLabel+3820)
#define CT_v1130	((void*)startLabel+3872)
#define F0_LAMBDA1010	((void*)startLabel+3880)
#define FN_LAMBDA1009	((void*)startLabel+3904)
#define CT_v1131	((void*)startLabel+3960)
#define F0_LAMBDA1009	((void*)startLabel+3968)
#define ST_v1070	((void*)startLabel+3980)
#define ST_v1077	((void*)startLabel+3981)
#define ST_v1093	((void*)startLabel+3983)
#define ST_v1099	((void*)startLabel+4045)
#define ST_v1095	((void*)startLabel+4116)
#define ST_v1128	((void*)startLabel+4187)
#define ST_v1079	((void*)startLabel+4248)
#define ST_v1073	((void*)startLabel+4250)
extern Node FN_Info_46fieldsI[];
extern Node FN_Info_46uniqueI[];
extern Node FN_Info_46tidI[];
extern Node FN_TokenId_46dropM[];
extern Node FN_TokenId_46isTidOp[];
extern Node CF_TokenId_46tTrue[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Nice_46showsOp[];
extern Node FN_Info_46ntI[];
extern Node CF_TokenId_46t_95readCon0[];
extern Node FN_State_46unitS[];
extern Node CF_TokenId_46t_95readConInfix[];
extern Node FN_MkSyntax_46mkInt[];
extern Node CF_TokenId_46t_95readConArg[];
extern Node CF_TokenId_46treadParen[];
extern Node CF_TokenId_46t_95greater[];
extern Node FN_Prelude_46foldr[];
extern Node FN_Prelude_46_36[];
extern Node F0_State_46unitS[];
extern Node FN_NHC_46Internal_46_95patternMatchFail[];
extern Node FN_Prelude_46null[];
extern Node FN_Prelude_46any[];
extern Node F0_Maybe_46isNothing[];
extern Node FN_Prelude_46_124_124[];
extern Node CF_TokenId_46tFalse[];
extern Node FN_Nice_46showsVar[];
extern Node CF_TokenId_46t_95readCon[];
extern Node FN_Prelude_46length[];
extern Node FN_Prelude_46Num_46Prelude_46Int_46_45[];
extern Node FN_Prelude_46replicate[];
extern Node CF_TokenId_46t_95readField[];
extern Node FN_Prelude_46_46[];
extern Node F0_IntState_46getInfo[];
extern Node F0_Maybe_46fromJust[];
extern Node FN_State_46mapS[];
extern Node FN_State_46_62_62_62_61[];
extern Node FN_Prelude_46reverse[];
extern Node FN_Prelude_46zip[];
extern Node FN_NHC_46Internal_46_95apply2[];
extern Node CF_TokenId_46t_95readFinal[];
extern Node FN_Info_46fixityI[];
extern Node FN_Prelude_46Num_46Prelude_46Int_46_43[];
extern Node F0_IntState_46getUnique[];
extern Node CF_TokenId_46t_95append[];
extern Node CF_TokenId_46treadsPrec[];
extern Node FN_IntState_46getInfo[];
extern Node FN_Info_46constrsI[];
extern Node FN_Prelude_46map[];
extern Node F0_NT_46mkNTvar[];
extern Node FN_NT_46mkNTcons[];
extern Node FN_IntState_46addInstMethod[];
extern Node CF_TokenId_46tRead[];
extern Node FN_Derive_46Lib_46syntaxCtxs[];
extern Node FN_Derive_46Lib_46syntaxType[];

static Node startLabel[] = {
  bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v1064)
,	/* FN_Derive_46Read_46mkReadExp: (byte 0) */
  bytes2word(NEEDHEAP_P1,33,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,5,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_I1)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,12)
, bytes2word(2,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,9,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_CVAL_P1)
, bytes2word(10,HEAP_I1,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,5)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,6,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,12,HEAP_ARG,5)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1056: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1024: (byte 4) */
  bytes2word(POP_I1,JUMP,197,1)
, bytes2word(UNPACK,4,PUSH_P1,3)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1057: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1028: (byte 4) */
  bytes2word(POP_I1,JUMP,176,1)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v1032: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(68),BOT(68))
, bytes2word(POP_I1,HEAP_CVAL_N1,4,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,9,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,8)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,8,HEAP_P1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_P1,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_P1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,9,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
,	/* v1033: (byte 4) */
  bytes2word(14,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_P1,98,TABLESWITCH,2)
,	/* v1059: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1037: (byte 4) */
  bytes2word(POP_I1,JUMP,141,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_P1,98,TABLESWITCH,2)
,	/* v1060: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1041: (byte 4) */
  bytes2word(POP_I1,JUMP,120,0)
, bytes2word(POP_I1,PUSH_HEAP,HEAP_CVAL_P1,15)
, bytes2word(HEAP_ARG,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_N1,4,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,9,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,20,HEAP_ARG,4)
, bytes2word(HEAP_I2,HEAP_CVAL_P1,20,HEAP_ARG)
, bytes2word(4,HEAP_I1,HEAP_CVAL_P1,20)
, bytes2word(HEAP_ARG,4,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,8)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,8,HEAP_P1,14)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_P1,17,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,14)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,20,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,26)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,35)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,9)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,14,HEAP_OFF_N1)
,	/* v1038: (byte 2) */
  bytes2word(4,RETURN_EVAL,POP_P1,2)
,	/* v1034: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1029: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_IN3,HEAP_CVAL_P1)
, bytes2word(21,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_IN3,HEAP_CVAL_P1)
, bytes2word(22,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_IN3,HEAP_CVAL_P1,23)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,9)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,7,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,20)
, bytes2word(HEAP_ARG,4,HEAP_INT_P1,9)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,8,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,9,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,24)
, bytes2word(HEAP_ARG,4,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_IN3,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_N1,8,HEAP_P1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(8,HEAP_P1,10,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,8,HEAP_P1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(8,HEAP_OFF_N1,14,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,9,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(25,HEAP_OFF_N1,30,HEAP_OFF_N1)
, bytes2word(5,HEAP_I2,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_N1,8,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,44)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,73,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,9,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(26,HEAP_CVAL_P1,27,HEAP_OFF_N1)
,	/* v1025: (byte 2) */
  bytes2word(5,RETURN_EVAL,POP_P1,4)
,	/* v1021: (byte 3) */
  bytes2word(JUMP,2,0,HEAP_CVAL_P1)
, bytes2word(28,PUSH_HEAP,HEAP_CVAL_P1,29)
,	/* v1019: (byte 3) */
  bytes2word(HEAP_OFF_N1,2,RETURN_EVAL,HEAP_CVAL_P1)
, bytes2word(30,HEAP_I2,HEAP_CVAL_P1,31)
, bytes2word(HEAP_CVAL_P1,32,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,3,HEAP_I2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,33,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,EVAL,NEEDHEAP_P1)
, bytes2word(58,JUMPFALSE,107,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_IN3,HEAP_CVAL_P1)
, bytes2word(34,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_P1,35)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,36,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,5,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,6,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_ARG,5,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v1061: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1047: (byte 4) */
  bytes2word(POP_I1,JUMP,35,1)
, bytes2word(UNPACK,4,PUSH_P1,3)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1062: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1051: (byte 4) */
  bytes2word(POP_I1,JUMP,14,1)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_P1,95,TABLESWITCH,2)
,	/* v1063: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1055: (byte 4) */
  bytes2word(POP_I1,JUMP,66,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,4,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,9,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,8)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,8,HEAP_P1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_P1,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_P1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,9,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
,	/* v1052: (byte 4) */
  bytes2word(14,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_IN3,HEAP_CVAL_P1)
, bytes2word(21,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_IN3,HEAP_CVAL_P1)
, bytes2word(22,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_IN3,HEAP_CVAL_P1,23)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,9)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,7,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,20)
, bytes2word(HEAP_ARG,4,HEAP_INT_P1,9)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,8,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,9,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,37)
, bytes2word(HEAP_ARG,4,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_IN3,HEAP_CVAL_P1)
, bytes2word(38,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,7,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_N1,8,HEAP_P1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(8,HEAP_P1,10,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,8,HEAP_OFF_N1)
, bytes2word(11,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(9,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,25,HEAP_OFF_N1)
, bytes2word(27,HEAP_OFF_N1,5,HEAP_I2)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,8)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,41,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,70)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,9)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,26,HEAP_CVAL_P1)
,	/* v1048: (byte 4) */
  bytes2word(27,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(POP_P1,4,JUMP,2)
,	/* v1044: (byte 1) */
  bytes2word(0,HEAP_CVAL_P1,39,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,29,HEAP_OFF_N1,2)
,	/* v1042: (byte 1) */
  bytes2word(RETURN_EVAL,PUSH_HEAP,HEAP_CVAL_P1,40)
, bytes2word(HEAP_ARG,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(41,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(42,HEAP_CVAL_P1,43,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,44,HEAP_OFF_N1)
, bytes2word(3,HEAP_INT_P1,1,HEAP_CVAL_P1)
, bytes2word(45,HEAP_CVAL_P1,46,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,11)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_P1,47,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,9,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,7,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_P1,35,HEAP_P1,4)
, bytes2word(HEAP_CVAL_P1,48,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,5,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(6,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,49,HEAP_CVAL_P1)
, bytes2word(50,HEAP_CVAL_P1,51,HEAP_CVAL_P1)
, bytes2word(52,HEAP_OFF_N1,4,HEAP_P1)
, bytes2word(7,HEAP_CVAL_P1,53,HEAP_ARG)
, bytes2word(1,HEAP_I1,HEAP_P1,6)
, bytes2word(HEAP_P1,0,HEAP_I2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,54,HEAP_OFF_N1)
, bytes2word(13,HEAP_OFF_N1,11,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(14,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
, CONSTR(4,0,0)
, CONSTR(15,2,0)
,	/* CT_v1064: (byte 0) */
  HW(52,5)
, 0
,	/* F0_Derive_46Read_46mkReadExp: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Read_46mkReadExp),5)
, VAPTAG(useLabel(FN_Info_46fieldsI))
, VAPTAG(useLabel(FN_Info_46uniqueI))
, VAPTAG(useLabel(FN_Info_46tidI))
, VAPTAG(useLabel(FN_TokenId_46dropM))
, VAPTAG(useLabel(FN_TokenId_46isTidOp))
, useLabel(CF_TokenId_46tTrue)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Nice_46showsOp))
, VAPTAG(useLabel(FN_LAMBDA989))
, VAPTAG(useLabel(FN_Info_46ntI))
, useLabel(CF_TokenId_46t_95readCon0)
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_LAMBDA990))
, VAPTAG(useLabel(FN_LAMBDA991))
, VAPTAG(useLabel(FN_LAMBDA992))
, VAPTAG(useLabel(FN_LAMBDA993))
, useLabel(CF_TokenId_46t_95readConInfix)
, VAPTAG(useLabel(FN_MkSyntax_46mkInt))
, useLabel(CF_TokenId_46t_95readConArg)
, useLabel(CF_TokenId_46treadParen)
, useLabel(CF_TokenId_46t_95greater)
, CAPTAG(useLabel(FN_LAMBDA994),2)
, VAPTAG(useLabel(FN_Prelude_46foldr))
, VAPTAG(useLabel(FN_Prelude_46_36))
, useLabel(F0_State_46unitS)
, VAPTAG(useLabel(FN_LAMBDA995))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, VAPTAG(useLabel(FN_Prelude_46null))
, VAPTAG(useLabel(FN_Prelude_46any))
, useLabel(F0_Maybe_46isNothing)
, VAPTAG(useLabel(FN_Prelude_46_124_124))
, useLabel(CF_TokenId_46tFalse)
, VAPTAG(useLabel(FN_Nice_46showsVar))
, VAPTAG(useLabel(FN_LAMBDA996))
, CAPTAG(useLabel(FN_LAMBDA997),2)
, useLabel(CF_TokenId_46t_95readCon)
, VAPTAG(useLabel(FN_LAMBDA998))
, VAPTAG(useLabel(FN_LAMBDA1000))
, VAPTAG(useLabel(FN_LAMBDA1001))
, VAPTAG(useLabel(FN_LAMBDA1002))
, VAPTAG(useLabel(FN_Prelude_46length))
, VAPTAG(useLabel(FN_Prelude_46Num_46Prelude_46Int_46_45))
, VAPTAG(useLabel(FN_LAMBDA1003))
, VAPTAG(useLabel(FN_Prelude_46replicate))
, useLabel(CF_TokenId_46t_95readField)
, VAPTAG(useLabel(FN_LAMBDA1006))
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_IntState_46getInfo)
, useLabel(F0_Maybe_46fromJust)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA1008),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(9,0,8,1)
, bytes2word(7,2,6,3)
, bytes2word(5,4,4,5)
, bytes2word(3,6,2,7)
, bytes2word(1,8,0,9)
, useLabel(CT_v1065)
,	/* FN_LAMBDA1008: (byte 0) */
  bytes2word(NEEDHEAP_P1,101,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,7)
, bytes2word(HEAP_INT_P1,9,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,14)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,5)
, bytes2word(HEAP_ARG,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_CVAL_P1,8,HEAP_ARG_ARG)
, bytes2word(2,7,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,11,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,5,HEAP_ARG,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,2,HEAP_ARG_ARG,5)
, bytes2word(9,HEAP_CVAL_I4,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,36,HEAP_OFF_N1,14)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(43,HEAP_OFF_N1,6,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(8,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(56,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,85,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,5,HEAP_ARG)
, bytes2word(7,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,14,HEAP_CVAL_P1,15)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(14,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v1065: (byte 0) */
  HW(13,9)
, 0
,	/* F0_LAMBDA1008: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1008),9)
, useLabel(CF_TokenId_46treadParen)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_TokenId_46t_95greater)
, VAPTAG(useLabel(FN_MkSyntax_46mkInt))
, CAPTAG(useLabel(FN_Derive_46Read_46Prelude_46519_46expReadFinal),1)
, CAPTAG(useLabel(FN_LAMBDA1007),2)
, useLabel(CF_TokenId_46t_95readCon)
, VAPTAG(useLabel(FN_Prelude_46reverse))
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_Prelude_46foldr))
, VAPTAG(useLabel(FN_Prelude_46_36))
, useLabel(F0_State_46unitS)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1069)
,	/* FN_LAMBDA1007: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_I1)
, bytes2word(HEAP_I2,HEAP_ARG,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1069: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA1007: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1007),4)
, VAPTAG(useLabel(FN_Derive_46Read_46Prelude_46520_46expLabel))
, bytes2word(0,0,0,0)
, useLabel(CT_v1071)
,	/* FN_LAMBDA1006: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1070)
,	/* CT_v1071: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1006: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1006))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v1072)
,	/* FN_Derive_46Read_46Prelude_46519_46expReadFinal: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_I3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_IN3,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(6,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,6,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,19,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_N1,7)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(14,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v1072: (byte 0) */
  HW(3,3)
, 0
,	/* F0_Derive_46Read_46Prelude_46519_46expReadFinal: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Read_46Prelude_46519_46expReadFinal),3)
, useLabel(CF_TokenId_46t_95readFinal)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_LAMBDA1005))
, bytes2word(0,0,0,0)
, useLabel(CT_v1074)
,	/* FN_LAMBDA1005: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1073)
,	/* CT_v1074: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1005: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1005))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v1075)
,	/* FN_Derive_46Read_46Prelude_46520_46expLabel: (byte 0) */
  bytes2word(NEEDHEAP_P1,41,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,12,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,28,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,4,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,5,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,5,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(19,2,0)
, CONSTR(2,2,0)
, CONSTR(0,0,0)
,	/* CT_v1075: (byte 0) */
  HW(5,5)
, 0
,	/* F0_Derive_46Read_46Prelude_46520_46expLabel: (byte 0) */
  CAPTAG(useLabel(FN_Derive_46Read_46Prelude_46520_46expLabel),5)
, VAPTAG(useLabel(FN_Info_46tidI))
, VAPTAG(useLabel(FN_TokenId_46dropM))
, VAPTAG(useLabel(FN_Nice_46showsVar))
, VAPTAG(useLabel(FN_LAMBDA1004))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, bytes2word(0,0,0,0)
, useLabel(CT_v1076)
,	/* FN_LAMBDA1004: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1070)
,	/* CT_v1076: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1004: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1004))
, bytes2word(0,0,0,0)
, useLabel(CT_v1078)
,	/* FN_LAMBDA1003: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1077)
,	/* CT_v1078: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1003: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1003))
, bytes2word(0,0,0,0)
, useLabel(CT_v1080)
,	/* FN_LAMBDA1002: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1079)
,	/* CT_v1080: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1002: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1002))
, bytes2word(1,0,0,1)
, useLabel(CT_v1081)
,	/* FN_LAMBDA1001: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1081: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA1001: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1001),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v1092)
,	/* FN_LAMBDA1000: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v1090: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v1085: (byte 2) */
  bytes2word(30,0,UNPACK,4)
, bytes2word(PUSH_P1,3,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v1091: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v1089: (byte 2) */
  bytes2word(9,0,UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_I2)
,	/* v1086: (byte 1) */
  bytes2word(RETURN,POP_P1,4,JUMP)
,	/* v1082: (byte 2) */
  bytes2word(2,0,HEAP_CVAL_I4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v1092: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA1000: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1000),1)
, VAPTAG(useLabel(FN_Info_46ntI))
, VAPTAG(useLabel(FN_LAMBDA999))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v1094)
,	/* FN_LAMBDA999: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1093)
,	/* CT_v1094: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA999: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA999))
, bytes2word(0,0,0,0)
, useLabel(CT_v1096)
,	/* FN_LAMBDA998: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1095)
,	/* CT_v1096: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA998: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA998))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1097)
,	/* FN_LAMBDA997: (byte 0) */
  bytes2word(ZAP_ARG_I3,NEEDHEAP_I32,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1097: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA997: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA997),4)
, bytes2word(0,0,0,0)
, useLabel(CT_v1098)
,	/* FN_LAMBDA996: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1070)
,	/* CT_v1098: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA996: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA996))
, bytes2word(0,0,0,0)
, useLabel(CT_v1100)
,	/* FN_LAMBDA995: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1099)
,	/* CT_v1100: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA995: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA995))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1101)
,	/* FN_LAMBDA994: (byte 0) */
  bytes2word(ZAP_ARG_I3,NEEDHEAP_I32,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1101: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA994: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA994),4)
, bytes2word(1,0,0,1)
, useLabel(CT_v1102)
,	/* FN_LAMBDA993: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,3)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1102: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA993: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA993),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v1103)
,	/* FN_LAMBDA992: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,2)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1103: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA992: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA992),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v1104)
,	/* FN_LAMBDA991: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1104: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA991: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA991),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v1114)
,	/* FN_LAMBDA990: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,ZAP_ARG_I1,EVAL,UNPACK)
, bytes2word(2,PUSH_P1,0,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,5,NOP)
, bytes2word(TOP(10),BOT(10),TOP(10),BOT(10))
, bytes2word(TOP(14),BOT(14),TOP(27),BOT(27))
,	/* v1113: (byte 2) */
  bytes2word(TOP(10),BOT(10),POP_I1,JUMP)
,	/* v1110: (byte 2) */
  bytes2word(33,0,POP_I1,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,HEAP_INT_P1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_I2,HEAP_OFF_N1)
,	/* v1111: (byte 3) */
  bytes2word(5,HEAP_I2,RETURN,POP_I1)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,HEAP_INT_P1,1)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,HEAP_INT_P1,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_I2)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
,	/* v1107: (byte 1) */
  bytes2word(RETURN,HEAP_CVAL_I4,HEAP_I1,HEAP_INT_P1)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_I2,HEAP_I2,HEAP_OFF_N1,6)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
,	/* CT_v1114: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA990: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA990),1)
, VAPTAG(useLabel(FN_Info_46fixityI))
, VAPTAG(useLabel(FN_Prelude_46Num_46Prelude_46Int_46_43))
, bytes2word(0,0,0,0)
, useLabel(CT_v1115)
,	/* FN_LAMBDA989: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1070)
,	/* CT_v1115: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA989: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA989))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v1116)
,};
Node FN_Derive_46Read_46deriveRead[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(5,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG_ARG,4,6,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,9)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1116: (byte 0) */
  HW(3,6)
, 0
,};
Node F0_Derive_46Read_46deriveRead[] = {
  CAPTAG(useLabel(FN_Derive_46Read_46deriveRead),6)
, CAPTAG(useLabel(FN_LAMBDA1017),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_IntState_46getUnique)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v1117)
,	/* FN_LAMBDA1017: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,7)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG_ARG,4,5,HEAP_ARG)
, bytes2word(6,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,10,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1117: (byte 0) */
  HW(3,7)
, 0
,	/* F0_LAMBDA1017: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1017),7)
, CAPTAG(useLabel(FN_LAMBDA1016),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(F0_IntState_46getUnique)
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v1118)
,	/* FN_LAMBDA1016: (byte 0) */
  bytes2word(NEEDHEAP_P1,44,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,4,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG_ARG)
, bytes2word(7,8,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG_ARG,7,1,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG,5,HEAP_CVAL_P1)
, bytes2word(7,HEAP_I2,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_ARG,6,HEAP_P1,0)
, bytes2word(HEAP_I1,HEAP_ARG,7,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,13)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(2,0,0)
, CONSTR(14,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v1118: (byte 0) */
  HW(6,8)
, 0
,	/* F0_LAMBDA1016: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1016),8)
, useLabel(CF_TokenId_46t_95append)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_TokenId_46treadsPrec)
, CAPTAG(useLabel(FN_IntState_46getInfo),2)
, CAPTAG(useLabel(FN_LAMBDA1015),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1119)
,	/* FN_LAMBDA1015: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG_ARG,11)
, bytes2word(1,HEAP_ARG_ARG,2,3)
, bytes2word(HEAP_ARG_ARG,4,5,HEAP_ARG_ARG)
, bytes2word(6,7,HEAP_ARG_ARG,8)
, bytes2word(9,HEAP_ARG,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,16)
, bytes2word(HEAP_OFF_N1,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1119: (byte 0) */
  HW(5,11)
, 0
,	/* F0_LAMBDA1015: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1015),11)
, VAPTAG(useLabel(FN_Info_46constrsI))
, VAPTAG(useLabel(FN_State_46mapS))
, useLabel(F0_IntState_46getInfo)
, CAPTAG(useLabel(FN_LAMBDA1014),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1120)
,	/* FN_LAMBDA1014: (byte 0) */
  bytes2word(NEEDHEAP_P1,39,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,7,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_IN3,HEAP_ARG,7)
, bytes2word(HEAP_OFF_N1,13,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,20)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,9)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,10)
, bytes2word(HEAP_ARG_ARG,3,12,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,13,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1120: (byte 0) */
  HW(9,12)
, 0
,	/* F0_LAMBDA1014: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1014),12)
, VAPTAG(useLabel(FN_Info_46tidI))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_NT_46mkNTvar)
, VAPTAG(useLabel(FN_NT_46mkNTcons))
, CAPTAG(useLabel(FN_IntState_46addInstMethod),2)
, useLabel(CF_TokenId_46tRead)
, useLabel(CF_TokenId_46treadsPrec)
, CAPTAG(useLabel(FN_LAMBDA1013),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1121)
,	/* FN_LAMBDA1013: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,7)
, bytes2word(8,HEAP_ARG_ARG,1,9)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,6,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I5,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,11,7,HEAP_ARG_ARG)
, bytes2word(8,9,HEAP_ARG,10)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(14,HEAP_OFF_N1,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1121: (byte 0) */
  HW(4,11)
, 0
,	/* F0_LAMBDA1013: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1013),11)
, CAPTAG(useLabel(FN_Derive_46Read_46mkReadExp),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA1012),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v1127)
,	/* FN_LAMBDA1012: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_P1,49,TABLESWITCH,2)
,	/* v1126: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1125: (byte 4) */
  bytes2word(POP_I1,JUMP,93,0)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,8)
, bytes2word(3,HEAP_ARG,4,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I4,HEAP_ARG_ARG,8)
, bytes2word(9,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_P1,0,HEAP_I1,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,2,HEAP_CVAL_N1)
, bytes2word(4,HEAP_OFF_N1,16,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG_ARG,8,5)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(44,HEAP_OFF_N1,4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
,	/* v1122: (byte 3) */
  bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,HEAP_CVAL_P1)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,2,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,3,0)
, CONSTR(0,3,0)
, CONSTR(0,1,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1127: (byte 0) */
  HW(7,10)
, 0
,	/* F0_LAMBDA1012: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1012),10)
, CAPTAG(useLabel(FN_LAMBDA1009),1)
, CAPTAG(useLabel(FN_LAMBDA1010),2)
, VAPTAG(useLabel(FN_Prelude_46foldr))
, VAPTAG(useLabel(FN_Prelude_46_36))
, useLabel(F0_State_46unitS)
, VAPTAG(useLabel(FN_LAMBDA1011))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v1129)
,	/* FN_LAMBDA1011: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v1128)
,	/* CT_v1129: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA1011: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA1011))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v1130)
,	/* FN_LAMBDA1010: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(3,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(13,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1130: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA1010: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1010),4)
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v1131)
,	/* FN_LAMBDA1009: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,3)
, bytes2word(1,HEAP_CVAL_I4,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG,5,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(13,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(7,HEAP_ARG,6,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,5,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v1131: (byte 0) */
  HW(2,6)
, 0
,	/* F0_LAMBDA1009: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA1009),6)
, VAPTAG(useLabel(FN_Derive_46Lib_46syntaxCtxs))
, VAPTAG(useLabel(FN_Derive_46Lib_46syntaxType))
,	/* ST_v1070: (byte 0) */
 	/* ST_v1077: (byte 1) */
 	/* ST_v1093: (byte 3) */
  bytes2word(0,44,0,68)
, bytes2word(101,114,105,118)
, bytes2word(101,46,82,101)
, bytes2word(97,100,58,32)
, bytes2word(78,111,32,109)
, bytes2word(97,116,99,104)
, bytes2word(32,105,110,32)
, bytes2word(112,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(101,120,112,114)
, bytes2word(101,115,115,105)
, bytes2word(111,110,32,97)
, bytes2word(116,32,49,48)
, bytes2word(54,58,49,50)
, bytes2word(45,49,48,54)
, bytes2word(58,51,50,46)
,	/* ST_v1099: (byte 1) */
  bytes2word(0,68,101,114)
, bytes2word(105,118,101,46)
, bytes2word(82,101,97,100)
, bytes2word(58,32,78,111)
, bytes2word(32,109,97,116)
, bytes2word(99,104,105,110)
, bytes2word(103,32,97,108)
, bytes2word(116,101,114,110)
, bytes2word(97,116,105,118)
, bytes2word(101,32,105,110)
, bytes2word(32,99,97,115)
, bytes2word(101,32,101,120)
, bytes2word(112,114,101,115)
, bytes2word(115,105,111,110)
, bytes2word(32,97,116,32)
, bytes2word(53,55,58,57)
, bytes2word(45,55,52,58)
,	/* ST_v1095: (byte 4) */
  bytes2word(52,52,46,0)
, bytes2word(68,101,114,105)
, bytes2word(118,101,46,82)
, bytes2word(101,97,100,58)
, bytes2word(32,78,111,32)
, bytes2word(109,97,116,99)
, bytes2word(104,105,110,103)
, bytes2word(32,97,108,116)
, bytes2word(101,114,110,97)
, bytes2word(116,105,118,101)
, bytes2word(32,105,110,32)
, bytes2word(99,97,115,101)
, bytes2word(32,101,120,112)
, bytes2word(114,101,115,115)
, bytes2word(105,111,110,32)
, bytes2word(97,116,32,56)
, bytes2word(49,58,57,45)
, bytes2word(57,50,58,52)
,	/* ST_v1128: (byte 3) */
  bytes2word(52,46,0,68)
, bytes2word(101,114,105,118)
, bytes2word(101,46,82,101)
, bytes2word(97,100,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,108,97,109)
, bytes2word(98,100,97,32)
, bytes2word(97,116,32,51)
, bytes2word(49,58,53,56)
, bytes2word(45,51,57,58)
,	/* ST_v1079: (byte 4) */
  bytes2word(49,55,46,0)
,	/* ST_v1073: (byte 2) */
  bytes2word(123,0,125,0)
,};
