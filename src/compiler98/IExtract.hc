#include "newmacros.h"
#include "runtime.h"

#define v4285	((void*)startLabel+22)
#define v4286	((void*)startLabel+38)
#define v4287	((void*)startLabel+53)
#define v4288	((void*)startLabel+64)
#define CT_v4290	((void*)startLabel+84)
#define CT_v4291	((void*)startLabel+148)
#define CT_v4292	((void*)startLabel+196)
#define CT_v4293	((void*)startLabel+288)
#define FN_LAMBDA4205	((void*)startLabel+344)
#define CT_v4294	((void*)startLabel+356)
#define F0_LAMBDA4205	((void*)startLabel+364)
#define FN_LAMBDA4204	((void*)startLabel+376)
#define CT_v4295	((void*)startLabel+388)
#define F0_LAMBDA4204	((void*)startLabel+396)
#define FN_IExtract_46transTid	((void*)startLabel+416)
#define v4299	((void*)startLabel+472)
#define v4300	((void*)startLabel+540)
#define CT_v4303	((void*)startLabel+576)
#define F0_IExtract_46transTid	((void*)startLabel+584)
#define FN_IExtract_46uniqueTVar	((void*)startLabel+644)
#define v4305	((void*)startLabel+660)
#define v4306	((void*)startLabel+710)
#define CT_v4308	((void*)startLabel+724)
#define F0_IExtract_46uniqueTVar	((void*)startLabel+732)
#define FN_LAMBDA4208	((void*)startLabel+792)
#define CT_v4310	((void*)startLabel+812)
#define CF_LAMBDA4208	((void*)startLabel+820)
#define FN_LAMBDA4207	((void*)startLabel+832)
#define CT_v4312	((void*)startLabel+852)
#define CF_LAMBDA4207	((void*)startLabel+860)
#define FN_LAMBDA4206	((void*)startLabel+872)
#define CT_v4313	((void*)startLabel+892)
#define F0_LAMBDA4206	((void*)startLabel+900)
#define FN_IExtract_46transTVar	((void*)startLabel+916)
#define CT_v4314	((void*)startLabel+940)
#define F0_IExtract_46transTVar	((void*)startLabel+948)
#define FN_IExtract_46transType	((void*)startLabel+980)
#define v4316	((void*)startLabel+994)
#define v4317	((void*)startLabel+1029)
#define v4318	((void*)startLabel+1061)
#define v4319	((void*)startLabel+1071)
#define CT_v4321	((void*)startLabel+1104)
#define F0_IExtract_46transType	((void*)startLabel+1112)
#define FN_LAMBDA4210	((void*)startLabel+1164)
#define CT_v4322	((void*)startLabel+1184)
#define F0_LAMBDA4210	((void*)startLabel+1192)
#define FN_LAMBDA4209	((void*)startLabel+1208)
#define CT_v4323	((void*)startLabel+1232)
#define F0_LAMBDA4209	((void*)startLabel+1240)
#define v4342	((void*)startLabel+1266)
#define v4327	((void*)startLabel+1270)
#define v4343	((void*)startLabel+1282)
#define v4331	((void*)startLabel+1286)
#define v4344	((void*)startLabel+1296)
#define v4335	((void*)startLabel+1300)
#define v4345	((void*)startLabel+1312)
#define v4339	((void*)startLabel+1316)
#define v4340	((void*)startLabel+1336)
#define v4336	((void*)startLabel+1339)
#define v4332	((void*)startLabel+1344)
#define v4328	((void*)startLabel+1349)
#define v4324	((void*)startLabel+1354)
#define CT_v4346	((void*)startLabel+1364)
#define FN_IExtract_46transContext	((void*)startLabel+1400)
#define v4364	((void*)startLabel+1416)
#define v4354	((void*)startLabel+1420)
#define v4366	((void*)startLabel+1438)
#define v4362	((void*)startLabel+1442)
#define v4359	((void*)startLabel+1475)
#define v4355	((void*)startLabel+1480)
#define v4351	((void*)startLabel+1485)
#define v4347	((void*)startLabel+1490)
#define CT_v4367	((void*)startLabel+1512)
#define F0_IExtract_46transContext	((void*)startLabel+1520)
#define FN_LAMBDA4211	((void*)startLabel+1560)
#define CT_v4369	((void*)startLabel+1580)
#define CF_LAMBDA4211	((void*)startLabel+1588)
#define FN_IExtract_46transTypes	((void*)startLabel+1608)
#define CT_v4370	((void*)startLabel+1656)
#define F0_IExtract_46transTypes	((void*)startLabel+1664)
#define FN_LAMBDA4212	((void*)startLabel+1704)
#define CT_v4371	((void*)startLabel+1732)
#define F0_LAMBDA4212	((void*)startLabel+1740)
#define FN_IExtract_46transFieldType	((void*)startLabel+1756)
#define v4375	((void*)startLabel+1772)
#define v4376	((void*)startLabel+1785)
#define CT_v4379	((void*)startLabel+1808)
#define F0_IExtract_46transFieldType	((void*)startLabel+1816)
#define FN_LAMBDA4216	((void*)startLabel+1848)
#define CT_v4380	((void*)startLabel+1864)
#define F0_LAMBDA4216	((void*)startLabel+1872)
#define FN_LAMBDA4215	((void*)startLabel+1896)
#define CT_v4384	((void*)startLabel+1936)
#define F0_LAMBDA4215	((void*)startLabel+1944)
#define FN_LAMBDA4214	((void*)startLabel+1976)
#define CT_v4385	((void*)startLabel+2020)
#define F0_LAMBDA4214	((void*)startLabel+2028)
#define FN_LAMBDA4213	((void*)startLabel+2044)
#define CT_v4386	((void*)startLabel+2088)
#define F0_LAMBDA4213	((void*)startLabel+2096)
#define FN_IExtract_46addRT	((void*)startLabel+2124)
#define v4390	((void*)startLabel+2134)
#define v4391	((void*)startLabel+2138)
#define v4392	((void*)startLabel+2198)
#define v4394	((void*)startLabel+2245)
#define v4387	((void*)startLabel+2249)
#define CT_v4397	((void*)startLabel+2272)
#define F0_IExtract_46addRT	((void*)startLabel+2280)
#define FN_LAMBDA4219	((void*)startLabel+2348)
#define CT_v4399	((void*)startLabel+2368)
#define CF_LAMBDA4219	((void*)startLabel+2376)
#define FN_LAMBDA4218	((void*)startLabel+2388)
#define CT_v4400	((void*)startLabel+2408)
#define F0_LAMBDA4218	((void*)startLabel+2416)
#define FN_LAMBDA4217	((void*)startLabel+2428)
#define CT_v4401	((void*)startLabel+2448)
#define F0_LAMBDA4217	((void*)startLabel+2456)
#define FN_IExtract_46Prelude_461002_46combRT	((void*)startLabel+2472)
#define v4403	((void*)startLabel+2482)
#define v4404	((void*)startLabel+2497)
#define CT_v4406	((void*)startLabel+2532)
#define F0_IExtract_46Prelude_461002_46combRT	((void*)startLabel+2540)
#define FN_IExtract_46addRT_95IS_39	((void*)startLabel+2568)
#define CT_v4407	((void*)startLabel+2604)
#define F0_IExtract_46addRT_95IS_39	((void*)startLabel+2612)
#define FN_LAMBDA4220	((void*)startLabel+2644)
#define CT_v4411	((void*)startLabel+2688)
#define F0_LAMBDA4220	((void*)startLabel+2696)
#define FN_IExtract_46addRT_95IS	((void*)startLabel+2724)
#define CT_v4415	((void*)startLabel+2784)
#define F0_IExtract_46addRT_95IS	((void*)startLabel+2792)
#define FN_IExtract_46importConstr	((void*)startLabel+2828)
#define v4427	((void*)startLabel+2894)
#define v4421	((void*)startLabel+2898)
#define v4428	((void*)startLabel+2934)
#define v4425	((void*)startLabel+2938)
#define v4422	((void*)startLabel+3006)
#define v4423	((void*)startLabel+3039)
#define v4418	((void*)startLabel+3044)
#define v4419	((void*)startLabel+3072)
#define CT_v4429	((void*)startLabel+3120)
#define F0_IExtract_46importConstr	((void*)startLabel+3128)
#define FN_LAMBDA4221	((void*)startLabel+3228)
#define CT_v4430	((void*)startLabel+3296)
#define F0_LAMBDA4221	((void*)startLabel+3304)
#define FN_IExtract_46importField	((void*)startLabel+3352)
#define v4436	((void*)startLabel+3378)
#define v4437	((void*)startLabel+3382)
#define v4456	((void*)startLabel+3438)
#define v4445	((void*)startLabel+3442)
#define v4457	((void*)startLabel+3476)
#define v4449	((void*)startLabel+3480)
#define v4450	((void*)startLabel+3530)
#define v4446	((void*)startLabel+3580)
#define v4442	((void*)startLabel+3584)
#define CT_v4458	((void*)startLabel+3680)
#define F0_IExtract_46importField	((void*)startLabel+3688)
#define FN_LAMBDA4225	((void*)startLabel+3776)
#define CT_v4459	((void*)startLabel+3812)
#define F0_LAMBDA4225	((void*)startLabel+3820)
#define FN_LAMBDA4224	((void*)startLabel+3872)
#define CT_v4460	((void*)startLabel+4060)
#define F0_LAMBDA4224	((void*)startLabel+4068)
#define FN_LAMBDA4223	((void*)startLabel+4144)
#define v4461	((void*)startLabel+4191)
#define CT_v4463	((void*)startLabel+4272)
#define F0_LAMBDA4223	((void*)startLabel+4280)
#define FN_LAMBDA4222	((void*)startLabel+4360)
#define CT_v4464	((void*)startLabel+4548)
#define F0_LAMBDA4222	((void*)startLabel+4556)
#define FN_IExtract_46transConstr	((void*)startLabel+4608)
#define v4472	((void*)startLabel+4630)
#define v4468	((void*)startLabel+4634)
#define v4470	((void*)startLabel+4652)
#define v4471	((void*)startLabel+4681)
#define v4465	((void*)startLabel+4749)
#define CT_v4474	((void*)startLabel+4764)
#define F0_IExtract_46transConstr	((void*)startLabel+4772)
#define FN_LAMBDA4238	((void*)startLabel+4840)
#define CT_v4476	((void*)startLabel+4860)
#define CF_LAMBDA4238	((void*)startLabel+4868)
#define FN_LAMBDA4237	((void*)startLabel+4900)
#define CT_v4477	((void*)startLabel+4988)
#define F0_LAMBDA4237	((void*)startLabel+4996)
#define FN_LAMBDA4236	((void*)startLabel+5088)
#define CT_v4478	((void*)startLabel+5208)
#define F0_LAMBDA4236	((void*)startLabel+5216)
#define FN_LAMBDA4235	((void*)startLabel+5280)
#define CT_v4479	((void*)startLabel+5328)
#define F0_LAMBDA4235	((void*)startLabel+5336)
#define FN_LAMBDA4234	((void*)startLabel+5376)
#define CT_v4483	((void*)startLabel+5404)
#define F0_LAMBDA4234	((void*)startLabel+5412)
#define FN_LAMBDA4233	((void*)startLabel+5424)
#define v4490	((void*)startLabel+5434)
#define v4487	((void*)startLabel+5438)
#define v4484	((void*)startLabel+5454)
#define CT_v4492	((void*)startLabel+5472)
#define F0_LAMBDA4233	((void*)startLabel+5480)
#define FN_IExtract_46Prelude_461162_46exist	((void*)startLabel+5496)
#define CT_v4493	((void*)startLabel+5520)
#define F0_IExtract_46Prelude_461162_46exist	((void*)startLabel+5528)
#define FN_IExtract_46Prelude_461156_46es	((void*)startLabel+5560)
#define CT_v4494	((void*)startLabel+5612)
#define F0_IExtract_46Prelude_461156_46es	((void*)startLabel+5620)
#define FN_LAMBDA4232	((void*)startLabel+5660)
#define v4495	((void*)startLabel+5682)
#define CT_v4497	((void*)startLabel+5700)
#define F0_LAMBDA4232	((void*)startLabel+5708)
#define FN_LAMBDA4231	((void*)startLabel+5744)
#define CT_v4498	((void*)startLabel+5868)
#define F0_LAMBDA4231	((void*)startLabel+5876)
#define FN_LAMBDA4230	((void*)startLabel+5956)
#define CT_v4499	((void*)startLabel+6004)
#define F0_LAMBDA4230	((void*)startLabel+6012)
#define FN_LAMBDA4229	((void*)startLabel+6052)
#define v4506	((void*)startLabel+6062)
#define v4503	((void*)startLabel+6066)
#define v4500	((void*)startLabel+6082)
#define CT_v4508	((void*)startLabel+6100)
#define F0_LAMBDA4229	((void*)startLabel+6108)
#define FN_LAMBDA4228	((void*)startLabel+6120)
#define CT_v4509	((void*)startLabel+6132)
#define F0_LAMBDA4228	((void*)startLabel+6140)
#define FN_LAMBDA4227	((void*)startLabel+6152)
#define CT_v4510	((void*)startLabel+6164)
#define F0_LAMBDA4227	((void*)startLabel+6172)
#define FN_LAMBDA4226	((void*)startLabel+6188)
#define v4511	((void*)startLabel+6215)
#define CT_v4513	((void*)startLabel+6252)
#define F0_LAMBDA4226	((void*)startLabel+6260)
#define FN_IExtract_46addFixityNeed	((void*)startLabel+6292)
#define v4531	((void*)startLabel+6314)
#define v4521	((void*)startLabel+6318)
#define v4525	((void*)startLabel+6346)
#define v4526	((void*)startLabel+6349)
#define v4528	((void*)startLabel+6394)
#define v4529	((void*)startLabel+6456)
#define v4518	((void*)startLabel+6492)
#define v4514	((void*)startLabel+6497)
#define CT_v4535	((void*)startLabel+6528)
#define F0_IExtract_46addFixityNeed	((void*)startLabel+6536)
#define FN_IExtract_46importMethod	((void*)startLabel+6608)
#define v4547	((void*)startLabel+6660)
#define v4541	((void*)startLabel+6664)
#define v4548	((void*)startLabel+6700)
#define v4545	((void*)startLabel+6704)
#define v4542	((void*)startLabel+6793)
#define v4538	((void*)startLabel+6849)
#define CT_v4549	((void*)startLabel+6968)
#define F0_IExtract_46importMethod	((void*)startLabel+6976)
#define FN_IExtract_46transMethod	((void*)startLabel+7048)
#define CT_v4556	((void*)startLabel+7128)
#define F0_IExtract_46transMethod	((void*)startLabel+7136)
#define FN_LAMBDA4244	((void*)startLabel+7200)
#define CT_v4557	((void*)startLabel+7232)
#define F0_LAMBDA4244	((void*)startLabel+7240)
#define FN_LAMBDA4243	((void*)startLabel+7280)
#define CT_v4558	((void*)startLabel+7368)
#define F0_LAMBDA4243	((void*)startLabel+7376)
#define FN_LAMBDA4242	((void*)startLabel+7428)
#define CT_v4565	((void*)startLabel+7488)
#define F0_LAMBDA4242	((void*)startLabel+7496)
#define FN_LAMBDA4241	((void*)startLabel+7524)
#define CT_v4566	((void*)startLabel+7536)
#define F0_LAMBDA4241	((void*)startLabel+7544)
#define FN_LAMBDA4240	((void*)startLabel+7556)
#define CT_v4567	((void*)startLabel+7568)
#define F0_LAMBDA4240	((void*)startLabel+7576)
#define FN_LAMBDA4239	((void*)startLabel+7592)
#define v4568	((void*)startLabel+7619)
#define CT_v4570	((void*)startLabel+7648)
#define F0_LAMBDA4239	((void*)startLabel+7656)
#define FN_IExtract_46importVar	((void*)startLabel+7692)
#define v4582	((void*)startLabel+7744)
#define v4576	((void*)startLabel+7748)
#define v4583	((void*)startLabel+7784)
#define v4580	((void*)startLabel+7788)
#define v4577	((void*)startLabel+7868)
#define v4573	((void*)startLabel+7920)
#define CT_v4584	((void*)startLabel+8024)
#define F0_IExtract_46importVar	((void*)startLabel+8032)
#define CT_v4585	((void*)startLabel+8172)
#define FN_LAMBDA4246	((void*)startLabel+8236)
#define CT_v4586	((void*)startLabel+8256)
#define F0_LAMBDA4246	((void*)startLabel+8264)
#define FN_LAMBDA4245	((void*)startLabel+8292)
#define CT_v4593	((void*)startLabel+8340)
#define F0_LAMBDA4245	((void*)startLabel+8348)
#define FN_IExtract_46storeInstance	((void*)startLabel+8380)
#define v4596	((void*)startLabel+8425)
#define v4598	((void*)startLabel+8507)
#define CT_v4601	((void*)startLabel+8580)
#define F0_IExtract_46storeInstance	((void*)startLabel+8588)
#define FN_IExtract_46Prelude_46924_46same	((void*)startLabel+8660)
#define CT_v4605	((void*)startLabel+8688)
#define F0_IExtract_46Prelude_46924_46same	((void*)startLabel+8696)
#define FN_IExtract_46Prelude_46925_46trans	((void*)startLabel+8720)
#define v4626	((void*)startLabel+8736)
#define v4613	((void*)startLabel+8740)
#define v4628	((void*)startLabel+8758)
#define v4621	((void*)startLabel+8762)
#define v4623	((void*)startLabel+8778)
#define v4624	((void*)startLabel+8801)
#define v4618	((void*)startLabel+8822)
#define v4614	((void*)startLabel+8827)
#define v4610	((void*)startLabel+8832)
#define v4606	((void*)startLabel+8837)
#define CT_v4630	((void*)startLabel+8868)
#define F0_IExtract_46Prelude_46925_46trans	((void*)startLabel+8876)
#define FN_LAMBDA4248	((void*)startLabel+8924)
#define CT_v4632	((void*)startLabel+8944)
#define CF_LAMBDA4248	((void*)startLabel+8952)
#define FN_LAMBDA4247	((void*)startLabel+8964)
#define CT_v4633	((void*)startLabel+8984)
#define F0_LAMBDA4247	((void*)startLabel+8992)
#define CT_v4634	((void*)startLabel+9128)
#define FN_IExtract_46Prelude_461086_46tuple	((void*)startLabel+9192)
#define CT_v4635	((void*)startLabel+9284)
#define F0_IExtract_46Prelude_461086_46tuple	((void*)startLabel+9292)
#define FN_LAMBDA4249	((void*)startLabel+9356)
#define CT_v4636	((void*)startLabel+9380)
#define F0_LAMBDA4249	((void*)startLabel+9388)
#define FN_IExtract_46Prelude_461085_46mkCtx	((void*)startLabel+9404)
#define CT_v4637	((void*)startLabel+9448)
#define F0_IExtract_46Prelude_461085_46mkCtx	((void*)startLabel+9456)
#define FN_IExtract_46existTid	((void*)startLabel+9480)
#define v4641	((void*)startLabel+9542)
#define v4642	((void*)startLabel+9553)
#define CT_v4645	((void*)startLabel+9588)
#define F0_IExtract_46existTid	((void*)startLabel+9596)
#define FN_IExtract_46importInstance	((void*)startLabel+9644)
#define v4653	((void*)startLabel+9720)
#define v4651	((void*)startLabel+9724)
#define v4648	((void*)startLabel+9783)
#define CT_v4654	((void*)startLabel+9812)
#define F0_IExtract_46importInstance	((void*)startLabel+9820)
#define FN_LAMBDA4250	((void*)startLabel+9896)
#define CT_v4656	((void*)startLabel+9916)
#define CF_LAMBDA4250	((void*)startLabel+9924)
#define CT_v4657	((void*)startLabel+9988)
#define FN_LAMBDA4256	((void*)startLabel+10036)
#define CT_v4658	((void*)startLabel+10076)
#define F0_LAMBDA4256	((void*)startLabel+10084)
#define FN_LAMBDA4255	((void*)startLabel+10120)
#define v4659	((void*)startLabel+10178)
#define CT_v4661	((void*)startLabel+10204)
#define F0_LAMBDA4255	((void*)startLabel+10212)
#define FN_LAMBDA4254	((void*)startLabel+10268)
#define v4687	((void*)startLabel+10278)
#define v4665	((void*)startLabel+10282)
#define v4688	((void*)startLabel+10294)
#define v4669	((void*)startLabel+10298)
#define v4689	((void*)startLabel+10310)
#define v4673	((void*)startLabel+10314)
#define v4690	((void*)startLabel+10336)
#define v4677	((void*)startLabel+10340)
#define v4691	((void*)startLabel+10352)
#define v4681	((void*)startLabel+10356)
#define v4678	((void*)startLabel+10369)
#define v4682	((void*)startLabel+10374)
#define v4692	((void*)startLabel+10386)
#define v4686	((void*)startLabel+10390)
#define v4683	((void*)startLabel+10403)
#define v4674	((void*)startLabel+10408)
#define v4666	((void*)startLabel+10413)
#define v4662	((void*)startLabel+10418)
#define CT_v4693	((void*)startLabel+10432)
#define F0_LAMBDA4254	((void*)startLabel+10440)
#define FN_LAMBDA4253	((void*)startLabel+10468)
#define CT_v4695	((void*)startLabel+10488)
#define CF_LAMBDA4253	((void*)startLabel+10496)
#define FN_LAMBDA4252	((void*)startLabel+10508)
#define v4701	((void*)startLabel+10522)
#define v4699	((void*)startLabel+10526)
#define v4700	((void*)startLabel+10530)
#define v4696	((void*)startLabel+10534)
#define CT_v4702	((void*)startLabel+10548)
#define F0_LAMBDA4252	((void*)startLabel+10556)
#define FN_LAMBDA4251	((void*)startLabel+10576)
#define CT_v4704	((void*)startLabel+10596)
#define CF_LAMBDA4251	((void*)startLabel+10604)
#define FN_IExtract_46newInstance	((void*)startLabel+10616)
#define CT_v4708	((void*)startLabel+10648)
#define F0_IExtract_46newInstance	((void*)startLabel+10656)
#define FN_LAMBDA4261	((void*)startLabel+10692)
#define CT_v4709	((void*)startLabel+10732)
#define F0_LAMBDA4261	((void*)startLabel+10740)
#define FN_LAMBDA4260	((void*)startLabel+10776)
#define CT_v4710	((void*)startLabel+10816)
#define F0_LAMBDA4260	((void*)startLabel+10824)
#define FN_LAMBDA4259	((void*)startLabel+10864)
#define CT_v4711	((void*)startLabel+10884)
#define F0_LAMBDA4259	((void*)startLabel+10892)
#define FN_LAMBDA4258	((void*)startLabel+10912)
#define CT_v4715	((void*)startLabel+10948)
#define F0_LAMBDA4258	((void*)startLabel+10956)
#define FN_LAMBDA4257	((void*)startLabel+10984)
#define CT_v4716	((void*)startLabel+11008)
#define F0_LAMBDA4257	((void*)startLabel+11016)
#define FN_IExtract_46importClass	((void*)startLabel+11044)
#define v4738	((void*)startLabel+11118)
#define v4722	((void*)startLabel+11122)
#define v4739	((void*)startLabel+11158)
#define v4726	((void*)startLabel+11162)
#define v4727	((void*)startLabel+11214)
#define v4728	((void*)startLabel+11265)
#define v4740	((void*)startLabel+11278)
#define v4732	((void*)startLabel+11282)
#define v4741	((void*)startLabel+11294)
#define v4736	((void*)startLabel+11298)
#define v4729	((void*)startLabel+11352)
#define v4730	((void*)startLabel+11357)
#define v4723	((void*)startLabel+11362)
#define v4724	((void*)startLabel+11383)
#define v4719	((void*)startLabel+11388)
#define v4720	((void*)startLabel+11427)
#define CT_v4742	((void*)startLabel+11472)
#define F0_IExtract_46importClass	((void*)startLabel+11480)
#define FN_LAMBDA4263	((void*)startLabel+11572)
#define CT_v4743	((void*)startLabel+11608)
#define F0_LAMBDA4263	((void*)startLabel+11616)
#define FN_LAMBDA4262	((void*)startLabel+11640)
#define v4744	((void*)startLabel+11649)
#define CT_v4746	((void*)startLabel+11668)
#define F0_LAMBDA4262	((void*)startLabel+11676)
#define FN_IExtract_46checkInstanceCls	((void*)startLabel+11692)
#define CT_v4753	((void*)startLabel+11768)
#define F0_IExtract_46checkInstanceCls	((void*)startLabel+11776)
#define FN_IExtract_46Prelude_46948_46pred	((void*)startLabel+11804)
#define CT_v4757	((void*)startLabel+11860)
#define F0_IExtract_46Prelude_46948_46pred	((void*)startLabel+11868)
#define CT_v4758	((void*)startLabel+12024)
#define FN_LAMBDA4267	((void*)startLabel+12084)
#define CT_v4759	((void*)startLabel+12152)
#define F0_LAMBDA4267	((void*)startLabel+12160)
#define FN_LAMBDA4266	((void*)startLabel+12200)
#define CT_v4760	((void*)startLabel+12236)
#define F0_LAMBDA4266	((void*)startLabel+12244)
#define FN_LAMBDA4265	((void*)startLabel+12280)
#define CT_v4761	((void*)startLabel+12324)
#define F0_LAMBDA4265	((void*)startLabel+12332)
#define FN_LAMBDA4264	((void*)startLabel+12372)
#define CT_v4762	((void*)startLabel+12384)
#define F0_LAMBDA4264	((void*)startLabel+12392)
#define FN_IExtract_46importData	((void*)startLabel+12424)
#define v4808	((void*)startLabel+12500)
#define v4768	((void*)startLabel+12504)
#define v4809	((void*)startLabel+12538)
#define v4772	((void*)startLabel+12542)
#define v4773	((void*)startLabel+12588)
#define v4810	((void*)startLabel+12608)
#define v4777	((void*)startLabel+12612)
#define v4811	((void*)startLabel+12624)
#define v4781	((void*)startLabel+12628)
#define v4812	((void*)startLabel+12644)
#define v4787	((void*)startLabel+12648)
#define v4813	((void*)startLabel+12660)
#define v4791	((void*)startLabel+12664)
#define v4788	((void*)startLabel+12674)
#define v4789	((void*)startLabel+12679)
#define v4784	((void*)startLabel+12684)
#define v4785	((void*)startLabel+12687)
#define v4778	((void*)startLabel+12737)
#define v4779	((void*)startLabel+12742)
#define v4792	((void*)startLabel+12747)
#define v4814	((void*)startLabel+12758)
#define v4796	((void*)startLabel+12762)
#define v4815	((void*)startLabel+12778)
#define v4802	((void*)startLabel+12782)
#define v4816	((void*)startLabel+12794)
#define v4806	((void*)startLabel+12798)
#define v4803	((void*)startLabel+12808)
#define v4804	((void*)startLabel+12813)
#define v4799	((void*)startLabel+12818)
#define v4800	((void*)startLabel+12821)
#define v4793	((void*)startLabel+12871)
#define v4794	((void*)startLabel+12876)
#define v4774	((void*)startLabel+12881)
#define v4775	((void*)startLabel+12925)
#define v4769	((void*)startLabel+12930)
#define v4770	((void*)startLabel+12934)
#define v4765	((void*)startLabel+12939)
#define v4766	((void*)startLabel+12963)
#define CT_v4817	((void*)startLabel+13016)
#define F0_IExtract_46importData	((void*)startLabel+13024)
#define FN_LAMBDA4269	((void*)startLabel+13116)
#define CT_v4818	((void*)startLabel+13168)
#define F0_LAMBDA4269	((void*)startLabel+13176)
#define FN_LAMBDA4268	((void*)startLabel+13204)
#define v4819	((void*)startLabel+13213)
#define CT_v4821	((void*)startLabel+13232)
#define F0_LAMBDA4268	((void*)startLabel+13240)
#define FN_IExtract_46checkInstanceCon	((void*)startLabel+13256)
#define CT_v4828	((void*)startLabel+13328)
#define F0_IExtract_46checkInstanceCon	((void*)startLabel+13336)
#define FN_IExtract_46Prelude_46970_46pred	((void*)startLabel+13364)
#define CT_v4832	((void*)startLabel+13384)
#define F0_IExtract_46Prelude_46970_46pred	((void*)startLabel+13392)
#define CT_v4833	((void*)startLabel+13456)
#define FN_LAMBDA4271	((void*)startLabel+13496)
#define CT_v4834	((void*)startLabel+13584)
#define F0_LAMBDA4271	((void*)startLabel+13592)
#define FN_LAMBDA4270	((void*)startLabel+13628)
#define CT_v4835	((void*)startLabel+13640)
#define F0_LAMBDA4270	((void*)startLabel+13648)
#define CT_v4836	((void*)startLabel+13788)
#define FN_LAMBDA4279	((void*)startLabel+13864)
#define v4845	((void*)startLabel+13876)
#define v4840	((void*)startLabel+13880)
#define v4846	((void*)startLabel+13892)
#define v4844	((void*)startLabel+13896)
#define v4841	((void*)startLabel+13934)
#define v4837	((void*)startLabel+13939)
#define CT_v4847	((void*)startLabel+13952)
#define F0_LAMBDA4279	((void*)startLabel+13960)
#define FN_LAMBDA4278	((void*)startLabel+14000)
#define CT_v4849	((void*)startLabel+14020)
#define CF_LAMBDA4278	((void*)startLabel+14028)
#define FN_LAMBDA4277	((void*)startLabel+14052)
#define CT_v4850	((void*)startLabel+14104)
#define F0_LAMBDA4277	((void*)startLabel+14112)
#define FN_LAMBDA4276	((void*)startLabel+14156)
#define CT_v4851	((void*)startLabel+14168)
#define F0_LAMBDA4276	((void*)startLabel+14176)
#define FN_LAMBDA4275	((void*)startLabel+14200)
#define v4853	((void*)startLabel+14210)
#define v4854	((void*)startLabel+14219)
#define CT_v4856	((void*)startLabel+14244)
#define F0_LAMBDA4275	((void*)startLabel+14252)
#define FN_LAMBDA4274	((void*)startLabel+14264)
#define v4861	((void*)startLabel+14274)
#define v4860	((void*)startLabel+14278)
#define v4857	((void*)startLabel+14283)
#define CT_v4862	((void*)startLabel+14292)
#define F0_LAMBDA4274	((void*)startLabel+14300)
#define FN_LAMBDA4273	((void*)startLabel+14324)
#define CT_v4863	((void*)startLabel+14348)
#define F0_LAMBDA4273	((void*)startLabel+14356)
#define FN_LAMBDA4272	((void*)startLabel+14372)
#define CT_v4864	((void*)startLabel+14396)
#define F0_LAMBDA4272	((void*)startLabel+14404)
#define CT_v4868	((void*)startLabel+14496)
#define FN_LAMBDA4280	((void*)startLabel+14552)
#define CT_v4869	((void*)startLabel+14584)
#define F0_LAMBDA4280	((void*)startLabel+14592)
#define FN_IExtract_46fixAdd	((void*)startLabel+14620)
#define v4873	((void*)startLabel+14642)
#define v4874	((void*)startLabel+14658)
#define v4875	((void*)startLabel+14681)
#define CT_v4879	((void*)startLabel+14752)
#define F0_IExtract_46fixAdd	((void*)startLabel+14760)
#define FN_IExtract_46fixTid	((void*)startLabel+14796)
#define v4881	((void*)startLabel+14806)
#define v4882	((void*)startLabel+14814)
#define CT_v4884	((void*)startLabel+14828)
#define F0_IExtract_46fixTid	((void*)startLabel+14836)
#define v4902	((void*)startLabel+14882)
#define v4890	((void*)startLabel+14886)
#define v4903	((void*)startLabel+14898)
#define v4894	((void*)startLabel+14902)
#define v4904	((void*)startLabel+14914)
#define v4898	((void*)startLabel+14918)
#define v4895	((void*)startLabel+14978)
#define v4891	((void*)startLabel+14983)
#define v4887	((void*)startLabel+14987)
#define CT_v4906	((void*)startLabel+15052)
#define CT_v4907	((void*)startLabel+15148)
#define CT_v4908	((void*)startLabel+15180)
#define v4910	((void*)startLabel+15224)
#define v4911	((void*)startLabel+15233)
#define CT_v4913	((void*)startLabel+15244)
#define CT_v4920	((void*)startLabel+15368)
#define ST_v4309	((void*)startLabel+15412)
#define ST_v4655	((void*)startLabel+15417)
#define ST_v4703	((void*)startLabel+15487)
#define ST_v4694	((void*)startLabel+15558)
#define ST_v4631	((void*)startLabel+15628)
#define ST_v4398	((void*)startLabel+15689)
#define ST_v4475	((void*)startLabel+15750)
#define ST_v4368	((void*)startLabel+15810)
#define ST_v4848	((void*)startLabel+15871)
#define ST_v4311	((void*)startLabel+15931)
extern Node FN_Prelude_46concatMap[];
extern Node FN_Prelude_46_43_43[];
extern Node FN_Prelude_46Enum_46Id_46Id_46toEnum[];
extern Node FN_Prelude_46Enum_46Id_46Id_46enumFrom[];
extern Node FN_Prelude_46zip[];
extern Node FN_Prelude_46map[];
extern Node F0_Prelude_46snd[];
extern Node FN_Prelude_46unzip[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_NHC_46Internal_46_95apply2[];
extern Node FN_TokenId_46ensureM[];
extern Node FN_Prelude_46Ord_46Prelude_462[];
extern Node CF_Prelude_46Ord_46TokenId_46TokenId[];
extern Node CF_Prelude_46Ord_46IdKind_46IdKind[];
extern Node FN_Data_46Map_46lookup[];
extern Node FN_Prelude_46fst[];
extern Node FN_ImportState_46addNeedIS[];
extern Node FN_ImportState_46addSymbolIS[];
extern Node FN_State_46_62_62_62[];
extern Node CF_Id_46IdSupply_46ImportState_46ImportState_46getUniqueId[];
extern Node FN_Info_46uniqueI[];
extern Node FN_Prelude_46lookup[];
extern Node CF_Prelude_46Eq_46TokenId_46TokenId[];
extern Node FN_Prelude_46Show_46TokenId_46TokenId_46show[];
extern Node FN_Util_46Extra_46strPos[];
extern Node FN_Prelude_46_36[];
extern Node FN_ImportState_46importError[];
extern Node FN_State_46unitS[];
extern Node F0_NT_46mkNTvar[];
extern Node FN_State_46_61_62_62_62[];
extern Node F0_NT_46mkNTcons[];
extern Node FN_State_46mapS[];
extern Node FN_Prelude_46Eq_46TokenId_46TokenId_46_61_61[];
extern Node CF_TokenId_46t_95Arrow[];
extern Node F0_Util_46Extra_46pair[];
extern Node FN_NHC_46Internal_46_95patternMatchFail[];
extern Node FN_State_46_62_62_62_61[];
extern Node FN_Prelude_46_46[];
extern Node FN_TokenId_46forceM[];
extern Node FN_Data_46Map_46update[];
extern Node CF_Prelude_46otherwise[];
extern Node FN_TokenId_46dropM[];
extern Node FN_ImportState_46renameIS[];
extern Node FN_Prelude_46seq[];
extern Node C0__40_41[];
extern Node FN_NT_46mkNTcons[];
extern Node FN_Prelude_46Eq_46Prelude_462[];
extern Node CF_Prelude_46Eq_46Id_46Id[];
extern Node CF_Prelude_46Eq_46Prelude_46Int[];
extern Node FN_Prelude_46elem[];
extern Node FN_Data_46Map_46insertWith[];
extern Node F0_Util_46Extra_46fstOf[];
extern Node CF_Prelude_46Enum_46Id_46Id[];
extern Node FN_Prelude_46concat[];
extern Node F0_Prelude_46fst[];
extern Node FN_Prelude_46Enum_46Prelude_46Int_46enumFrom[];
extern Node FN_State_46mapS0[];
extern Node FN_Prelude_46enumFrom[];
extern Node FN_Prelude_46toEnum[];
extern Node FN_Prelude_46length[];
extern Node FN_Prelude_46Num_46Prelude_46Int_46_43[];
extern Node FN_TokenId_46tUnknown[];
extern Node CF_Prelude_46Show_46Id_46Id[];
extern Node FN_Prelude_46snd[];
extern Node FN_Data_46Set_46insert[];
extern Node CF_Util_46Extra_46noPos[];
extern Node F0_Info_46combInfo[];
extern Node FN_Prelude_46Enum_46Id_46Id_46succ[];
extern Node FN_Util_46Extra_46snub[];
extern Node FN_Prelude_46head[];
extern Node FN_NT_46anyNT[];
extern Node CF_TokenId_46tunknown[];
extern Node FN_NHC_46Internal_46_95apply3[];
extern Node FN_Prelude_46any[];
extern Node F0_Util_46Extra_46isLeft[];
extern Node F0_Util_46Extra_46dropLeft[];
extern Node FN_Prelude_46filter[];
extern Node F0_Util_46Extra_46dropRight[];
extern Node FN_Prelude_46_38_38[];
extern Node CF_TokenId_46tEq[];
extern Node FN_Prelude_46Enum_46Prelude_46Int_46enumFromTo[];
extern Node CF_TokenId_46tOrd[];
extern Node CF_TokenId_46tBounded[];
extern Node CF_TokenId_46tRead[];
extern Node CF_TokenId_46tShow[];
extern Node FN_Prelude_46flip[];
extern Node F0_TokenId_46visible[];
extern Node FN_Prelude_46Enum_46Prelude_46Char_46enumFrom[];
extern Node FN_Prelude_46take[];
extern Node CF_TokenId_46rpsPrelude[];
extern Node FN_Prelude_46show[];
extern Node CF_Prelude_46reverse[];
extern Node F0_NHC_46PackedString_46packString[];
extern Node FN_Info_46addInstanceI[];
extern Node CF_Prelude_46Show_46TokenId_46TokenId[];
extern Node CF_Data_46Map_46empty[];
extern Node FN_Info_46combIE[];
extern Node FN_List_46partition[];
extern Node FN_Maybe_46isJust[];
extern Node FN_Prelude_46uncurry[];
extern Node FN_Prelude_46last[];
extern Node F0_Info_46patchIE[];
extern Node F0_Prelude_46id[];
extern Node FN_Data_46Map_46insert[];
extern Node FN_Prelude_46_61_61[];
extern Node CF_Prelude_46Eq_46Syntax_46InfixClass[];
extern Node FN_Prelude_46Show_46Syntax_46InfixClass[];
extern Node FN_Prelude_46Show_46Prelude_462[];
extern Node FN_Prelude_46foldr[];
extern Node CF_Prelude_46Show_46Prelude_46Int[];

static Node startLabel[] = {
  bytes2word(1,0,0,1)
, useLabel(CT_v4290)
,};
Node FN_IExtract_46freeType[] = {
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,4,TOP(8),BOT(8))
, bytes2word(TOP(24),BOT(24),TOP(39),BOT(39))
,	/* v4285: (byte 2) */
  bytes2word(TOP(50),BOT(50),UNPACK,3)
, bytes2word(PUSH_P1,2,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,ZAP_STACK_P1,3,ZAP_STACK_P1)
, bytes2word(2,EVAL,NEEDHEAP_I32,APPLY)
,	/* v4286: (byte 2) */
  bytes2word(1,RETURN_EVAL,UNPACK,2)
, bytes2word(HEAP_CVAL_I5,HEAP_P1,0,HEAP_CVAL_I5)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,4)
,	/* v4287: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,HEAP_CVAL_N1)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_N1,2)
,	/* v4288: (byte 4) */
  bytes2word(HEAP_I2,HEAP_OFF_N1,3,RETURN)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_I2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4290: (byte 0) */
  HW(4,1)
, 0
,};
Node F0_IExtract_46freeType[] = {
  CAPTAG(useLabel(FN_IExtract_46freeType),1)
, VAPTAG(useLabel(FN_Prelude_46concatMap))
, useLabel(F0_IExtract_46freeType)
, VAPTAG(useLabel(FN_IExtract_46freeType))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, bytes2word(1,0,0,1)
, useLabel(CT_v4291)
,};
Node FN_IExtract_46tvTids[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_INT_P1,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(PUSH_P1,0,PUSH_ARG_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,ZAP_ARG_I1,ZAP_STACK_P1,3)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4291: (byte 0) */
  HW(3,1)
, 0
,};
Node F0_IExtract_46tvTids[] = {
  CAPTAG(useLabel(FN_IExtract_46tvTids),1)
, VAPTAG(useLabel(FN_Prelude_46Enum_46Id_46Id_46toEnum))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Id_46Id_46enumFrom))
, VAPTAG(useLabel(FN_Prelude_46zip))
, bytes2word(1,0,0,1)
, useLabel(CT_v4292)
,};
Node FN_IExtract_46tvPosTids[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4292: (byte 0) */
  HW(3,1)
, 0
,};
Node F0_IExtract_46tvPosTids[] = {
  CAPTAG(useLabel(FN_IExtract_46tvPosTids),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_IExtract_46tvTids))
, bytes2word(1,0,0,1)
, useLabel(CT_v4293)
,};
Node FN_IExtract_46tvrPosTids[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(6,HEAP_CVAL_P1,7,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_INT_P1,1,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,6,HEAP_I1)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_OFF_N1,12,HEAP_OFF_N1)
, bytes2word(6,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v4293: (byte 0) */
  HW(9,1)
, 0
,};
Node F0_IExtract_46tvrPosTids[] = {
  CAPTAG(useLabel(FN_IExtract_46tvrPosTids),1)
, VAPTAG(useLabel(FN_Prelude_46unzip))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_LAMBDA4204))
, VAPTAG(useLabel(FN_LAMBDA4205))
, VAPTAG(useLabel(FN_IExtract_46tvTids))
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Id_46Id_46toEnum))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Id_46Id_46enumFrom))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, bytes2word(1,0,0,1)
, useLabel(CT_v4294)
,	/* FN_LAMBDA4205: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,2)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4294: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4205: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4205),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v4295)
,	/* FN_LAMBDA4204: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4295: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4204: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4204),1)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4303)
,	/* FN_IExtract_46transTid: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG,5,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,10,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,3,HEAP_ARG,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,2,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_I1,HEAP_P1,8,ZAP_STACK_P1)
, bytes2word(11,ZAP_STACK_P1,10,ZAP_STACK_P1)
, bytes2word(9,ZAP_STACK_P1,8,ZAP_STACK_P1)
, bytes2word(7,ZAP_STACK_P1,6,ZAP_STACK_P1)
, bytes2word(4,ZAP_STACK_P1,2,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4299: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(72),BOT(72))
, bytes2word(POP_I1,PUSH_ARG,5,PUSH_ARG)
, bytes2word(4,HEAP_CVAL_P1,8,HEAP_I2)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_P1,6,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_IN3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,4,HEAP_P1,4)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_I2,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,18,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,12)
, bytes2word(ZAP_ARG_I1,ZAP_ARG_I2,ZAP_ARG_I3,ZAP_ARG)
, bytes2word(4,ZAP_STACK_P1,7,ZAP_STACK_P1)
, bytes2word(5,ZAP_STACK_P1,3,EVAL)
,	/* v4300: (byte 4) */
  bytes2word(NEEDHEAP_I32,APPLY,2,RETURN_EVAL)
, bytes2word(UNPACK,1,HEAP_CVAL_P1,13)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(5,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(0,4,0)
, CONSTR(0,2,0)
,	/* CT_v4303: (byte 0) */
  HW(11,5)
, 0
,	/* F0_IExtract_46transTid: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transTid),5)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, VAPTAG(useLabel(FN_Prelude_46fst))
, CAPTAG(useLabel(FN_ImportState_46addNeedIS),2)
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, useLabel(CF_Id_46IdSupply_46ImportState_46ImportState_46getUniqueId)
, VAPTAG(useLabel(FN_Info_46uniqueI))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4308)
,	/* FN_IExtract_46uniqueTVar: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,3,2,ZAP_ARG_I2)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v4305: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(54),BOT(54))
, bytes2word(POP_I1,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,13,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,17)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,12)
, bytes2word(HEAP_INT_P1,0,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,6,HEAP_OFF_N1)
,	/* v4306: (byte 2) */
  bytes2word(4,RETURN,UNPACK,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,14,HEAP_I1)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4308: (byte 0) */
  HW(12,3)
, 0
,	/* F0_IExtract_46uniqueTVar: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46uniqueTVar),3)
, VAPTAG(useLabel(FN_Prelude_46lookup))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, CAPTAG(useLabel(FN_LAMBDA4206),1)
, VAPTAG(useLabel(FN_LAMBDA4207))
, VAPTAG(useLabel(FN_Prelude_46Show_46TokenId_46TokenId_46show))
, VAPTAG(useLabel(FN_LAMBDA4208))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, VAPTAG(useLabel(FN_Prelude_46_36))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Id_46Id_46toEnum))
, CAPTAG(useLabel(FN_ImportState_46importError),2)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,0,0)
, useLabel(CT_v4310)
,	/* FN_LAMBDA4208: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4309)
,	/* CT_v4310: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4208: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4208))
, bytes2word(0,0,0,0)
, useLabel(CT_v4312)
,	/* FN_LAMBDA4207: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4311)
,	/* CT_v4312: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4207: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4207))
, bytes2word(1,0,0,1)
, useLabel(CT_v4313)
,	/* FN_LAMBDA4206: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(7,1,0)
,	/* CT_v4313: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4206: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4206),1)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4314)
,	/* FN_IExtract_46transTVar: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,6)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4314: (byte 0) */
  HW(4,3)
, 0
,	/* F0_IExtract_46transTVar: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transTVar),3)
, VAPTAG(useLabel(FN_State_46unitS))
, useLabel(F0_NT_46mkNTvar)
, VAPTAG(useLabel(FN_IExtract_46uniqueTVar))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4321)
,	/* FN_IExtract_46transType: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,4,TOP(8),BOT(8))
, bytes2word(TOP(43),BOT(43),TOP(75),BOT(75))
,	/* v4316: (byte 2) */
  bytes2word(TOP(85),BOT(85),UNPACK,3)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I5,HEAP_P1,0,HEAP_OFF_N1)
, bytes2word(3,HEAP_I1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,3)
, bytes2word(HEAP_I2,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,5)
,	/* v4317: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,HEAP_CVAL_P1)
, bytes2word(9,HEAP_CVAL_I3,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG,1)
, bytes2word(HEAP_P1,0,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG,1)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
,	/* v4318: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_I1,HEAP_ARG)
,	/* v4319: (byte 3) */
  bytes2word(1,HEAP_I2,RETURN_EVAL,UNPACK)
, bytes2word(2,HEAP_CVAL_P1,12,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,10)
, bytes2word(HEAP_ARG,1,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(5,0,0)
,	/* CT_v4321: (byte 0) */
  HW(10,2)
, 0
,	/* F0_IExtract_46transType: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transType),2)
, VAPTAG(useLabel(FN_State_46unitS))
, useLabel(F0_NT_46mkNTcons)
, CAPTAG(useLabel(FN_IExtract_46transTid),2)
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, CAPTAG(useLabel(FN_IExtract_46transType),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA4209),2)
, VAPTAG(useLabel(FN_IExtract_46transType))
, VAPTAG(useLabel(FN_IExtract_46transTVar))
, CAPTAG(useLabel(FN_LAMBDA4210),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v4322)
,	/* FN_LAMBDA4210: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(3,1,0)
,	/* CT_v4322: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4210: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4210),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4323)
,	/* FN_LAMBDA4209: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(4,2,0)
,	/* CT_v4323: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4209: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4209),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v4346)
,};
Node FN_IExtract_46countArrows[] = {
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,TABLESWITCH)
, bytes2word(4,NOP,TOP(12),BOT(12))
, bytes2word(TOP(8),BOT(8),TOP(8),BOT(8))
,	/* v4342: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4327: (byte 2) */
  bytes2word(86,0,UNPACK,3)
, bytes2word(PUSH_P1,2,EVAL,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4343: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4331: (byte 2) */
  bytes2word(65,0,UNPACK,2)
, bytes2word(PUSH_I1,EVAL,TABLESWITCH,2)
,	/* v4344: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4335: (byte 4) */
  bytes2word(POP_I1,JUMP,46,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4345: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v4339: (byte 4) */
  bytes2word(POP_I1,JUMP,25,0)
, bytes2word(POP_I1,PUSH_HEAP,HEAP_CVAL_I3,HEAP_P1)
, bytes2word(6,HEAP_CVAL_I4,EVAL,NEEDHEAP_I32)
, bytes2word(JUMPFALSE,11,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_I1,EVAL,NEEDHEAP_I32)
,	/* v4340: (byte 4) */
  bytes2word(PUSH_INT_P1,1,ADD_W,RETURN)
,	/* v4336: (byte 3) */
  bytes2word(PUSH_INT_P1,0,RETURN,POP_P1)
,	/* v4332: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v4328: (byte 1) */
  bytes2word(0,POP_P1,3,JUMP)
,	/* v4324: (byte 2) */
  bytes2word(2,0,PUSH_INT_P1,0)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4346: (byte 0) */
  HW(3,1)
, 0
,};
Node F0_IExtract_46countArrows[] = {
  CAPTAG(useLabel(FN_IExtract_46countArrows),1)
, VAPTAG(useLabel(FN_Prelude_46Eq_46TokenId_46TokenId_46_61_61))
, useLabel(CF_TokenId_46t_95Arrow)
, VAPTAG(useLabel(FN_IExtract_46countArrows))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4367)
,	/* FN_IExtract_46transContext: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,UNPACK)
, bytes2word(3,PUSH_P1,2,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4364: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4354: (byte 4) */
  bytes2word(POP_I1,JUMP,67,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,UNPACK,2,PUSH_P1)
, bytes2word(3,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v4366: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4362: (byte 2) */
  bytes2word(35,0,POP_I1,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_N1,1,HEAP_CVAL_I5)
, bytes2word(HEAP_P1,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_P1,0)
, bytes2word(HEAP_ARG,1,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,8)
,	/* v4359: (byte 3) */
  bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,POP_P1)
,	/* v4355: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v4351: (byte 1) */
  bytes2word(0,POP_P1,3,JUMP)
,	/* v4347: (byte 2) */
  bytes2word(2,0,HEAP_CVAL_P1,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(7,0,0)
,	/* CT_v4367: (byte 0) */
  HW(7,2)
, 0
,	/* F0_IExtract_46transContext: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transContext),2)
, VAPTAG(useLabel(FN_State_46unitS))
, useLabel(F0_Util_46Extra_46pair)
, CAPTAG(useLabel(FN_IExtract_46transTid),2)
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, VAPTAG(useLabel(FN_IExtract_46uniqueTVar))
, VAPTAG(useLabel(FN_LAMBDA4211))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4369)
,	/* FN_LAMBDA4211: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4368)
,	/* CT_v4369: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4211: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4211))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4370)
,	/* FN_IExtract_46transTypes: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4370: (byte 0) */
  HW(6,4)
, 0
,	/* F0_IExtract_46transTypes: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transTypes),4)
, CAPTAG(useLabel(FN_LAMBDA4212),2)
, VAPTAG(useLabel(FN_State_46unitS))
, CAPTAG(useLabel(FN_IExtract_46transContext),1)
, VAPTAG(useLabel(FN_State_46mapS))
, VAPTAG(useLabel(FN_State_46_61_62_62_62))
, CAPTAG(useLabel(FN_IExtract_46transType),1)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4371)
,	/* FN_LAMBDA4212: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG_ARG,2)
, bytes2word(3,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(1,4,0)
, CONSTR(0,0,0)
,	/* CT_v4371: (byte 0) */
  HW(0,3)
, 0
,	/* F0_LAMBDA4212: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4212),3)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4379)
,	/* FN_IExtract_46transFieldType: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,UNPACK)
, bytes2word(2,PUSH_P1,0,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4375: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(17),BOT(17))
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_I1,HEAP_CVAL_I4,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
,	/* v4376: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_I2,HEAP_CVAL_P1)
, bytes2word(6,HEAP_P1,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4379: (byte 0) */
  HW(4,2)
, 0
,	/* F0_IExtract_46transFieldType: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transFieldType),2)
, VAPTAG(useLabel(FN_IExtract_46transType))
, CAPTAG(useLabel(FN_LAMBDA4213),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, CAPTAG(useLabel(FN_LAMBDA4216),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4380)
,	/* FN_LAMBDA4216: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG,1,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4380: (byte 0) */
  HW(2,2)
, 0
,	/* F0_LAMBDA4216: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4216),2)
, CAPTAG(useLabel(FN_LAMBDA4215),1)
, VAPTAG(useLabel(FN_State_46mapS))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4384)
,	/* FN_LAMBDA4215: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,0,HEAP_OFF_N1)
, bytes2word(3,HEAP_I1,HEAP_CVAL_I4,HEAP_P1)
, bytes2word(0,HEAP_I1,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,6,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(12,0,0)
,	/* CT_v4384: (byte 0) */
  HW(3,2)
, 0
,	/* F0_LAMBDA4215: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4215),2)
, CAPTAG(useLabel(FN_IExtract_46transTid),2)
, CAPTAG(useLabel(FN_LAMBDA4214),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4385)
,	/* FN_LAMBDA4214: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
, CONSTR(1,1,0)
, CONSTR(0,3,0)
,	/* CT_v4385: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA4214: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4214),4)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(1,0,0,1)
, useLabel(CT_v4386)
,	/* FN_LAMBDA4213: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,2,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v4386: (byte 0) */
  HW(1,1)
, 0
,	/* F0_LAMBDA4213: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4213),1)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4397)
,	/* FN_IExtract_46addRT: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4390: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,PUSH_ARG)
,	/* v4391: (byte 2) */
  bytes2word(7,RETURN_EVAL,POP_I1,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,2,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_ARG_ARG,5,4,HEAP_CVAL_N1)
, bytes2word(1,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(6,PUSH_HEAP,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,18,HEAP_OFF_N1,11)
, bytes2word(HEAP_OFF_N1,6,HEAP_ARG,7)
, bytes2word(PUSH_ARG,4,PUSH_ZAP_ARG_I2,ZAP_ARG)
, bytes2word(5,ZAP_ARG,7,EVAL)
, bytes2word(NEEDHEAP_I32,APPLY,1,EVAL)
, bytes2word(JUMPFALSE,5,0,PUSH_P1)
,	/* v4392: (byte 2) */
  bytes2word(0,RETURN_EVAL,PUSH_CVAL_P1,12)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,42)
, bytes2word(0,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,13,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,2)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,14,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(10,HEAP_OFF_N1,6,HEAP_I1)
,	/* v4394: (byte 1) */
  bytes2word(RETURN_EVAL,POP_I1,JUMP,2)
,	/* v4387: (byte 1) */
  bytes2word(0,HEAP_CVAL_P1,15,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v4397: (byte 0) */
  HW(14,7)
, 0
,	/* F0_IExtract_46addRT: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46addRT),7)
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, CAPTAG(useLabel(FN_LAMBDA4217),1)
, CAPTAG(useLabel(FN_IExtract_46Prelude_461002_46combRT),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_46))
, VAPTAG(useLabel(FN_TokenId_46forceM))
, VAPTAG(useLabel(FN_Data_46Map_46update))
, useLabel(CF_Prelude_46otherwise)
, CAPTAG(useLabel(FN_LAMBDA4218),1)
, VAPTAG(useLabel(FN_TokenId_46dropM))
, VAPTAG(useLabel(FN_LAMBDA4219))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4399)
,	/* FN_LAMBDA4219: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4398)
,	/* CT_v4399: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4219: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4219))
, bytes2word(1,0,0,1)
, useLabel(CT_v4400)
,	/* FN_LAMBDA4218: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
,	/* CT_v4400: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4218: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4218),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v4401)
,	/* FN_LAMBDA4217: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
,	/* CT_v4401: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4217: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4217),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4406)
,	/* FN_IExtract_46Prelude_461002_46combRT: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4403: (byte 2) */
  bytes2word(TOP(19),BOT(19),UNPACK,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_IN3,HEAP_OFF_N1,4)
,	/* v4404: (byte 1) */
  bytes2word(RETURN,UNPACK,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(4,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4406: (byte 0) */
  HW(0,2)
, 0
,	/* F0_IExtract_46Prelude_461002_46combRT: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_461002_46combRT),2)
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4407)
,	/* FN_IExtract_46addRT_95IS_39: (byte 0) */
  bytes2word(ZAP_ARG,7,NEEDHEAP_I32,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,8,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_OFF_N1,9,HEAP_CVAL_I5)
, bytes2word(HEAP_P1,0,HEAP_ARG,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_I1)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4407: (byte 0) */
  HW(4,8)
, 0
,	/* F0_IExtract_46addRT_95IS_39: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46addRT_95IS_39),8)
, VAPTAG(useLabel(FN_ImportState_46renameIS))
, VAPTAG(useLabel(FN_IExtract_46addRT))
, VAPTAG(useLabel(FN_LAMBDA4220))
, VAPTAG(useLabel(FN_Prelude_46seq))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4411)
,	/* FN_LAMBDA4220: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I1,HEAP_I2,HEAP_P1)
, bytes2word(3,HEAP_P1,4,HEAP_P1)
, bytes2word(5,HEAP_ARG,1,HEAP_P1)
, bytes2word(7,HEAP_P1,8,HEAP_P1)
, bytes2word(9,HEAP_P1,10,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,10,0)
,	/* CT_v4411: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4220: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4220),2)
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4415)
,	/* FN_IExtract_46addRT_95IS: (byte 0) */
  bytes2word(ZAP_ARG,7,NEEDSTACK_I16,PUSH_ARG)
, bytes2word(8,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(10,HEAP_CVAL_I3,HEAP_ARG,8)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_ARG_ARG)
, bytes2word(5,6,HEAP_OFF_N1,9)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_I1)
, bytes2word(HEAP_I2,HEAP_P1,3,HEAP_P1)
, bytes2word(4,HEAP_P1,5,HEAP_OFF_N1)
, bytes2word(14,HEAP_P1,7,HEAP_P1)
, bytes2word(8,HEAP_P1,9,HEAP_P1)
, bytes2word(10,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,10,0)
,	/* CT_v4415: (byte 0) */
  HW(2,8)
, 0
,	/* F0_IExtract_46addRT_95IS: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46addRT_95IS),8)
, VAPTAG(useLabel(FN_ImportState_46renameIS))
, VAPTAG(useLabel(FN_IExtract_46addRT))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4429)
,	/* FN_IExtract_46importConstr: (byte 0) */
  bytes2word(ZAP_ARG,7,NEEDSTACK_P1,18)
, bytes2word(PUSH_ARG,8,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,4,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_N1,1,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,HEAP_I1,HEAP_OFF_N1,3)
, bytes2word(PUSH_ARG,8,PUSH_CVAL_P1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,HEAP_P1,3)
, bytes2word(HEAP_P1,11,ZAP_ARG,8)
, bytes2word(ZAP_STACK_P1,14,ZAP_STACK_P1,12)
, bytes2word(ZAP_STACK_P1,11,ZAP_STACK_P1,10)
, bytes2word(ZAP_STACK_P1,9,ZAP_STACK_P1,8)
, bytes2word(ZAP_STACK_P1,6,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4427: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4421: (byte 2) */
  bytes2word(148,0,UNPACK,1)
, bytes2word(PUSH_P1,0,ZAP_ARG,6)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,13)
, bytes2word(TOP(26),BOT(26),TOP(30),BOT(30))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4428: (byte 2) */
  bytes2word(TOP(26),BOT(26),POP_I1,JUMP)
,	/* v4425: (byte 2) */
  bytes2word(70,0,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,9)
, bytes2word(HEAP_P1,7,HEAP_ARG,1)
, bytes2word(HEAP_P1,0,HEAP_ARG,2)
, bytes2word(HEAP_P1,9,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_P1,10,HEAP_P1)
, bytes2word(15,HEAP_P1,6,HEAP_CVAL_N1)
, bytes2word(4,HEAP_P1,0,HEAP_P1)
, bytes2word(6,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(7,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG,5,HEAP_CVAL_P1,11)
, bytes2word(HEAP_P1,5,HEAP_OFF_N1,10)
, bytes2word(HEAP_CVAL_P1,12,HEAP_OFF_N1,23)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,13)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(4,SLIDE_P1,2,JUMP)
,	/* v4422: (byte 2) */
  bytes2word(35,0,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_I1,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_P1,15,HEAP_P1,6)
, bytes2word(HEAP_ARG,1,HEAP_P1,0)
, bytes2word(HEAP_ARG,2,HEAP_P1,8)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,13)
, bytes2word(HEAP_P1,0,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,10,HEAP_OFF_N1)
,	/* v4423: (byte 3) */
  bytes2word(4,SLIDE_P1,1,SLIDE_P1)
,	/* v4418: (byte 4) */
  bytes2word(1,JUMP,30,0)
, bytes2word(HEAP_CVAL_P1,16,HEAP_P1,4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_P1)
, bytes2word(6,HEAP_I2,HEAP_ARG,6)
, bytes2word(HEAP_P1,3,HEAP_P1,12)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_ARG)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,17)
,	/* v4419: (byte 4) */
  bytes2word(HEAP_CVAL_P1,18,HEAP_OFF_N1,14)
, bytes2word(ZAP_ARG_I1,ZAP_ARG_I2,ZAP_ARG_I3,ZAP_ARG)
, bytes2word(4,ZAP_ARG,5,ZAP_ARG)
, bytes2word(6,ZAP_STACK_P1,13,ZAP_STACK_P1)
, bytes2word(7,ZAP_STACK_P1,5,ZAP_STACK_P1)
, bytes2word(4,ZAP_STACK_P1,3,EVAL)
, bytes2word(NEEDHEAP_I32,APPLY,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(6,7,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
, CONSTR(4,0,0)
,	/* CT_v4429: (byte 0) */
  HW(16,8)
, 0
,	/* F0_IExtract_46importConstr: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46importConstr),8)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, useLabel(C0__40_41)
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_Info_46uniqueI))
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS_39),2)
, CAPTAG(useLabel(FN_LAMBDA4221),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(CF_Id_46IdSupply_46ImportState_46ImportState_46getUniqueId)
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v4430)
,	/* FN_LAMBDA4221: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(12,3,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_I4,HEAP_ARG_ARG)
, bytes2word(8,7,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG_ARG,12,7,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,7,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,5,HEAP_OFF_N1)
, bytes2word(10,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(22,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(7,HEAP_ARG,12,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(6,7,0)
, CONSTR(4,0,0)
,	/* CT_v4430: (byte 0) */
  HW(5,12)
, 0
,	/* F0_LAMBDA4221: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4221),12)
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4458)
,	/* FN_IExtract_46importField: (byte 0) */
  bytes2word(ZAP_ARG,7,NEEDSTACK_P1,29)
, bytes2word(PUSH_ZAP_ARG,6,EVAL,UNPACK)
, bytes2word(2,PUSH_P1,0,ZAP_STACK_P1)
, bytes2word(1,EVAL,UNPACK,2)
, bytes2word(PUSH_P1,0,EVAL,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4436: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,PUSH_ARG)
,	/* v4437: (byte 2) */
  bytes2word(8,RETURN_EVAL,UNPACK,1)
, bytes2word(PUSH_P1,0,ZAP_STACK_P1,2)
, bytes2word(ZAP_STACK_P1,1,EVAL,UNPACK)
, bytes2word(3,PUSH_ARG,8,ZAP_STACK_P1)
, bytes2word(3,ZAP_STACK_P1,1,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,4,HEAP_P1)
, bytes2word(12,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_I1,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,PUSH_HEAP,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,4,HEAP_I1,HEAP_P1)
, bytes2word(9,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4456: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4445: (byte 2) */
  bytes2word(144,0,UNPACK,1)
, bytes2word(PUSH_P1,0,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,13,TOP(26),BOT(26))
, bytes2word(TOP(30),BOT(30),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(80),BOT(80),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4457: (byte 4) */
  bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4449: (byte 4) */
  bytes2word(POP_I1,JUMP,102,0)
, bytes2word(UNPACK,2,PUSH_ARG,8)
, bytes2word(PUSH_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_P1,7,HEAP_ARG,1)
, bytes2word(HEAP_P1,18,HEAP_P1,9)
, bytes2word(HEAP_P1,5,HEAP_I2,HEAP_ARG)
, bytes2word(5,HEAP_P1,24,HEAP_P1)
, bytes2word(8,HEAP_P1,6,HEAP_P1)
, bytes2word(15,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG,2,HEAP_P1,22)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,18,ZAP_STACK_P1)
, bytes2word(3,EVAL,NEEDHEAP_I32,APPLY)
,	/* v4450: (byte 2) */
  bytes2word(2,RETURN_EVAL,UNPACK,6)
, bytes2word(PUSH_HEAP,HEAP_P1,15,HEAP_CVAL_P1)
, bytes2word(12,HEAP_P1,10,HEAP_P1)
, bytes2word(11,HEAP_P1,12,HEAP_P1)
, bytes2word(13,HEAP_P1,14,HEAP_P1)
, bytes2word(0,HEAP_P1,8,HEAP_I1)
, bytes2word(HEAP_I2,HEAP_P1,3,HEAP_ARG)
, bytes2word(5,HEAP_P1,27,HEAP_P1)
, bytes2word(4,HEAP_P1,5,HEAP_P1)
, bytes2word(6,HEAP_P1,16,HEAP_P1)
, bytes2word(17,HEAP_P1,18,HEAP_P1)
, bytes2word(19,PUSH_HEAP,HEAP_CVAL_P1,13)
,	/* v4446: (byte 4) */
  bytes2word(HEAP_I1,HEAP_OFF_N1,22,RETURN_EVAL)
,	/* v4442: (byte 4) */
  bytes2word(POP_I1,JUMP,2,0)
, bytes2word(PUSH_ARG,8,PUSH_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,14,HEAP_P1,4)
, bytes2word(HEAP_ARG,1,HEAP_P1,15)
, bytes2word(HEAP_P1,6,HEAP_I2,HEAP_ARG)
, bytes2word(5,HEAP_P1,21,HEAP_P1)
, bytes2word(3,HEAP_P1,12,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,2)
, bytes2word(HEAP_P1,19,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(16,ZAP_ARG_I1,ZAP_ARG_I2,ZAP_ARG_I3)
, bytes2word(ZAP_ARG,4,ZAP_ARG,5)
, bytes2word(ZAP_ARG,8,ZAP_STACK_P1,22)
, bytes2word(ZAP_STACK_P1,20,ZAP_STACK_P1,16)
, bytes2word(ZAP_STACK_P1,14,ZAP_STACK_P1,13)
, bytes2word(ZAP_STACK_P1,12,ZAP_STACK_P1,11)
, bytes2word(ZAP_STACK_P1,10,ZAP_STACK_P1,9)
, bytes2word(ZAP_STACK_P1,8,ZAP_STACK_P1,7)
, bytes2word(ZAP_STACK_P1,6,ZAP_STACK_P1,5)
, bytes2word(ZAP_STACK_P1,4,ZAP_STACK_P1,3)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(12,0,0)
,	/* CT_v4458: (byte 0) */
  HW(12,8)
, 0
,	/* F0_IExtract_46importField: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46importField),8)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, useLabel(C0__40_41)
, CAPTAG(useLabel(FN_LAMBDA4222),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(CF_Id_46IdSupply_46ImportState_46ImportState_46getUniqueId)
, VAPTAG(useLabel(FN_LAMBDA4223))
, VAPTAG(useLabel(FN_Prelude_46seq))
, CAPTAG(useLabel(FN_LAMBDA4225),1)
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v4459)
,	/* FN_LAMBDA4225: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,14,HEAP_ARG_ARG)
, bytes2word(6,7,HEAP_ARG_ARG,8)
, bytes2word(9,HEAP_ARG_ARG,10,11)
, bytes2word(HEAP_ARG_ARG,12,13,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,17)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4459: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA4225: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4225),14)
, CAPTAG(useLabel(FN_LAMBDA4224),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(CF_Id_46IdSupply_46ImportState_46ImportState_46getUniqueId)
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v4460)
,	/* FN_LAMBDA4224: (byte 0) */
  bytes2word(NEEDHEAP_P1,83,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG_ARG,6,3,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,7,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,15,3)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,16,HEAP_OFF_N1)
, bytes2word(9,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG_ARG,6,9)
, bytes2word(HEAP_OFF_N1,11,HEAP_OFF_N1,7)
, bytes2word(HEAP_ARG_ARG,12,15,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,5,HEAP_OFF_N1,9)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,22,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,9,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_P1,6)
, bytes2word(HEAP_ARG_ARG,10,9,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_ARG,13,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,12,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,2,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,14,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(6,HEAP_ARG,13,HEAP_OFF_N1)
, bytes2word(16,HEAP_ARG,11,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_N1,7,HEAP_INT_P1)
, bytes2word(1,HEAP_CVAL_N1,8,HEAP_ARG_ARG)
, bytes2word(15,9,HEAP_OFF_N1,28)
, bytes2word(HEAP_OFF_N1,28,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,8,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(36,HEAP_OFF_N1,9,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,43,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(5,6,0)
, CONSTR(1,1,0)
, CONSTR(1,4,0)
, CONSTR(7,6,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
, CONSTR(12,0,0)
,	/* CT_v4460: (byte 0) */
  HW(7,15)
, 0
,	/* F0_LAMBDA4224: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4224),15)
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_NT_46mkNTvar)
, VAPTAG(useLabel(FN_NT_46mkNTcons))
, bytes2word(19,0,18,1)
, bytes2word(17,2,16,3)
, bytes2word(15,4,14,5)
, bytes2word(13,6,12,7)
, bytes2word(11,8,10,9)
, bytes2word(9,10,8,11)
, bytes2word(7,12,6,13)
, bytes2word(5,14,4,15)
, bytes2word(3,16,2,17)
, bytes2word(1,18,0,19)
, useLabel(CT_v4463)
,	/* FN_LAMBDA4223: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_ARG,13,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,11,12,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,5,EVAL,NEEDHEAP_I32)
, bytes2word(APPLY,1,EVAL,NEEDHEAP_P1)
, bytes2word(33,JUMPFALSE,21,0)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,2,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,16,17,HEAP_ARG_ARG)
,	/* v4461: (byte 3) */
  bytes2word(18,19,RETURN,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(11,12,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,13,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG,10,HEAP_OFF_N1,7)
, bytes2word(HEAP_ARG_ARG,14,15,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,17,HEAP_CVAL_P1)
, bytes2word(11,HEAP_ARG,7,HEAP_OFF_N1)
, bytes2word(11,HEAP_ARG,16,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_OFF_N1)
, bytes2word(13,HEAP_ARG_ARG,17,18)
, bytes2word(HEAP_ARG,19,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(7,6,0)
, CONSTR(1,2,0)
, CONSTR(0,10,0)
, CONSTR(0,2,0)
,	/* CT_v4463: (byte 0) */
  HW(9,19)
, 0
,	/* F0_LAMBDA4223: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4223),19)
, VAPTAG(useLabel(FN_Prelude_46Eq_46Prelude_462))
, useLabel(CF_Prelude_46Eq_46Id_46Id)
, useLabel(CF_Prelude_46Eq_46Prelude_46Int)
, VAPTAG(useLabel(FN_Prelude_46elem))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46insertWith))
, useLabel(F0_Util_46Extra_46fstOf)
, bytes2word(0,0,16,0)
, bytes2word(15,1,14,2)
, bytes2word(13,3,12,4)
, bytes2word(11,5,10,6)
, bytes2word(9,7,8,8)
, bytes2word(7,9,6,10)
, bytes2word(5,11,4,12)
, bytes2word(3,13,2,14)
, bytes2word(1,15,0,16)
, useLabel(CT_v4464)
,	/* FN_LAMBDA4222: (byte 0) */
  bytes2word(NEEDHEAP_P1,83,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG_ARG,16,3,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,7,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,6,3)
, bytes2word(HEAP_ARG,4,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,16,HEAP_OFF_N1)
, bytes2word(9,HEAP_CVAL_N1,1,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(5,HEAP_ARG_ARG,6,10)
, bytes2word(HEAP_OFF_N1,11,HEAP_OFF_N1,7)
, bytes2word(HEAP_ARG_ARG,13,16,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,5,HEAP_OFF_N1,9)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,22,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_IN3)
, bytes2word(HEAP_ARG,10,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_ARG_ARG,11,10,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_ARG,14,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,13,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(4,HEAP_ARG,15,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,4,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_CVAL_N1)
, bytes2word(6,HEAP_ARG,14,HEAP_OFF_N1)
, bytes2word(16,HEAP_ARG,12,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_N1,7,HEAP_INT_P1)
, bytes2word(1,HEAP_CVAL_N1,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_OFF_N1,28)
, bytes2word(HEAP_OFF_N1,28,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,8,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(36,HEAP_OFF_N1,9,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,43,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(5,6,0)
, CONSTR(1,1,0)
, CONSTR(1,4,0)
, CONSTR(7,6,0)
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(12,0,0)
, CONSTR(0,0,0)
,	/* CT_v4464: (byte 0) */
  HW(7,16)
, 0
,	/* F0_LAMBDA4222: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4222),16)
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_NT_46mkNTvar)
, VAPTAG(useLabel(FN_NT_46mkNTcons))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4474)
,	/* FN_IExtract_46transConstr: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG,6,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,7,NOP)
, bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
, bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
, bytes2word(TOP(14),BOT(14),TOP(18),BOT(18))
,	/* v4472: (byte 2) */
  bytes2word(TOP(14),BOT(14),POP_I1,JUMP)
,	/* v4468: (byte 2) */
  bytes2word(117,0,UNPACK,3)
, bytes2word(PUSH_ZAP_ARG,7,ZAP_STACK_P1,3)
, bytes2word(ZAP_STACK_P1,2,EVAL,NEEDHEAP_P1)
, bytes2word(34,TABLESWITCH,2,NOP)
,	/* v4470: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(33),BOT(33))
, bytes2word(UNPACK,3,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_I2,HEAP_CVAL_I5,HEAP_ARG,5)
, bytes2word(HEAP_I1,HEAP_ARG_ARG,6,1)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,12,HEAP_OFF_N1,10)
,	/* v4471: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_P1,4)
, bytes2word(HEAP_ARG,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_I2)
, bytes2word(HEAP_CVAL_P1,10,HEAP_P1,0)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,6,HEAP_CVAL_P1,14)
, bytes2word(HEAP_P1,0,HEAP_P1,3)
, bytes2word(HEAP_P1,5,HEAP_ARG_ARG,2)
, bytes2word(6,HEAP_I1,HEAP_ARG_ARG,1)
, bytes2word(3,HEAP_ARG,4,HEAP_P1)
, bytes2word(7,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,15,HEAP_OFF_N1,13)
,	/* v4465: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_P1,15,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4474: (byte 0) */
  HW(14,7)
, 0
,	/* F0_IExtract_46transConstr: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transConstr),7)
, CAPTAG(useLabel(FN_IExtract_46transFieldType),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA4231),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA4232))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, CAPTAG(useLabel(FN_IExtract_46Prelude_461156_46es),1)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_Prelude_46Enum_46Id_46Id)
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_LAMBDA4237),1)
, VAPTAG(useLabel(FN_LAMBDA4238))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4476)
,	/* FN_LAMBDA4238: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4475)
,	/* CT_v4476: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4238: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4238))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v4477)
,	/* FN_LAMBDA4237: (byte 0) */
  bytes2word(NEEDHEAP_P1,48,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_ARG)
, bytes2word(11,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,7)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_I2)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG_ARG,1)
, bytes2word(4,HEAP_CVAL_I4,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,15)
, bytes2word(HEAP_ARG_ARG,3,1,HEAP_ARG)
, bytes2word(4,HEAP_P1,0,HEAP_ARG)
, bytes2word(5,HEAP_I1,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG,10,HEAP_I2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,17)
, bytes2word(HEAP_OFF_N1,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4477: (byte 0) */
  HW(14,11)
, 0
,	/* F0_LAMBDA4237: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4237),11)
, VAPTAG(useLabel(FN_Prelude_46concat))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_LAMBDA4233),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Prelude_46fst)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, CAPTAG(useLabel(FN_IExtract_46Prelude_461156_46es),1)
, useLabel(CF_Prelude_46Enum_46Id_46Id)
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_IExtract_46transContext),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA4236),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v4478)
,	/* FN_LAMBDA4236: (byte 0) */
  bytes2word(NEEDHEAP_P1,54,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_I5,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,10)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_I5,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,13,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(8,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(11,HEAP_OFF_N1,5,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,24,HEAP_OFF_N1,19)
, bytes2word(HEAP_ARG,10,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG_ARG,8)
, bytes2word(1,HEAP_OFF_N1,8,HEAP_ARG_ARG)
, bytes2word(6,11,HEAP_ARG,7)
, bytes2word(HEAP_CVAL_P1,11,HEAP_ARG_ARG,8)
, bytes2word(9,HEAP_ARG_ARG,10,11)
, bytes2word(HEAP_ARG,12,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,14,HEAP_OFF_N1)
, bytes2word(8,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4478: (byte 0) */
  HW(10,13)
, 0
,	/* F0_LAMBDA4236: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4236),13)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, CAPTAG(useLabel(FN_IExtract_46Prelude_461162_46exist),1)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_Prelude_46Enum_46Id_46Id)
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_LAMBDA4234),1)
, CAPTAG(useLabel(FN_IExtract_46importConstr),2)
, CAPTAG(useLabel(FN_LAMBDA4235),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4479)
,	/* FN_LAMBDA4235: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG,6,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_INT_P1,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,5)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_P1,8,HEAP_ARG,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4479: (byte 0) */
  HW(7,6)
, 0
,	/* F0_LAMBDA4235: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4235),6)
, CAPTAG(useLabel(FN_IExtract_46importField),3)
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Int_46enumFrom))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_State_46mapS0))
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_State_46_62_62_62))
, bytes2word(1,0,0,1)
, useLabel(CT_v4483)
,	/* FN_LAMBDA4234: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I1,HEAP_I2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,2,0)
,	/* CT_v4483: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4234: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4234),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v4492)
,	/* FN_LAMBDA4233: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4490: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4487: (byte 2) */
  bytes2word(18,0,UNPACK,1)
, bytes2word(PUSH_P1,0,ZAP_STACK_P1,1)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_P1)
,	/* v4484: (byte 2) */
  bytes2word(3,RETURN,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,0,0)
, CONSTR(1,1,0)
,	/* CT_v4492: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4233: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4233),1)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4493)
,	/* FN_IExtract_46Prelude_461162_46exist: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_CVAL_I4,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,3,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4493: (byte 0) */
  HW(4,3)
, 0
,	/* F0_IExtract_46Prelude_461162_46exist: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_461162_46exist),3)
, CAPTAG(useLabel(FN_IExtract_46Prelude_461156_46es),1)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4494)
,	/* FN_IExtract_46Prelude_461156_46es: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,6)
, bytes2word(HEAP_INT_P1,1,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,13,HEAP_OFF_N1)
, bytes2word(5,PUSH_P1,0,PUSH_ARG_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,ZAP_ARG_I1)
, bytes2word(ZAP_ARG_I2,ZAP_ARG_I3,ZAP_STACK_P1,3)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4494: (byte 0) */
  HW(6,3)
, 0
,	/* F0_IExtract_46Prelude_461156_46es: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_461156_46es),3)
, VAPTAG(useLabel(FN_Prelude_46enumFrom))
, VAPTAG(useLabel(FN_Prelude_46toEnum))
, VAPTAG(useLabel(FN_Prelude_46length))
, VAPTAG(useLabel(FN_Prelude_46Num_46Prelude_46Int_46_43))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46zip))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4497)
,	/* FN_LAMBDA4232: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_ARG_I2,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,1,ZAP_ARG_I1)
, bytes2word(ZAP_ARG_I2,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(1,EVAL,NEEDHEAP_I32,JUMPFALSE)
, bytes2word(6,0,PUSH_HEAP,HEAP_CVAL_N1)
,	/* v4495: (byte 2) */
  bytes2word(1,RETURN,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,0,0)
, CONSTR(1,0,0)
,	/* CT_v4497: (byte 0) */
  HW(2,2)
, 0
,	/* F0_LAMBDA4232: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4232),2)
, VAPTAG(useLabel(FN_Prelude_46elem))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4498)
,	/* FN_LAMBDA4231: (byte 0) */
  bytes2word(NEEDHEAP_P1,58,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(7,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_P1,6,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,2)
, bytes2word(HEAP_ARG,8,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,10,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,4,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,11,HEAP_CVAL_P1)
, bytes2word(12,HEAP_I2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,13,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_IN3,HEAP_ARG)
, bytes2word(5,HEAP_OFF_N1,10,HEAP_ARG)
, bytes2word(6,HEAP_OFF_N1,7,HEAP_CVAL_P1)
, bytes2word(14,HEAP_ARG,4,HEAP_P1)
, bytes2word(4,HEAP_OFF_N1,8,HEAP_I1)
, bytes2word(HEAP_ARG,7,HEAP_P1,3)
, bytes2word(HEAP_CVAL_P1,15,HEAP_ARG_ARG,4)
, bytes2word(5,HEAP_ARG_ARG,6,7)
, bytes2word(HEAP_I2,PUSH_HEAP,HEAP_CVAL_P1,16)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,8)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4498: (byte 0) */
  HW(14,8)
, 0
,	/* F0_LAMBDA4231: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4231),8)
, VAPTAG(useLabel(FN_LAMBDA4226))
, VAPTAG(useLabel(FN_LAMBDA4227))
, VAPTAG(useLabel(FN_LAMBDA4228))
, VAPTAG(useLabel(FN_Prelude_46concat))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_LAMBDA4229),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_Prelude_46fst)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_IExtract_46importConstr),2)
, CAPTAG(useLabel(FN_LAMBDA4230),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4499)
,	/* FN_LAMBDA4230: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG,6,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_INT_P1,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,5)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_P1,8,HEAP_ARG,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4499: (byte 0) */
  HW(7,6)
, 0
,	/* F0_LAMBDA4230: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4230),6)
, CAPTAG(useLabel(FN_IExtract_46importField),3)
, VAPTAG(useLabel(FN_Prelude_46zip))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Int_46enumFrom))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_State_46mapS0))
, VAPTAG(useLabel(FN_State_46unitS))
, VAPTAG(useLabel(FN_State_46_62_62_62))
, bytes2word(1,0,0,1)
, useLabel(CT_v4508)
,	/* FN_LAMBDA4229: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4506: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4503: (byte 2) */
  bytes2word(18,0,UNPACK,1)
, bytes2word(PUSH_P1,0,ZAP_STACK_P1,1)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_P1)
,	/* v4500: (byte 2) */
  bytes2word(3,RETURN,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,0,0)
, CONSTR(1,1,0)
,	/* CT_v4508: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4229: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4229),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v4509)
,	/* FN_LAMBDA4228: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,2)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4509: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4228: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4228),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v4510)
,	/* FN_LAMBDA4227: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4510: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4227: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4227),1)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4513)
,	/* FN_LAMBDA4226: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_ARG_I1,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,2,ZAP_ARG_I1)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,1)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,12)
, bytes2word(0,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,2)
,	/* v4511: (byte 3) */
  bytes2word(HEAP_OFF_N1,3,RETURN,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_IN3,PUSH_HEAP,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
, CONSTR(0,2,0)
, CONSTR(1,0,0)
,	/* CT_v4513: (byte 0) */
  HW(4,3)
, 0
,	/* F0_LAMBDA4226: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4226),3)
, VAPTAG(useLabel(FN_Prelude_46elem))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, VAPTAG(useLabel(FN_TokenId_46tUnknown))
, useLabel(CF_Prelude_46Show_46Id_46Id)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4535)
,	/* FN_IExtract_46addFixityNeed: (byte 0) */
  bytes2word(NEEDSTACK_P1,18,PUSH_ZAP_ARG_I2,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,5,NOP)
, bytes2word(TOP(10),BOT(10),TOP(10),BOT(10))
, bytes2word(TOP(10),BOT(10),TOP(10),BOT(10))
,	/* v4531: (byte 2) */
  bytes2word(TOP(14),BOT(14),POP_I1,JUMP)
,	/* v4521: (byte 2) */
  bytes2word(176,0,UNPACK,1)
, bytes2word(PUSH_ARG_I3,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(10,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,1,HEAP_P1)
, bytes2word(6,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4525: (byte 2) */
  bytes2word(TOP(7),BOT(7),POP_I1,PUSH_ARG_I3)
,	/* v4526: (byte 1) */
  bytes2word(RETURN,UNPACK,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_P1,5)
, bytes2word(HEAP_P1,12,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,1,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I1,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_I1,HEAP_P1,9,ZAP_ARG_I1)
, bytes2word(ZAP_STACK_P1,14,ZAP_STACK_P1,3)
, bytes2word(ZAP_STACK_P1,2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4528: (byte 2) */
  bytes2word(TOP(66),BOT(66),POP_I1,HEAP_CVAL_P1)
, bytes2word(9,HEAP_P1,0,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_I4,HEAP_OFF_N1,4)
, bytes2word(HEAP_P1,7,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,4,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,12,HEAP_OFF_N1,10)
, bytes2word(HEAP_CVAL_P1,13,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,6,HEAP_P1,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,5,HEAP_P1)
, bytes2word(4,HEAP_P1,5,HEAP_P1)
, bytes2word(6,HEAP_P1,7,HEAP_OFF_N1)
, bytes2word(24,HEAP_OFF_N1,12,HEAP_P1)
, bytes2word(10,HEAP_P1,11,HEAP_P1)
,	/* v4529: (byte 4) */
  bytes2word(12,HEAP_P1,13,RETURN)
, bytes2word(UNPACK,1,HEAP_CVAL_P1,9)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,10,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,4,HEAP_P1,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,5,HEAP_P1)
, bytes2word(5,HEAP_P1,6,HEAP_P1)
, bytes2word(7,HEAP_P1,8,HEAP_OFF_N1)
, bytes2word(9,HEAP_P1,10,HEAP_P1)
, bytes2word(11,HEAP_P1,12,HEAP_P1)
,	/* v4518: (byte 4) */
  bytes2word(13,HEAP_P1,14,RETURN)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v4514: (byte 1) */
  bytes2word(0,PUSH_ARG_I3,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,10,0)
, CONSTR(0,1,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
,	/* CT_v4535: (byte 0) */
  HW(11,3)
, 0
,	/* F0_IExtract_46addFixityNeed: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46addFixityNeed),3)
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_Prelude_46snd))
, VAPTAG(useLabel(FN_Prelude_46fst))
, VAPTAG(useLabel(FN_Data_46Set_46insert))
, useLabel(CF_Util_46Extra_46noPos)
, VAPTAG(useLabel(FN_Data_46Map_46insertWith))
, useLabel(F0_Util_46Extra_46fstOf)
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4549)
,	/* FN_IExtract_46importMethod: (byte 0) */
  bytes2word(ZAP_ARG,7,NEEDSTACK_P1,18)
, bytes2word(PUSH_ZAP_ARG,8,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,4,HEAP_ARG,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_P1,10)
, bytes2word(HEAP_I1,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_I2,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,4,HEAP_I1)
, bytes2word(HEAP_P1,10,EVAL,NEEDHEAP_P1)
, bytes2word(46,TABLESWITCH,2,NOP)
,	/* v4547: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4541: (byte 4) */
  bytes2word(POP_I1,JUMP,187,0)
, bytes2word(UNPACK,1,PUSH_P1,0)
, bytes2word(EVAL,NEEDHEAP_P1,45,TABLESWITCH)
, bytes2word(13,NOP,TOP(26),BOT(26))
, bytes2word(TOP(30),BOT(30),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4548: (byte 4) */
  bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4545: (byte 4) */
  bytes2word(POP_I1,JUMP,91,0)
, bytes2word(UNPACK,2,HEAP_CVAL_N1,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_P1)
, bytes2word(7,HEAP_ARG,1,HEAP_I1)
, bytes2word(HEAP_ARG,2,HEAP_P1,9)
, bytes2word(HEAP_OFF_N1,7,HEAP_P1,12)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_IN3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_I1,HEAP_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_P1,5,HEAP_ARG_ARG)
, bytes2word(3,5,HEAP_ARG,6)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,13)
, bytes2word(HEAP_CVAL_P1,11,HEAP_P1,4)
, bytes2word(HEAP_OFF_N1,12,HEAP_P1,13)
, bytes2word(HEAP_CVAL_N1,5,HEAP_P1,7)
, bytes2word(HEAP_P1,8,HEAP_P1,9)
, bytes2word(HEAP_P1,10,HEAP_P1,11)
, bytes2word(HEAP_P1,0,HEAP_OFF_N1,13)
, bytes2word(HEAP_P1,14,HEAP_P1,15)
, bytes2word(HEAP_P1,16,HEAP_CVAL_P1,12)
, bytes2word(HEAP_P1,4,HEAP_P1,5)
, bytes2word(HEAP_OFF_N1,14,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,HEAP_I2,HEAP_OFF_N1,6)
,	/* v4542: (byte 1) */
  bytes2word(RETURN,PUSH_HEAP,HEAP_CVAL_P1,13)
, bytes2word(HEAP_I1,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_P1,6)
, bytes2word(HEAP_ARG,1,HEAP_I1,HEAP_ARG)
, bytes2word(2,HEAP_P1,8,HEAP_OFF_N1)
, bytes2word(7,HEAP_P1,11,HEAP_CVAL_N1)
, bytes2word(5,HEAP_P1,6,HEAP_P1)
, bytes2word(7,HEAP_P1,8,HEAP_P1)
, bytes2word(9,HEAP_P1,10,HEAP_P1)
, bytes2word(0,HEAP_P1,12,HEAP_P1)
, bytes2word(13,HEAP_P1,14,HEAP_P1)
, bytes2word(15,HEAP_CVAL_N1,2,HEAP_I1)
, bytes2word(HEAP_OFF_N1,13,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_I1,HEAP_OFF_N1,5)
,	/* v4538: (byte 1) */
  bytes2word(RETURN_EVAL,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_P1,4)
, bytes2word(HEAP_ARG,1,HEAP_P1,5)
, bytes2word(HEAP_ARG,2,HEAP_P1,6)
, bytes2word(HEAP_OFF_N1,7,HEAP_P1,9)
, bytes2word(HEAP_CVAL_P1,15,HEAP_P1,5)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(5,HEAP_P1,3,HEAP_ARG)
, bytes2word(4,HEAP_I2,HEAP_ARG_ARG,3)
, bytes2word(5,HEAP_ARG,6,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,12,HEAP_CVAL_P1)
, bytes2word(11,HEAP_I1,HEAP_OFF_N1,12)
, bytes2word(HEAP_P1,10,HEAP_CVAL_N1,5)
, bytes2word(HEAP_P1,4,HEAP_OFF_N1,21)
, bytes2word(HEAP_P1,6,HEAP_P1,7)
, bytes2word(HEAP_P1,8,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,13,HEAP_P1,11)
, bytes2word(HEAP_P1,12,HEAP_P1,13)
, bytes2word(HEAP_CVAL_P1,12,HEAP_I1,HEAP_I2)
, bytes2word(HEAP_OFF_N1,14,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,HEAP_P1,6,HEAP_OFF_N1)
, bytes2word(6,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,10,0)
, CONSTR(8,7,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
, CONSTR(2,0,0)
,	/* CT_v4549: (byte 0) */
  HW(13,8)
, 0
,	/* F0_IExtract_46importMethod: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46importMethod),8)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, VAPTAG(useLabel(FN_IExtract_46addRT))
, VAPTAG(useLabel(FN_Data_46Map_46insertWith))
, useLabel(F0_Info_46combInfo)
, VAPTAG(useLabel(FN_IExtract_46addFixityNeed))
, VAPTAG(useLabel(FN_Info_46uniqueI))
, VAPTAG(useLabel(FN_Prelude_46seq))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Id_46Id_46succ))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4556)
,	/* FN_IExtract_46transMethod: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,UNPACK)
, bytes2word(2,PUSH_ZAP_ARG,5,ZAP_STACK_P1)
, bytes2word(2,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I3,HEAP_P1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_P1,3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_ARG,2)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,8,HEAP_P1,0)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,3,HEAP_CVAL_P1,10)
, bytes2word(HEAP_P1,4,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,4,1,HEAP_I1)
, bytes2word(HEAP_P1,5,HEAP_I2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,10,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v4556: (byte 0) */
  HW(9,5)
, 0
,	/* F0_IExtract_46transMethod: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46transMethod),5)
, VAPTAG(useLabel(FN_IExtract_46countArrows))
, VAPTAG(useLabel(FN_IExtract_46freeType))
, VAPTAG(useLabel(FN_Util_46Extra_46snub))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, VAPTAG(useLabel(FN_IExtract_46tvTids))
, CAPTAG(useLabel(FN_IExtract_46transContext),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA4244),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4557)
,	/* FN_LAMBDA4244: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,2)
, bytes2word(1,HEAP_CVAL_I4,HEAP_ARG_ARG,2)
, bytes2word(8,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG)
, bytes2word(7,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,10,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4557: (byte 0) */
  HW(3,8)
, 0
,	/* F0_LAMBDA4244: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4244),8)
, VAPTAG(useLabel(FN_IExtract_46transType))
, CAPTAG(useLabel(FN_LAMBDA4243),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4558)
,	/* FN_LAMBDA4243: (byte 0) */
  bytes2word(NEEDHEAP_P1,37,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I5,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,8,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_I1,HEAP_OFF_N1,16,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,7,HEAP_CVAL_P1)
, bytes2word(7,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(7,HEAP_ARG,7,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_ARG,5)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4558: (byte 0) */
  HW(7,8)
, 0
,	/* F0_LAMBDA4243: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4243),8)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_Prelude_46head))
, VAPTAG(useLabel(FN_NT_46anyNT))
, CAPTAG(useLabel(FN_LAMBDA4242),1)
, VAPTAG(useLabel(FN_State_46mapS))
, VAPTAG(useLabel(FN_Prelude_46seq))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4565)
,	/* FN_LAMBDA4242: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,6,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(ZAP_STACK_P1,2,ZAP_STACK_P1,1)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_I2,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(6,HEAP_CVAL_N1,1,HEAP_ARG)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_ARG,2,HEAP_I2,HEAP_ARG)
, bytes2word(3,HEAP_I1,HEAP_OFF_N1,7)
, bytes2word(HEAP_ARG,5,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
,	/* CT_v4565: (byte 0) */
  HW(4,6)
, 0
,	/* F0_LAMBDA4242: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4242),6)
, VAPTAG(useLabel(FN_LAMBDA4239))
, VAPTAG(useLabel(FN_LAMBDA4240))
, VAPTAG(useLabel(FN_LAMBDA4241))
, CAPTAG(useLabel(FN_IExtract_46importMethod),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v4566)
,	/* FN_LAMBDA4241: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,2)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4566: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4241: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4241),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v4567)
,	/* FN_LAMBDA4240: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4567: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4240: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4240),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4570)
,	/* FN_LAMBDA4239: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_ARG_I1,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,2,ZAP_ARG_I1)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,1)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,12)
, bytes2word(0,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,2)
,	/* v4568: (byte 3) */
  bytes2word(HEAP_OFF_N1,3,RETURN,HEAP_CVAL_IN3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
, CONSTR(0,2,0)
, CONSTR(1,0,0)
,	/* CT_v4570: (byte 0) */
  HW(3,2)
, 0
,	/* F0_LAMBDA4239: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4239),2)
, VAPTAG(useLabel(FN_Prelude_46elem))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, useLabel(CF_TokenId_46tunknown)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4584)
,	/* FN_IExtract_46importVar: (byte 0) */
  bytes2word(ZAP_ARG,6,NEEDSTACK_P1,18)
, bytes2word(PUSH_ZAP_ARG,7,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,4,HEAP_ARG,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_P1,10)
, bytes2word(HEAP_I1,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_I2,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,4,HEAP_I1)
, bytes2word(HEAP_P1,10,EVAL,NEEDHEAP_P1)
, bytes2word(42,TABLESWITCH,2,NOP)
,	/* v4582: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4576: (byte 4) */
  bytes2word(POP_I1,JUMP,174,0)
, bytes2word(UNPACK,1,PUSH_P1,0)
, bytes2word(EVAL,NEEDHEAP_P1,40,TABLESWITCH)
, bytes2word(13,NOP,TOP(26),BOT(26))
, bytes2word(TOP(30),BOT(30),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4583: (byte 4) */
  bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4580: (byte 4) */
  bytes2word(POP_I1,JUMP,82,0)
, bytes2word(UNPACK,2,HEAP_CVAL_N1,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_P1)
, bytes2word(7,HEAP_ARG,1,HEAP_I1)
, bytes2word(HEAP_ARG,2,HEAP_P1,9)
, bytes2word(HEAP_OFF_N1,7,HEAP_P1,12)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_IN3,HEAP_I1,HEAP_P1)
, bytes2word(6,HEAP_ARG,3,HEAP_P1)
, bytes2word(5,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,11)
, bytes2word(HEAP_CVAL_P1,11,HEAP_P1,4)
, bytes2word(HEAP_OFF_N1,11,HEAP_P1,13)
, bytes2word(HEAP_CVAL_N1,4,HEAP_P1,7)
, bytes2word(HEAP_P1,8,HEAP_P1,9)
, bytes2word(HEAP_P1,10,HEAP_P1,11)
, bytes2word(HEAP_P1,0,HEAP_OFF_N1,13)
, bytes2word(HEAP_P1,14,HEAP_P1,15)
, bytes2word(HEAP_P1,16,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_P1,5,HEAP_P1)
,	/* v4577: (byte 4) */
  bytes2word(6,HEAP_OFF_N1,14,RETURN_EVAL)
, bytes2word(HEAP_CVAL_P1,13,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,1,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_P1,5,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,6,HEAP_ARG)
, bytes2word(2,HEAP_P1,7,HEAP_OFF_N1)
, bytes2word(7,HEAP_P1,10,HEAP_CVAL_N1)
, bytes2word(4,HEAP_P1,5,HEAP_P1)
, bytes2word(6,HEAP_P1,7,HEAP_P1)
, bytes2word(8,HEAP_P1,9,HEAP_P1)
, bytes2word(0,HEAP_P1,11,HEAP_P1)
, bytes2word(12,HEAP_P1,13,HEAP_P1)
, bytes2word(14,PUSH_HEAP,HEAP_CVAL_P1,14)
,	/* v4573: (byte 4) */
  bytes2word(HEAP_I1,HEAP_OFF_N1,13,RETURN_EVAL)
, bytes2word(HEAP_CVAL_N1,1,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_P1,4,HEAP_ARG)
, bytes2word(1,HEAP_P1,5,HEAP_ARG)
, bytes2word(2,HEAP_P1,6,HEAP_OFF_N1)
, bytes2word(7,HEAP_P1,9,HEAP_CVAL_P1)
, bytes2word(15,HEAP_P1,5,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_IN3,HEAP_P1,5,HEAP_P1)
, bytes2word(3,HEAP_ARG,3,HEAP_I2)
, bytes2word(HEAP_ARG_ARG,4,5,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,11,HEAP_CVAL_P1)
, bytes2word(11,HEAP_I1,HEAP_OFF_N1,11)
, bytes2word(HEAP_P1,10,HEAP_CVAL_N1,4)
, bytes2word(HEAP_P1,4,HEAP_OFF_N1,20)
, bytes2word(HEAP_P1,6,HEAP_P1,7)
, bytes2word(HEAP_P1,8,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,13,HEAP_P1,11)
, bytes2word(HEAP_P1,12,HEAP_P1,13)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,12,HEAP_I2)
, bytes2word(HEAP_P1,3,HEAP_OFF_N1,14)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,10,0)
, CONSTR(5,6,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v4584: (byte 0) */
  HW(13,7)
, 0
,	/* F0_IExtract_46importVar: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46importVar),7)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, VAPTAG(useLabel(FN_IExtract_46addRT))
, VAPTAG(useLabel(FN_Data_46Map_46insertWith))
, useLabel(F0_Info_46combInfo)
, VAPTAG(useLabel(FN_IExtract_46addFixityNeed))
, VAPTAG(useLabel(FN_Info_46uniqueI))
, VAPTAG(useLabel(FN_Prelude_46seq))
, VAPTAG(useLabel(FN_Prelude_46Enum_46Id_46Id_46succ))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4585)
,};
Node FN_IExtract_46iextractVarsType[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,5)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_P1,0,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_P1,0,HEAP_OFF_N1)
, bytes2word(9,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_P1,10,HEAP_ARG_ARG)
, bytes2word(2,1,HEAP_ARG,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(10,HEAP_OFF_N1,6,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4585: (byte 0) */
  HW(9,5)
, 0
,};
Node F0_IExtract_46iextractVarsType[] = {
  CAPTAG(useLabel(FN_IExtract_46iextractVarsType),5)
, VAPTAG(useLabel(FN_IExtract_46freeType))
, VAPTAG(useLabel(FN_Util_46Extra_46snub))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, VAPTAG(useLabel(FN_IExtract_46tvTids))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_IExtract_46transTypes))
, CAPTAG(useLabel(FN_LAMBDA4246),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4586)
,	/* FN_LAMBDA4246: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG,4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(3,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4586: (byte 0) */
  HW(2,4)
, 0
,	/* F0_LAMBDA4246: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4246),4)
, CAPTAG(useLabel(FN_LAMBDA4245),1)
, VAPTAG(useLabel(FN_State_46mapS0))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4593)
,	/* FN_LAMBDA4245: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(ZAP_STACK_P1,1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,2,1)
, bytes2word(HEAP_I1,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,1,HEAP_I2)
, bytes2word(HEAP_OFF_N1,8,HEAP_ARG,3)
, bytes2word(HEAP_P1,4,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v4593: (byte 0) */
  HW(2,4)
, 0
,	/* F0_LAMBDA4245: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4245),4)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply3))
, CAPTAG(useLabel(FN_IExtract_46importVar),2)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4601)
,	/* FN_IExtract_46storeInstance: (byte 0) */
  bytes2word(ZAP_ARG,6,NEEDSTACK_I16,PUSH_ARG)
, bytes2word(7,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(10,PUSH_HEAP,HEAP_CVAL_I3,HEAP_P1)
, bytes2word(4,HEAP_ARG,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,5,HEAP_ARG)
, bytes2word(4,PUSH_P1,9,HEAP_CVAL_I4)
, bytes2word(HEAP_I2,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,ZAP_ARG_I3,ZAP_ARG)
, bytes2word(4,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(1,EVAL,NEEDHEAP_I32,JUMPFALSE)
, bytes2word(5,0,PUSH_ARG,7)
,	/* v4596: (byte 1) */
  bytes2word(RETURN,HEAP_CVAL_P1,6,HEAP_P1)
, bytes2word(5,HEAP_ARG,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,5,PUSH_P1,0)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_CVAL_P1,8)
, bytes2word(ZAP_ARG,5,ZAP_ARG,7)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,1)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,52)
, bytes2word(0,HEAP_CVAL_P1,9,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_P1,11,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,12,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,4,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,14,HEAP_OFF_N1)
, bytes2word(4,HEAP_P1,12,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,4)
, bytes2word(HEAP_P1,5,HEAP_P1,6)
, bytes2word(HEAP_P1,7,HEAP_P1,8)
, bytes2word(HEAP_P1,9,HEAP_P1,10)
, bytes2word(HEAP_P1,11,HEAP_P1,12)
,	/* v4598: (byte 3) */
  bytes2word(HEAP_OFF_N1,13,RETURN,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_P1,15,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(16,HEAP_P1,0,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_I2)
, bytes2word(HEAP_I1,HEAP_OFF_N1,10,HEAP_OFF_N1)
, bytes2word(8,HEAP_CVAL_IN3,HEAP_OFF_N1,7)
, bytes2word(HEAP_P1,10,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_P1,4,HEAP_P1)
, bytes2word(5,HEAP_P1,6,HEAP_P1)
, bytes2word(7,HEAP_P1,8,HEAP_P1)
, bytes2word(9,HEAP_P1,10,HEAP_OFF_N1)
, bytes2word(11,HEAP_P1,12,HEAP_P1)
, bytes2word(13,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,5,0)
, CONSTR(0,10,0)
,	/* CT_v4601: (byte 0) */
  HW(14,7)
, 0
,	/* F0_IExtract_46storeInstance: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46storeInstance),7)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, CAPTAG(useLabel(FN_IExtract_46Prelude_46924_46same),1)
, VAPTAG(useLabel(FN_Prelude_46any))
, CAPTAG(useLabel(FN_IExtract_46Prelude_46925_46trans),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Util_46Extra_46isLeft)
, CAPTAG(useLabel(FN_Prelude_46map),1)
, useLabel(F0_Util_46Extra_46dropLeft)
, CAPTAG(useLabel(FN_Prelude_46filter),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, useLabel(F0_Prelude_46snd)
, useLabel(F0_Util_46Extra_46dropRight)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4605)
,	/* FN_IExtract_46Prelude_46924_46same: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,5,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_I1,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(2,HEAP_I2,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4605: (byte 0) */
  HW(2,3)
, 0
,	/* F0_IExtract_46Prelude_46924_46same: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_46924_46same),3)
, VAPTAG(useLabel(FN_Prelude_46Eq_46TokenId_46TokenId_46_61_61))
, VAPTAG(useLabel(FN_Prelude_46_38_38))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4630)
,	/* FN_IExtract_46Prelude_46925_46trans: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,UNPACK)
, bytes2word(3,PUSH_P1,2,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4626: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4613: (byte 4) */
  bytes2word(POP_I1,JUMP,94,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,UNPACK,2,PUSH_P1)
, bytes2word(3,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v4628: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4621: (byte 2) */
  bytes2word(62,0,POP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_I2,HEAP_ARG)
, bytes2word(2,ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4623: (byte 2) */
  bytes2word(TOP(27),BOT(27),POP_I1,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_P1,0)
, bytes2word(HEAP_CVAL_P1,7,HEAP_I1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,5)
,	/* v4624: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,1,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,1,HEAP_P1)
, bytes2word(6,HEAP_CVAL_N1,2,HEAP_P1)
, bytes2word(5,HEAP_OFF_N1,5,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_OFF_N1)
,	/* v4618: (byte 2) */
  bytes2word(5,RETURN,POP_P1,2)
,	/* v4614: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v4610: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,3,JUMP,2)
,	/* v4606: (byte 1) */
  bytes2word(0,HEAP_CVAL_P1,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
, CONSTR(0,3,0)
, CONSTR(6,2,0)
,	/* CT_v4630: (byte 0) */
  HW(9,3)
, 0
,	/* F0_IExtract_46Prelude_46925_46trans: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_46925_46trans),3)
, VAPTAG(useLabel(FN_Prelude_46lookup))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, CAPTAG(useLabel(FN_LAMBDA4247),1)
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46Show_46TokenId_46TokenId_46show))
, VAPTAG(useLabel(FN_Prelude_46_36))
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_LAMBDA4248))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4632)
,	/* FN_LAMBDA4248: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4631)
,	/* CT_v4632: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4248: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4248))
, bytes2word(1,0,0,1)
, useLabel(CT_v4633)
,	/* FN_LAMBDA4247: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v4633: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA4247: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4247),1)
, bytes2word(0,0,0,0)
, useLabel(CT_v4634)
,};
Node FN_IExtract_46addPreludeTupleInstances[] = {
  bytes2word(NEEDHEAP_P1,63,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_INT_P1,2,HEAP_INT_P1)
, bytes2word(15,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,6,HEAP_INT_P1)
, bytes2word(2,HEAP_INT_P1,15,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(14,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_P1,6,HEAP_INT_P1)
, bytes2word(2,HEAP_INT_P1,15,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(14,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(11,HEAP_CVAL_P1,6,HEAP_INT_P1)
, bytes2word(2,HEAP_INT_P1,15,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(14,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(12,HEAP_CVAL_P1,6,HEAP_INT_P1)
, bytes2word(2,HEAP_INT_P1,15,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4634: (byte 0) */
  HW(10,0)
, 0
,};
Node CF_IExtract_46addPreludeTupleInstances[] = {
  VAPTAG(useLabel(FN_IExtract_46addPreludeTupleInstances))
, CAPTAG(useLabel(FN_IExtract_46Prelude_461086_46tuple),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, useLabel(CF_TokenId_46tEq)
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Int_46enumFromTo))
, VAPTAG(useLabel(FN_State_46mapS0))
, useLabel(CF_TokenId_46tOrd)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, useLabel(CF_TokenId_46tBounded)
, useLabel(CF_TokenId_46tRead)
, useLabel(CF_TokenId_46tShow)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4635)
,	/* FN_IExtract_46Prelude_461086_46tuple: (byte 0) */
  bytes2word(NEEDHEAP_P1,37,HEAP_CVAL_I3,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CHAR_P1,97,HEAP_CVAL_P1)
, bytes2word(8,HEAP_ARG,2,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_IN3,HEAP_ARG,2,HEAP_CVAL_P1)
, bytes2word(12,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_P1)
, bytes2word(0,PUSH_HEAP,HEAP_CVAL_P1,14)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,13)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,13)
, bytes2word(HEAP_OFF_N1,8,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
, CONSTR(1,1,0)
, CONSTR(0,0,0)
,	/* CT_v4635: (byte 0) */
  HW(12,2)
, 0
,	/* F0_IExtract_46Prelude_461086_46tuple: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_461086_46tuple),2)
, CAPTAG(useLabel(FN_LAMBDA4249),2)
, CAPTAG(useLabel(FN_Prelude_46flip),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(F0_TokenId_46visible)
, VAPTAG(useLabel(FN_Prelude_46Enum_46Prelude_46Char_46enumFrom))
, VAPTAG(useLabel(FN_Prelude_46take))
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_IExtract_46tvTids))
, useLabel(CF_TokenId_46rpsPrelude)
, CAPTAG(useLabel(FN_IExtract_46Prelude_461085_46mkCtx),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_IExtract_46storeInstance),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4636)
,	/* FN_LAMBDA4249: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v4636: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4249: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4249),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4637)
,	/* FN_IExtract_46Prelude_461085_46mkCtx: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_N1,4)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(6,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
,	/* CT_v4637: (byte 0) */
  HW(1,2)
, 0
,	/* F0_IExtract_46Prelude_461085_46mkCtx: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_461085_46mkCtx),2)
, useLabel(CF_Util_46Extra_46noPos)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v4645)
,	/* FN_IExtract_46existTid: (byte 0) */
  bytes2word(ZAP_ARG_I3,NEEDSTACK_I16,PUSH_ARG,4)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,10)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,3,HEAP_ARG)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(4,HEAP_I1,HEAP_P1,8)
, bytes2word(ZAP_ARG_I1,ZAP_ARG_I2,ZAP_STACK_P1,11)
, bytes2word(ZAP_STACK_P1,10,ZAP_STACK_P1,9)
, bytes2word(ZAP_STACK_P1,8,ZAP_STACK_P1,7)
, bytes2word(ZAP_STACK_P1,6,ZAP_STACK_P1,5)
, bytes2word(ZAP_STACK_P1,4,ZAP_STACK_P1,3)
, bytes2word(ZAP_STACK_P1,2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4641: (byte 2) */
  bytes2word(TOP(15),BOT(15),POP_I1,HEAP_CVAL_N1)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_OFF_N1,2,HEAP_ARG,4)
,	/* v4642: (byte 1) */
  bytes2word(RETURN,UNPACK,1,HEAP_CVAL_IN3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,4,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,0,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
,	/* CT_v4645: (byte 0) */
  HW(5,4)
, 0
,	/* F0_IExtract_46existTid: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46existTid),4)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4654)
,	/* FN_IExtract_46importInstance: (byte 0) */
  bytes2word(ZAP_ARG,7,NEEDSTACK_P1,17)
, bytes2word(PUSH_ZAP_ARG,8,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,PUSH_HEAP,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I3,HEAP_P1,0)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_P1)
, bytes2word(6,HEAP_ARG,3,HEAP_CVAL_N1)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_N1,2)
, bytes2word(HEAP_I1,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_CVAL_P1,10,HEAP_CVAL_P1)
, bytes2word(11,PUSH_HEAP,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,4,HEAP_I1,HEAP_P1)
, bytes2word(11,ZAP_ARG_I1,ZAP_ARG_I2,ZAP_ARG_I3)
, bytes2word(ZAP_STACK_P1,4,ZAP_STACK_P1,2)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v4653: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4651: (byte 4) */
  bytes2word(POP_I1,JUMP,61,0)
, bytes2word(UNPACK,1,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,10,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_P1,13,HEAP_ARG,4)
, bytes2word(HEAP_P1,3,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_P1,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,10)
, bytes2word(HEAP_CVAL_P1,15,HEAP_I2,HEAP_OFF_N1)
, bytes2word(10,HEAP_P1,12,HEAP_CVAL_IN3)
, bytes2word(HEAP_P1,6,HEAP_P1,7)
, bytes2word(HEAP_P1,8,HEAP_P1,9)
, bytes2word(HEAP_P1,10,HEAP_P1,11)
, bytes2word(HEAP_P1,0,HEAP_P1,13)
, bytes2word(HEAP_P1,14,HEAP_P1,15)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,16,HEAP_I1)
,	/* v4648: (byte 3) */
  bytes2word(HEAP_OFF_N1,13,RETURN_EVAL,HEAP_CVAL_P1)
, bytes2word(17,PUSH_HEAP,HEAP_CVAL_P1,18)
, bytes2word(HEAP_OFF_N1,2,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,10,0)
, CONSTR(0,2,0)
, CONSTR(7,0,0)
,	/* CT_v4654: (byte 0) */
  HW(16,8)
, 0
,	/* F0_IExtract_46importInstance: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46importInstance),8)
, VAPTAG(useLabel(FN_Prelude_46show))
, VAPTAG(useLabel(FN_Prelude_46_46))
, useLabel(CF_Prelude_46reverse)
, useLabel(F0_NHC_46PackedString_46packString)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, VAPTAG(useLabel(FN_Info_46addInstanceI))
, VAPTAG(useLabel(FN_Data_46Map_46insertWith))
, useLabel(F0_Util_46Extra_46fstOf)
, VAPTAG(useLabel(FN_Prelude_46seq))
, VAPTAG(useLabel(FN_LAMBDA4250))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4656)
,	/* FN_LAMBDA4250: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4655)
,	/* CT_v4656: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4250: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4250))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4657)
,};
Node FN_IExtract_46iextractInstance[] = {
  bytes2word(ZAP_ARG_I3,NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_ARG)
, bytes2word(4,HEAP_CVAL_I5,HEAP_ARG_ARG,5)
, bytes2word(1,HEAP_ARG,4,HEAP_P1)
, bytes2word(0,HEAP_ARG,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,10)
, bytes2word(HEAP_OFF_N1,8,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(7,0,0)
,	/* CT_v4657: (byte 0) */
  HW(4,5)
, 0
,};
Node F0_IExtract_46iextractInstance[] = {
  CAPTAG(useLabel(FN_IExtract_46iextractInstance),5)
, VAPTAG(useLabel(FN_LAMBDA4252))
, CAPTAG(useLabel(FN_IExtract_46existTid),2)
, CAPTAG(useLabel(FN_LAMBDA4256),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4658)
,	/* FN_LAMBDA4256: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,2,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,6,1)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,11,HEAP_OFF_N1,9)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(5,0,0)
,	/* CT_v4658: (byte 0) */
  HW(3,6)
, 0
,	/* F0_LAMBDA4256: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4256),6)
, CAPTAG(useLabel(FN_IExtract_46existTid),2)
, CAPTAG(useLabel(FN_LAMBDA4255),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4661)
,	/* FN_LAMBDA4255: (byte 0) */
  bytes2word(ZAP_ARG,7,NEEDHEAP_I32,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,4,PUSH_ZAP_ARG_I1)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,39)
, bytes2word(0,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_P1,0,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(9,HEAP_P1,0,HEAP_OFF_N1)
, bytes2word(9,HEAP_ARG,6,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_P1,10,HEAP_ARG_ARG)
, bytes2word(3,4,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,9,HEAP_OFF_N1)
,	/* v4659: (byte 2) */
  bytes2word(5,RETURN_EVAL,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_I1,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG_RET_EVAL,5,6)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4661: (byte 0) */
  HW(10,7)
, 0
,	/* F0_LAMBDA4255: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4255),7)
, VAPTAG(useLabel(FN_IExtract_46freeType))
, VAPTAG(useLabel(FN_Util_46Extra_46snub))
, useLabel(CF_Prelude_46Eq_46TokenId_46TokenId)
, VAPTAG(useLabel(FN_IExtract_46tvTids))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_IExtract_46transTypes))
, CAPTAG(useLabel(FN_LAMBDA4254),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, CAPTAG(useLabel(FN_IExtract_46storeInstance),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4693)
,	/* FN_LAMBDA4254: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4687: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4665: (byte 2) */
  bytes2word(138,0,UNPACK,4)
, bytes2word(PUSH_I1,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v4688: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4669: (byte 2) */
  bytes2word(117,0,POP_I1,PUSH_P1)
, bytes2word(3,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4689: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4673: (byte 2) */
  bytes2word(101,0,UNPACK,2)
, bytes2word(PUSH_P1,0,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,7,TOP(14),BOT(14))
, bytes2word(TOP(18),BOT(18),TOP(14),BOT(14))
, bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v4690: (byte 4) */
  bytes2word(TOP(52),BOT(52),TOP(14),BOT(14))
,	/* v4677: (byte 4) */
  bytes2word(POP_I1,JUMP,70,0)
, bytes2word(UNPACK,2,PUSH_P1,3)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v4691: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v4681: (byte 4) */
  bytes2word(POP_I1,JUMP,15,0)
, bytes2word(POP_I1,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_I1)
, bytes2word(HEAP_P1,5,HEAP_P1,7)
,	/* v4678: (byte 1) */
  bytes2word(RETURN,POP_P1,2,JUMP)
,	/* v4682: (byte 2) */
  bytes2word(36,0,UNPACK,3)
, bytes2word(PUSH_P1,4,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(8),BOT(8))
,	/* v4692: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4686: (byte 2) */
  bytes2word(15,0,POP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_I1,HEAP_P1,6)
,	/* v4683: (byte 3) */
  bytes2word(HEAP_P1,8,RETURN,POP_P1)
,	/* v4674: (byte 4) */
  bytes2word(3,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v4666: (byte 1) */
  bytes2word(0,POP_P1,4,JUMP)
,	/* v4662: (byte 2) */
  bytes2word(2,0,HEAP_CVAL_I5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4693: (byte 0) */
  HW(4,3)
, 0
,	/* F0_LAMBDA4254: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4254),3)
, CAPTAG(useLabel(FN_IExtract_46importInstance),2)
, useLabel(CF_Prelude_46Show_46TokenId_46TokenId)
, VAPTAG(useLabel(FN_LAMBDA4253))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4695)
,	/* FN_LAMBDA4253: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4694)
,	/* CT_v4695: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4253: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4253))
, bytes2word(1,0,0,1)
, useLabel(CT_v4702)
,	/* FN_LAMBDA4252: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,4,TOP(12),BOT(12))
, bytes2word(TOP(8),BOT(8),TOP(16),BOT(16))
,	/* v4701: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4699: (byte 2) */
  bytes2word(10,0,UNPACK,3)
,	/* v4700: (byte 2) */
  bytes2word(PUSH_I1,RETURN_EVAL,UNPACK,2)
,	/* v4696: (byte 2) */
  bytes2word(PUSH_I1,RETURN_EVAL,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4702: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA4252: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4252),1)
, VAPTAG(useLabel(FN_LAMBDA4251))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4704)
,	/* FN_LAMBDA4251: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4703)
,	/* CT_v4704: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4251: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4251))
, bytes2word(1,0,0,1)
, useLabel(CT_v4708)
,	/* FN_IExtract_46newInstance: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,5,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_P1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_I2,HEAP_P1,0)
, bytes2word(HEAP_I1,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,7,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4708: (byte 0) */
  HW(4,1)
, 0
,	/* F0_IExtract_46newInstance: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46newInstance),1)
, CAPTAG(useLabel(FN_LAMBDA4258),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA4261),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4709)
,	/* FN_LAMBDA4261: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I5,HEAP_ARG_ARG,2)
, bytes2word(3,HEAP_ARG_ARG,4,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(10,HEAP_OFF_N1,7,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(5,0,0)
,	/* CT_v4709: (byte 0) */
  HW(4,5)
, 0
,	/* F0_LAMBDA4261: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4261),5)
, CAPTAG(useLabel(FN_IExtract_46transTid),2)
, useLabel(CF_Util_46Extra_46noPos)
, CAPTAG(useLabel(FN_LAMBDA4260),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4710)
,	/* FN_LAMBDA4260: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I5,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,5,3)
, bytes2word(HEAP_ARG,4,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,11,HEAP_OFF_N1)
, bytes2word(8,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(7,0,0)
,	/* CT_v4710: (byte 0) */
  HW(4,5)
, 0
,	/* F0_LAMBDA4260: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4260),5)
, CAPTAG(useLabel(FN_IExtract_46transTid),2)
, useLabel(CF_Util_46Extra_46noPos)
, CAPTAG(useLabel(FN_LAMBDA4259),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4711)
,	/* FN_LAMBDA4259: (byte 0) */
  bytes2word(ZAP_ARG,6,NEEDHEAP_I32,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG,5,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4711: (byte 0) */
  HW(2,6)
, 0
,	/* F0_LAMBDA4259: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4259),6)
, CAPTAG(useLabel(FN_IExtract_46importInstance),2)
, useLabel(CF_Prelude_46Show_46TokenId_46TokenId)
, bytes2word(1,0,0,1)
, useLabel(CT_v4715)
,	/* FN_LAMBDA4258: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,3,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,0,HEAP_OFF_N1)
, bytes2word(3,HEAP_I1,HEAP_CVAL_I4,HEAP_I2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(7,0,0)
,	/* CT_v4715: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA4258: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4258),1)
, CAPTAG(useLabel(FN_IExtract_46transTid),2)
, CAPTAG(useLabel(FN_LAMBDA4257),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4716)
,	/* FN_LAMBDA4257: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(2,1,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v4716: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA4257: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4257),2)
, VAPTAG(useLabel(FN_State_46unitS))
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4742)
,	/* FN_IExtract_46importClass: (byte 0) */
  bytes2word(ZAP_ARG,6,NEEDSTACK_P1,24)
, bytes2word(PUSH_ARG,7,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_I1,HEAP_ARG,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_P1,5,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_I1,HEAP_OFF_N1)
, bytes2word(3,PUSH_ARG,7,PUSH_CVAL_P1)
, bytes2word(5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_P1,8,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
, bytes2word(HEAP_P1,3,HEAP_P1,12)
, bytes2word(ZAP_ARG_I3,ZAP_ARG,7,ZAP_STACK_P1)
, bytes2word(15,ZAP_STACK_P1,14,ZAP_STACK_P1)
, bytes2word(13,ZAP_STACK_P1,12,ZAP_STACK_P1)
, bytes2word(11,ZAP_STACK_P1,10,ZAP_STACK_P1)
, bytes2word(9,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4738: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4722: (byte 2) */
  bytes2word(12,1,UNPACK,1)
, bytes2word(PUSH_P1,0,ZAP_STACK_P1,8)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,13)
, bytes2word(TOP(26),BOT(26),TOP(30),BOT(30))
, bytes2word(TOP(82),BOT(82),TOP(26),BOT(26))
, bytes2word(TOP(133),BOT(133),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4739: (byte 2) */
  bytes2word(TOP(26),BOT(26),POP_I1,JUMP)
,	/* v4726: (byte 2) */
  bytes2word(202,0,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_P1,8,HEAP_ARG,1)
, bytes2word(HEAP_P1,0,HEAP_ARG,2)
, bytes2word(HEAP_P1,10,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(0,HEAP_P1,6,HEAP_P1)
, bytes2word(7,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_P1,12,HEAP_P1,5)
, bytes2word(HEAP_OFF_N1,10,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,20,HEAP_OFF_N1)
, bytes2word(5,SLIDE_P1,2,JUMP)
,	/* v4727: (byte 2) */
  bytes2word(171,0,UNPACK,3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_P1,9,HEAP_ARG,1)
, bytes2word(HEAP_P1,0,HEAP_ARG,2)
, bytes2word(HEAP_P1,11,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(0,HEAP_P1,7,HEAP_P1)
, bytes2word(8,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_OFF_N1,7,HEAP_I2,HEAP_CVAL_P1)
, bytes2word(12,HEAP_P1,6,HEAP_OFF_N1)
, bytes2word(10,PUSH_HEAP,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,20,HEAP_OFF_N1,5)
, bytes2word(SLIDE_P1,3,JUMP,120)
,	/* v4728: (byte 1) */
  bytes2word(0,UNPACK,7,PUSH_P1)
, bytes2word(4,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v4740: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4732: (byte 2) */
  bytes2word(72,0,POP_I1,PUSH_P1)
, bytes2word(5,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v4741: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4736: (byte 2) */
  bytes2word(56,0,POP_I1,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_P1,10,HEAP_P1)
, bytes2word(13,HEAP_ARG,1,HEAP_P1)
, bytes2word(0,HEAP_ARG,2,HEAP_P1)
, bytes2word(15,HEAP_OFF_N1,7,HEAP_CVAL_P1)
, bytes2word(14,HEAP_P1,12,HEAP_I2)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_N1,4,HEAP_P1)
, bytes2word(0,HEAP_P1,11,HEAP_OFF_N1)
, bytes2word(7,HEAP_ARG_ARG,4,5)
, bytes2word(HEAP_OFF_N1,7,HEAP_P1,6)
, bytes2word(HEAP_CVAL_P1,12,HEAP_P1,10)
, bytes2word(HEAP_OFF_N1,10,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,23,HEAP_OFF_N1)
,	/* v4729: (byte 4) */
  bytes2word(5,JUMP,7,0)
, bytes2word(POP_P1,7,JUMP,7)
,	/* v4730: (byte 1) */
  bytes2word(0,SLIDE_P1,7,JUMP)
,	/* v4723: (byte 2) */
  bytes2word(23,0,HEAP_CVAL_P1,15)
, bytes2word(HEAP_P1,0,HEAP_CVAL_N1,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,16,HEAP_P1)
, bytes2word(7,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(6,HEAP_ARG,2,HEAP_P1)
,	/* v4724: (byte 3) */
  bytes2word(9,HEAP_OFF_N1,7,SLIDE_P1)
,	/* v4719: (byte 4) */
  bytes2word(1,JUMP,41,0)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_P1,5,HEAP_ARG,1)
, bytes2word(HEAP_P1,6,HEAP_ARG,2)
, bytes2word(HEAP_P1,7,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,8)
, bytes2word(HEAP_CVAL_P1,17,HEAP_CVAL_P1,18)
, bytes2word(HEAP_I2,HEAP_P1,3,HEAP_P1)
, bytes2word(4,HEAP_ARG_ARG,4,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,19,HEAP_OFF_N1)
,	/* v4720: (byte 3) */
  bytes2word(10,HEAP_OFF_N1,8,ZAP_ARG_I1)
, bytes2word(ZAP_ARG_I2,ZAP_ARG,4,ZAP_ARG)
, bytes2word(5,ZAP_STACK_P1,8,ZAP_STACK_P1)
, bytes2word(7,ZAP_STACK_P1,6,ZAP_STACK_P1)
, bytes2word(5,ZAP_STACK_P1,4,ZAP_STACK_P1)
, bytes2word(3,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(4,7,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
, CONSTR(7,0,0)
,	/* CT_v4742: (byte 0) */
  HW(17,7)
, 0
,	/* F0_IExtract_46importClass: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46importClass),7)
, VAPTAG(useLabel(FN_LAMBDA4262))
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, useLabel(C0__40_41)
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS),2)
, useLabel(CF_Data_46Map_46empty)
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, VAPTAG(useLabel(FN_Info_46combIE))
, VAPTAG(useLabel(FN_Info_46uniqueI))
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS_39),2)
, useLabel(CF_Id_46IdSupply_46ImportState_46ImportState_46getUniqueId)
, CAPTAG(useLabel(FN_LAMBDA4263),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4743)
,	/* FN_LAMBDA4263: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG_ARG,6,2)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_ARG)
, bytes2word(5,HEAP_OFF_N1,7,HEAP_CVAL_I3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,10,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(4,7,0)
, CONSTR(0,0,0)
,	/* CT_v4743: (byte 0) */
  HW(2,6)
, 0
,	/* F0_LAMBDA4263: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4263),6)
, useLabel(CF_Data_46Map_46empty)
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4746)
,	/* FN_LAMBDA4262: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(JUMPFALSE,4,0,PUSH_ARG_I2)
,	/* v4744: (byte 1) */
  bytes2word(RETURN_EVAL,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v4746: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4262: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4262),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4753)
,	/* FN_IExtract_46checkInstanceCls: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,4,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_P1,0)
, bytes2word(HEAP_P1,7,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,HEAP_P1,9)
, bytes2word(ZAP_ARG_I1,ZAP_STACK_P1,9,ZAP_STACK_P1)
, bytes2word(1,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(2,HEAP_CVAL_N1,1,HEAP_P1)
, bytes2word(3,HEAP_P1,4,HEAP_P1)
, bytes2word(5,HEAP_P1,6,HEAP_P1)
, bytes2word(7,HEAP_P1,8,HEAP_P1)
, bytes2word(9,HEAP_I1,HEAP_P1,11)
, bytes2word(HEAP_P1,12,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,HEAP_I1,HEAP_OFF_N1,13)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(0,10,0)
,	/* CT_v4753: (byte 0) */
  HW(3,3)
, 0
,	/* F0_IExtract_46checkInstanceCls: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46checkInstanceCls),3)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, CAPTAG(useLabel(FN_IExtract_46Prelude_46948_46pred),1)
, VAPTAG(useLabel(FN_List_46partition))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4757)
,	/* FN_IExtract_46Prelude_46948_46pred: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,5,HEAP_CVAL_I3,HEAP_I1)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_I2,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(8,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(5,0,0)
,	/* CT_v4757: (byte 0) */
  HW(7,3)
, 0
,	/* F0_IExtract_46Prelude_46948_46pred: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_46948_46pred),3)
, VAPTAG(useLabel(FN_Prelude_46Eq_46TokenId_46TokenId_46_61_61))
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, VAPTAG(useLabel(FN_Maybe_46isJust))
, VAPTAG(useLabel(FN_Prelude_46_38_38))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4758)
,};
Node FN_IExtract_46iextractClass[] = {
  bytes2word(NEEDHEAP_P1,43,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_P1,0,HEAP_CVAL_IN3,HEAP_ARG_ARG)
, bytes2word(3,6,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,4)
, bytes2word(HEAP_ARG_ARG,3,5,HEAP_OFF_N1)
, bytes2word(6,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,6,HEAP_P1)
, bytes2word(0,HEAP_OFF_N1,20,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,7,HEAP_CVAL_P1)
, bytes2word(7,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(3,6,HEAP_ARG_ARG,8)
, bytes2word(7,HEAP_ARG_ARG,2,1)
, bytes2word(HEAP_ARG,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(11,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(2,2,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4758: (byte 0) */
  HW(6,8)
, 0
,};
Node F0_IExtract_46iextractClass[] = {
  CAPTAG(useLabel(FN_IExtract_46iextractClass),8)
, VAPTAG(useLabel(FN_IExtract_46tvTids))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_IExtract_46transTypes))
, CAPTAG(useLabel(FN_LAMBDA4267),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(9,0,8,1)
, bytes2word(7,2,6,3)
, bytes2word(5,4,4,5)
, bytes2word(3,6,2,7)
, bytes2word(1,8,0,9)
, useLabel(CT_v4759)
,	/* FN_LAMBDA4267: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,4,HEAP_ARG_ARG)
, bytes2word(2,8,HEAP_OFF_N1,6)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(6,HEAP_CVAL_I4,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,9,HEAP_ARG)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,10,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,3,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(0,2,0)
,	/* CT_v4759: (byte 0) */
  HW(3,9)
, 0
,	/* F0_LAMBDA4267: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4267),9)
, VAPTAG(useLabel(FN_IExtract_46transContext))
, CAPTAG(useLabel(FN_LAMBDA4266),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4760)
,	/* FN_LAMBDA4266: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,4)
, bytes2word(1,HEAP_ARG_ARG,8,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,6,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG_ARG,4)
, bytes2word(5,HEAP_ARG_ARG,6,7)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,7,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4760: (byte 0) */
  HW(4,8)
, 0
,	/* F0_LAMBDA4266: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4266),8)
, CAPTAG(useLabel(FN_IExtract_46transMethod),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA4265),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4761)
,	/* FN_LAMBDA4265: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,5,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG_ARG,1,4,HEAP_ARG_ARG)
, bytes2word(2,3,HEAP_OFF_N1,8)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4761: (byte 0) */
  HW(7,5)
, 0
,	/* F0_LAMBDA4265: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4265),5)
, VAPTAG(useLabel(FN_Prelude_46concat))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_IExtract_46importClass),2)
, CAPTAG(useLabel(FN_IExtract_46checkInstanceCls),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_LAMBDA4264),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(1,0,0,1)
, useLabel(CT_v4762)
,	/* FN_LAMBDA4264: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4762: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA4264: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4264),1)
, VAPTAG(useLabel(FN_State_46mapS0))
, useLabel(F0_IExtract_46newInstance)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4817)
,	/* FN_IExtract_46importData: (byte 0) */
  bytes2word(ZAP_ARG,6,NEEDSTACK_P1,28)
, bytes2word(PUSH_ARG,7,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_I1,HEAP_ARG,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_P1,5,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_I1,HEAP_OFF_N1)
, bytes2word(3,PUSH_ARG,7,PUSH_CVAL_P1)
, bytes2word(5,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_P1,8,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
, bytes2word(HEAP_P1,3,HEAP_P1,12)
, bytes2word(ZAP_ARG_I3,ZAP_ARG,7,ZAP_STACK_P1)
, bytes2word(15,ZAP_STACK_P1,14,ZAP_STACK_P1)
, bytes2word(13,ZAP_STACK_P1,12,ZAP_STACK_P1)
, bytes2word(11,ZAP_STACK_P1,10,ZAP_STACK_P1)
, bytes2word(9,ZAP_STACK_P1,7,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4808: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4768: (byte 4) */
  bytes2word(POP_I1,JUMP,181,1)
, bytes2word(UNPACK,1,PUSH_P1,0)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,13)
, bytes2word(TOP(26),BOT(26),TOP(30),BOT(30))
, bytes2word(TOP(26),BOT(26),TOP(76),BOT(76))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
, bytes2word(TOP(26),BOT(26),TOP(26),BOT(26))
,	/* v4809: (byte 2) */
  bytes2word(TOP(26),BOT(26),POP_I1,JUMP)
,	/* v4772: (byte 2) */
  bytes2word(134,1,UNPACK,2)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_P1,8,HEAP_ARG,1)
, bytes2word(HEAP_P1,0,HEAP_ARG,2)
, bytes2word(HEAP_P1,10,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_IN3,HEAP_P1,0,HEAP_P1)
, bytes2word(6,HEAP_P1,7,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_CVAL_P1,11)
, bytes2word(HEAP_P1,5,HEAP_OFF_N1,8)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,12,HEAP_OFF_N1)
, bytes2word(17,HEAP_OFF_N1,5,SLIDE_P1)
,	/* v4773: (byte 4) */
  bytes2word(2,JUMP,92,1)
, bytes2word(UNPACK,5,PUSH_P1,4)
, bytes2word(ZAP_ARG,4,ZAP_STACK_P1,10)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,4)
, bytes2word(TOP(8),BOT(8),TOP(12),BOT(12))
,	/* v4810: (byte 4) */
  bytes2word(TOP(147),BOT(147),TOP(8),BOT(8))
,	/* v4777: (byte 4) */
  bytes2word(POP_I1,JUMP,15,1)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4811: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v4781: (byte 4) */
  bytes2word(POP_I1,JUMP,111,0)
, bytes2word(POP_I1,PUSH_ARG,5,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,4,NOP)
, bytes2word(TOP(8),BOT(8),TOP(12),BOT(12))
,	/* v4812: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(8),BOT(8))
,	/* v4787: (byte 4) */
  bytes2word(POP_I1,JUMP,38,0)
, bytes2word(UNPACK,2,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4813: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4791: (byte 4) */
  bytes2word(POP_I1,JUMP,12,0)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(4,SLIDE_P1,2,JUMP)
,	/* v4788: (byte 2) */
  bytes2word(7,0,POP_P1,2)
,	/* v4789: (byte 3) */
  bytes2word(JUMP,7,0,SLIDE_P1)
,	/* v4784: (byte 4) */
  bytes2word(2,JUMP,5,0)
,	/* v4785: (byte 3) */
  bytes2word(PUSH_HEAP,HEAP_CVAL_N1,5,JUMPFALSE)
, bytes2word(49,0,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_P1,10,HEAP_P1,13)
, bytes2word(HEAP_ARG,1,HEAP_I2,HEAP_P1)
, bytes2word(3,HEAP_P1,15,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_P1,13,HEAP_P1)
, bytes2word(12,HEAP_P1,4,HEAP_CVAL_IN3)
, bytes2word(HEAP_I2,HEAP_P1,3,HEAP_OFF_N1)
, bytes2word(6,HEAP_P1,5,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_P1,11,HEAP_P1)
, bytes2word(10,HEAP_OFF_N1,8,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,12,HEAP_OFF_N1,20)
, bytes2word(HEAP_OFF_N1,5,JUMP,7)
,	/* v4778: (byte 1) */
  bytes2word(0,POP_P1,2,JUMP)
,	/* v4779: (byte 2) */
  bytes2word(141,0,SLIDE_P1,2)
,	/* v4792: (byte 3) */
  bytes2word(JUMP,180,0,UNPACK)
, bytes2word(2,PUSH_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(8),BOT(8))
,	/* v4814: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4796: (byte 2) */
  bytes2word(111,0,POP_I1,PUSH_ARG)
, bytes2word(5,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(4,NOP,TOP(8),BOT(8))
, bytes2word(TOP(8),BOT(8),TOP(12),BOT(12))
,	/* v4815: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4802: (byte 2) */
  bytes2word(38,0,UNPACK,2)
, bytes2word(PUSH_I1,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4816: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4806: (byte 2) */
  bytes2word(12,0,UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,4,SLIDE_P1)
,	/* v4803: (byte 4) */
  bytes2word(2,JUMP,7,0)
, bytes2word(POP_P1,2,JUMP,7)
,	/* v4804: (byte 1) */
  bytes2word(0,SLIDE_P1,2,JUMP)
,	/* v4799: (byte 2) */
  bytes2word(5,0,PUSH_HEAP,HEAP_CVAL_N1)
,	/* v4800: (byte 1) */
  bytes2word(5,JUMPFALSE,49,0)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_P1,13,HEAP_ARG,1)
, bytes2word(HEAP_I2,HEAP_P1,3,HEAP_P1)
, bytes2word(15,HEAP_OFF_N1,7,HEAP_CVAL_P1)
, bytes2word(13,HEAP_P1,12,HEAP_P1)
, bytes2word(4,HEAP_CVAL_IN3,HEAP_I2,HEAP_P1)
, bytes2word(3,HEAP_OFF_N1,6,HEAP_P1)
, bytes2word(5,HEAP_ARG,5,HEAP_CVAL_P1)
, bytes2word(11,HEAP_P1,10,HEAP_OFF_N1)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,20,HEAP_OFF_N1,5)
,	/* v4793: (byte 3) */
  bytes2word(JUMP,7,0,POP_P1)
,	/* v4794: (byte 4) */
  bytes2word(2,JUMP,7,0)
, bytes2word(SLIDE_P1,2,JUMP,46)
,	/* v4774: (byte 1) */
  bytes2word(0,HEAP_CVAL_N1,1,HEAP_CVAL_P1)
, bytes2word(14,HEAP_P1,11,HEAP_ARG)
, bytes2word(1,HEAP_P1,0,HEAP_ARG)
, bytes2word(2,HEAP_P1,13,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_P1,13,HEAP_P1)
, bytes2word(10,HEAP_I2,HEAP_CVAL_IN3,HEAP_P1)
, bytes2word(0,HEAP_I1,HEAP_OFF_N1,6)
, bytes2word(HEAP_P1,3,HEAP_P1,4)
, bytes2word(HEAP_CVAL_P1,11,HEAP_P1,8)
, bytes2word(HEAP_OFF_N1,8,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,20,HEAP_OFF_N1)
,	/* v4775: (byte 1) */
  bytes2word(5,SLIDE_P1,5,JUMP)
,	/* v4769: (byte 2) */
  bytes2word(6,0,POP_I1,JUMP)
,	/* v4770: (byte 2) */
  bytes2word(7,0,SLIDE_P1,1)
,	/* v4765: (byte 3) */
  bytes2word(JUMP,26,0,HEAP_CVAL_P1)
, bytes2word(15,HEAP_P1,5,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_P1,7)
, bytes2word(HEAP_I2,HEAP_P1,3,HEAP_P1)
, bytes2word(4,HEAP_ARG_ARG,4,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,16,HEAP_CVAL_P1)
,	/* v4766: (byte 3) */
  bytes2word(17,HEAP_OFF_N1,12,ZAP_ARG_I1)
, bytes2word(ZAP_ARG_I2,ZAP_ARG,4,ZAP_ARG)
, bytes2word(5,ZAP_STACK_P1,8,ZAP_STACK_P1)
, bytes2word(6,ZAP_STACK_P1,5,ZAP_STACK_P1)
, bytes2word(4,ZAP_STACK_P1,3,EVAL)
, bytes2word(NEEDHEAP_I32,APPLY,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
, CONSTR(1,0,0)
, CONSTR(3,5,0)
, CONSTR(0,2,0)
, CONSTR(5,0,0)
,	/* CT_v4817: (byte 0) */
  HW(15,7)
, 0
,	/* F0_IExtract_46importData: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46importData),7)
, VAPTAG(useLabel(FN_LAMBDA4268))
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, useLabel(C0__40_41)
, VAPTAG(useLabel(FN_Prelude_46Ord_46Prelude_462))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, useLabel(CF_Prelude_46Ord_46IdKind_46IdKind)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS),2)
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, VAPTAG(useLabel(FN_Info_46combIE))
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS_39),2)
, CAPTAG(useLabel(FN_LAMBDA4269),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, useLabel(CF_Id_46IdSupply_46ImportState_46ImportState_46getUniqueId)
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v4818)
,	/* FN_LAMBDA4269: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(10,3,HEAP_ARG,4)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_N1,2)
, bytes2word(HEAP_ARG_ARG,10,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,5,HEAP_OFF_N1)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(17,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(3,5,0)
, CONSTR(5,0,0)
,	/* CT_v4818: (byte 0) */
  HW(3,10)
, 0
,	/* F0_LAMBDA4269: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4269),10)
, CAPTAG(useLabel(FN_IExtract_46addRT_95IS),2)
, CAPTAG(useLabel(FN_ImportState_46addSymbolIS),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4821)
,	/* FN_LAMBDA4268: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(JUMPFALSE,4,0,PUSH_ARG_I2)
,	/* v4819: (byte 1) */
  bytes2word(RETURN_EVAL,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v4821: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4268: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4268),2)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4828)
,	/* FN_IExtract_46checkInstanceCon: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDSTACK_I16,PUSH_ZAP_ARG_I3,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_P1,4,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_P1,0)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,9,ZAP_ARG_I1,ZAP_STACK_P1)
, bytes2word(9,ZAP_STACK_P1,1,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_N1)
, bytes2word(1,HEAP_P1,3,HEAP_P1)
, bytes2word(4,HEAP_P1,5,HEAP_P1)
, bytes2word(6,HEAP_P1,7,HEAP_P1)
, bytes2word(8,HEAP_P1,9,HEAP_I1)
, bytes2word(HEAP_P1,11,HEAP_P1,12)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,2,HEAP_I1)
, bytes2word(HEAP_OFF_N1,13,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(0,10,0)
,	/* CT_v4828: (byte 0) */
  HW(3,3)
, 0
,	/* F0_IExtract_46checkInstanceCon: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46checkInstanceCon),3)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, CAPTAG(useLabel(FN_IExtract_46Prelude_46970_46pred),1)
, VAPTAG(useLabel(FN_List_46partition))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4832)
,	/* FN_IExtract_46Prelude_46970_46pred: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,5,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,3,HEAP_ARG,1)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4832: (byte 0) */
  HW(1,2)
, 0
,	/* F0_IExtract_46Prelude_46970_46pred: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46Prelude_46970_46pred),2)
, VAPTAG(useLabel(FN_Prelude_46Eq_46TokenId_46TokenId_46_61_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4833)
,};
Node FN_IExtract_46iextractDataPrim[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG,4,HEAP_CVAL_I4,HEAP_ARG_ARG)
, bytes2word(2,1,HEAP_ARG_ARG,5)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(10,HEAP_OFF_N1,7,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(5,0,0)
,	/* CT_v4833: (byte 0) */
  HW(3,5)
, 0
,};
Node F0_IExtract_46iextractDataPrim[] = {
  CAPTAG(useLabel(FN_IExtract_46iextractDataPrim),5)
, CAPTAG(useLabel(FN_IExtract_46transTid),2)
, CAPTAG(useLabel(FN_LAMBDA4271),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4834)
,	/* FN_LAMBDA4271: (byte 0) */
  bytes2word(NEEDHEAP_P1,34,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,12,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,12,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_N1,4,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,1,4)
, bytes2word(HEAP_ARG,2,HEAP_OFF_N1,11)
, bytes2word(HEAP_OFF_N1,7,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(4,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(7,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(3,1,0)
, CONSTR(1,4,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4834: (byte 0) */
  HW(6,5)
, 0
,	/* F0_LAMBDA4271: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4271),5)
, VAPTAG(useLabel(FN_NT_46mkNTcons))
, CAPTAG(useLabel(FN_IExtract_46importData),2)
, CAPTAG(useLabel(FN_IExtract_46checkInstanceCon),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_LAMBDA4270),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(1,0,0,1)
, useLabel(CT_v4835)
,	/* FN_LAMBDA4270: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4835: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA4270: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4270),1)
, VAPTAG(useLabel(FN_State_46mapS0))
, useLabel(F0_IExtract_46newInstance)
, bytes2word(9,0,8,1)
, bytes2word(7,2,6,3)
, bytes2word(5,4,4,5)
, bytes2word(3,6,2,7)
, bytes2word(1,8,0,9)
, useLabel(CT_v4836)
,};
Node FN_IExtract_46iextractData[] = {
  bytes2word(NEEDHEAP_P1,47,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,7,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_I1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(7,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,7)
, bytes2word(HEAP_CVAL_N1,1,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_OFF_N1,6,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_IN3,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,18,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_I1,HEAP_P1)
, bytes2word(0,HEAP_ARG,4,HEAP_OFF_N1)
, bytes2word(7,HEAP_CVAL_P1,11,HEAP_I1)
, bytes2word(HEAP_ARG_ARG,9,8,HEAP_ARG_ARG)
, bytes2word(2,1,HEAP_ARG_ARG,3)
, bytes2word(6,PUSH_HEAP,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,10)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(0,3,0)
,	/* CT_v4836: (byte 0) */
  HW(10,9)
, 0
,};
Node F0_IExtract_46iextractData[] = {
  CAPTAG(useLabel(FN_IExtract_46iextractData),9)
, VAPTAG(useLabel(FN_IExtract_46tvPosTids))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, CAPTAG(useLabel(FN_LAMBDA4272),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, CAPTAG(useLabel(FN_LAMBDA4273),2)
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, VAPTAG(useLabel(FN_IExtract_46transTypes))
, CAPTAG(useLabel(FN_LAMBDA4279),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,8,0)
, bytes2word(7,1,6,2)
, bytes2word(5,3,4,4)
, bytes2word(3,5,2,6)
, bytes2word(1,7,0,8)
, useLabel(CT_v4847)
,	/* FN_LAMBDA4279: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG,8,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4845: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v4840: (byte 4) */
  bytes2word(POP_I1,JUMP,61,0)
, bytes2word(UNPACK,4,PUSH_I1,EVAL)
, bytes2word(NEEDHEAP_I32,TABLESWITCH,2,NOP)
,	/* v4846: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v4844: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_P1,3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG_ARG,4,1)
, bytes2word(HEAP_P1,0,HEAP_I2,HEAP_ARG)
, bytes2word(2,HEAP_OFF_N1,8,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,8,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG_ARG,4)
, bytes2word(5,HEAP_ARG_ARG,8,6)
, bytes2word(HEAP_ARG,7,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,10,HEAP_OFF_N1)
,	/* v4841: (byte 2) */
  bytes2word(8,RETURN_EVAL,POP_P1,4)
,	/* v4837: (byte 3) */
  bytes2word(JUMP,2,0,HEAP_CVAL_P1)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,2,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4847: (byte 0) */
  HW(7,8)
, 0
,	/* F0_LAMBDA4279: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4279),8)
, VAPTAG(useLabel(FN_Prelude_46last))
, CAPTAG(useLabel(FN_IExtract_46transConstr),1)
, VAPTAG(useLabel(FN_State_46mapS))
, CAPTAG(useLabel(FN_LAMBDA4277),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, VAPTAG(useLabel(FN_LAMBDA4278))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v4849)
,	/* FN_LAMBDA4278: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v4848)
,	/* CT_v4849: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA4278: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA4278))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4850)
,	/* FN_LAMBDA4277: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_I5,HEAP_ARG_ARG,6)
, bytes2word(4,HEAP_CVAL_P1,6,HEAP_ARG_ARG)
, bytes2word(1,5,HEAP_OFF_N1,9)
, bytes2word(HEAP_ARG,3,HEAP_OFF_N1,8)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,9)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4850: (byte 0) */
  HW(8,6)
, 0
,	/* F0_LAMBDA4277: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4277),6)
, VAPTAG(useLabel(FN_LAMBDA4274))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_LAMBDA4275))
, CAPTAG(useLabel(FN_IExtract_46importData),2)
, CAPTAG(useLabel(FN_IExtract_46checkInstanceCon),2)
, VAPTAG(useLabel(FN_State_46_62_62_62))
, CAPTAG(useLabel(FN_LAMBDA4276),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(1,0,0,1)
, useLabel(CT_v4851)
,	/* FN_LAMBDA4276: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v4851: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA4276: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4276),1)
, VAPTAG(useLabel(FN_State_46mapS0))
, useLabel(F0_IExtract_46newInstance)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4856)
,	/* FN_LAMBDA4275: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4853: (byte 2) */
  bytes2word(TOP(13),BOT(13),UNPACK,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,1,HEAP_I1)
,	/* v4854: (byte 3) */
  bytes2word(HEAP_ARG,1,RETURN,UNPACK)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_N1,2)
, bytes2word(HEAP_I1,HEAP_ARG,1,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(2,2,0)
, CONSTR(1,2,0)
,	/* CT_v4856: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4275: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4275),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v4862)
,	/* FN_LAMBDA4274: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v4861: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4860: (byte 2) */
  bytes2word(7,0,UNPACK,1)
,	/* v4857: (byte 3) */
  bytes2word(PUSH_CVAL_P1,3,RETURN_EVAL,PUSH_CVAL_P1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4862: (byte 0) */
  HW(2,1)
, 0
,	/* F0_LAMBDA4274: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4274),1)
, useLabel(F0_Info_46patchIE)
, useLabel(F0_Prelude_46id)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4863)
,	/* FN_LAMBDA4273: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(2,2,0)
,	/* CT_v4863: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4273: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4273),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4864)
,	/* FN_LAMBDA4272: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(2,2,0)
,	/* CT_v4864: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA4272: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4272),2)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4868)
,};
Node FN_IExtract_46iextractType[] = {
  bytes2word(ZAP_ARG,4,NEEDSTACK_I16,PUSH_ZAP_ARG_I2)
, bytes2word(EVAL,NEEDHEAP_I32,UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG,6)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_P1,0)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_ARG,7)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,6)
, bytes2word(HEAP_P1,0,HEAP_OFF_N1,10)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,7)
, bytes2word(HEAP_CVAL_P1,7,HEAP_ARG_ARG,3)
, bytes2word(5,HEAP_ARG,1,HEAP_I2)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,12,HEAP_OFF_N1,8)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v4868: (byte 0) */
  HW(6,7)
, 0
,};
Node F0_IExtract_46iextractType[] = {
  CAPTAG(useLabel(FN_IExtract_46iextractType),7)
, VAPTAG(useLabel(FN_IExtract_46tvPosTids))
, VAPTAG(useLabel(FN_Prelude_46map))
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_IExtract_46transTypes))
, CAPTAG(useLabel(FN_LAMBDA4280),1)
, VAPTAG(useLabel(FN_State_46_62_62_62_61))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v4869)
,	/* FN_LAMBDA4280: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(4,5,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,6,HEAP_OFF_N1,8)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v4869: (byte 0) */
  HW(1,6)
, 0
,	/* F0_LAMBDA4280: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA4280),6)
, CAPTAG(useLabel(FN_IExtract_46importData),2)
, bytes2word(7,0,6,1)
, bytes2word(5,2,4,3)
, bytes2word(3,4,2,5)
, bytes2word(1,6,0,7)
, useLabel(CT_v4879)
,	/* FN_IExtract_46fixAdd: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ARG,7,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,1,6)
, bytes2word(HEAP_I1,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(4),BOT(4))
,	/* v4873: (byte 2) */
  bytes2word(TOP(20),BOT(20),POP_I1,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,1,6,HEAP_ARG)
, bytes2word(5,HEAP_P1,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,6)
,	/* v4874: (byte 2) */
  bytes2word(HEAP_I2,RETURN,UNPACK,1)
, bytes2word(PUSH_ARG,5,PUSH_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,2,ZAP_ARG_I1)
, bytes2word(ZAP_ARG_I2,EVAL,NEEDHEAP_I32,APPLY)
, bytes2word(2,EVAL,NEEDHEAP_I32,JUMPFALSE)
, bytes2word(5,0,PUSH_ARG,7)
,	/* v4875: (byte 1) */
  bytes2word(RETURN,HEAP_CVAL_P1,6,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG,6,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG,4,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_P1,6,HEAP_ARG)
, bytes2word(4,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,0,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,14,HEAP_OFF_N1)
, bytes2word(10,HEAP_OFF_N1,6,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,5,HEAP_I2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_I2,HEAP_OFF_N1)
, bytes2word(5,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(5,3,0)
, CONSTR(0,2,0)
,	/* CT_v4879: (byte 0) */
  HW(5,7)
, 0
,	/* F0_IExtract_46fixAdd: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46fixAdd),7)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, VAPTAG(useLabel(FN_Data_46Map_46insert))
, VAPTAG(useLabel(FN_Prelude_46_61_61))
, VAPTAG(useLabel(FN_Prelude_46show))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4884)
,	/* FN_IExtract_46fixTid: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4881: (byte 2) */
  bytes2word(TOP(12),BOT(12),UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG,1)
,	/* v4882: (byte 2) */
  bytes2word(HEAP_I2,RETURN_EVAL,UNPACK,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_I2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4884: (byte 0) */
  HW(1,2)
, 0
,	/* F0_IExtract_46fixTid: (byte 0) */
  CAPTAG(useLabel(FN_IExtract_46fixTid),2)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v4906)
,};
Node FN_IExtract_46fixOne[] = {
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,4,EVAL)
, bytes2word(UNPACK,3,PUSH_P1,0)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,5)
, bytes2word(TOP(10),BOT(10),TOP(10),BOT(10))
, bytes2word(TOP(10),BOT(10),TOP(10),BOT(10))
,	/* v4902: (byte 2) */
  bytes2word(TOP(14),BOT(14),POP_I1,JUMP)
,	/* v4890: (byte 2) */
  bytes2word(103,0,UNPACK,1)
, bytes2word(PUSH_P1,3,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,2,TOP(4),BOT(4))
,	/* v4903: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v4894: (byte 2) */
  bytes2word(83,0,UNPACK,2)
, bytes2word(PUSH_I1,EVAL,NEEDHEAP_I32,TABLESWITCH)
, bytes2word(2,NOP,TOP(8),BOT(8))
,	/* v4904: (byte 2) */
  bytes2word(TOP(4),BOT(4),POP_I1,JUMP)
,	/* v4898: (byte 2) */
  bytes2word(62,0,POP_I1,PUSH_ARG)
, bytes2word(5,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(2,HEAP_CVAL_I3,HEAP_ARG,3)
, bytes2word(HEAP_P1,4,HEAP_CVAL_N1,1)
, bytes2word(HEAP_OFF_N1,4,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(7,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(9,HEAP_ARG,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,10)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,13)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,10)
, bytes2word(HEAP_I1,HEAP_OFF_N1,9,HEAP_ARG)
,	/* v4895: (byte 2) */
  bytes2word(5,RETURN_EVAL,POP_P1,2)
,	/* v4891: (byte 3) */
  bytes2word(JUMP,2,0,POP_I1)
,	/* v4887: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_I1,HEAP_I2)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,10)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,7)
, bytes2word(HEAP_P1,0,HEAP_CVAL_P1,13)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_P1,14)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,15,HEAP_OFF_N1)
, bytes2word(12,HEAP_ARG,5,HEAP_OFF_N1)
, bytes2word(6,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(4,1,0)
,	/* CT_v4906: (byte 0) */
  HW(13,5)
, 0
,};
Node F0_IExtract_46fixOne[] = {
  CAPTAG(useLabel(FN_IExtract_46fixOne),5)
, VAPTAG(useLabel(FN_TokenId_46ensureM))
, VAPTAG(useLabel(FN_Prelude_46Eq_46Prelude_462))
, useLabel(CF_Prelude_46Eq_46Syntax_46InfixClass)
, VAPTAG(useLabel(FN_Prelude_46Show_46Syntax_46InfixClass))
, useLabel(CF_Prelude_46Show_46TokenId_46TokenId)
, VAPTAG(useLabel(FN_Prelude_46Show_46Prelude_462))
, VAPTAG(useLabel(FN_IExtract_46fixTid))
, VAPTAG(useLabel(FN_IExtract_46fixAdd))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, CAPTAG(useLabel(FN_IExtract_46fixAdd),2)
, CAPTAG(useLabel(FN_IExtract_46fixTid),1)
, VAPTAG(useLabel(FN_Prelude_46map))
, VAPTAG(useLabel(FN_Prelude_46foldr))
, bytes2word(0,0,0,0)
, useLabel(CT_v4907)
,};
Node FN_IExtract_46defFixity[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_INT_P1,9,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v4907: (byte 0) */
  HW(0,0)
, 0
,};
Node CF_IExtract_46defFixity[] = {
  VAPTAG(useLabel(FN_IExtract_46defFixity))
, bytes2word(1,0,0,1)
, useLabel(CT_v4908)
,};
Node FN_IExtract_46defFixFun[] = {
  bytes2word(ZAP_ARG_I1,NEEDSTACK_I16,PUSH_CVAL_P1,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v4908: (byte 0) */
  HW(1,1)
, 0
,};
Node F0_IExtract_46defFixFun[] = {
  CAPTAG(useLabel(FN_IExtract_46defFixFun),1)
, useLabel(CF_IExtract_46defFixity)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v4913)
,};
Node FN_IExtract_46fixFun[] = {
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,3,1,ZAP_ARG_I1)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v4910: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(13),BOT(13))
, bytes2word(POP_I1,PUSH_ARG_I3,PUSH_ZAP_ARG_I2,ZAP_ARG_I3)
, bytes2word(EVAL,NEEDHEAP_I32,APPLY,1)
,	/* v4911: (byte 1) */
  bytes2word(RETURN_EVAL,UNPACK,1,PUSH_P1)
, bytes2word(0,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v4913: (byte 0) */
  HW(2,3)
, 0
,};
Node F0_IExtract_46fixFun[] = {
  CAPTAG(useLabel(FN_IExtract_46fixFun),3)
, VAPTAG(useLabel(FN_Data_46Map_46lookup))
, useLabel(CF_Prelude_46Ord_46TokenId_46TokenId)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v4920)
,};
Node FN_IExtract_46needFixity[] = {
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,10,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_I2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(5,HEAP_ARG,1,ZAP_ARG_I1)
, bytes2word(ZAP_STACK_P1,9,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_P1,8)
, bytes2word(HEAP_P1,0,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,10,HEAP_I1,HEAP_P1)
, bytes2word(11,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_P1)
, bytes2word(3,HEAP_P1,4,HEAP_P1)
, bytes2word(5,HEAP_P1,6,HEAP_P1)
, bytes2word(7,HEAP_P1,8,HEAP_P1)
, bytes2word(9,HEAP_P1,10,HEAP_OFF_N1)
, bytes2word(15,HEAP_OFF_N1,13,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,10,0)
, CONSTR(0,2,0)
, CONSTR(0,0,0)
,	/* CT_v4920: (byte 0) */
  HW(8,2)
, 0
,};
Node F0_IExtract_46needFixity[] = {
  CAPTAG(useLabel(FN_IExtract_46needFixity),2)
, CAPTAG(useLabel(FN_IExtract_46fixOne),2)
, useLabel(CF_Prelude_46Show_46Prelude_46Int)
, useLabel(CF_Prelude_46Eq_46Prelude_46Int)
, useLabel(CF_Data_46Map_46empty)
, VAPTAG(useLabel(FN_Prelude_46foldr))
, CAPTAG(useLabel(FN_IExtract_46fixFun),1)
, useLabel(F0_IExtract_46defFixFun)
, VAPTAG(useLabel(FN_Prelude_46_43_43))
,	/* ST_v4309: (byte 0) */
  bytes2word(32,97,116,32)
,	/* ST_v4655: (byte 1) */
  bytes2word(0,73,69,120)
, bytes2word(116,114,97,99)
, bytes2word(116,58,32,78)
, bytes2word(111,32,109,97)
, bytes2word(116,99,104,105)
, bytes2word(110,103,32,97)
, bytes2word(108,116,101,114)
, bytes2word(110,97,116,105)
, bytes2word(118,101,32,105)
, bytes2word(110,32,99,97)
, bytes2word(115,101,32,101)
, bytes2word(120,112,114,101)
, bytes2word(115,115,105,111)
, bytes2word(110,32,97,116)
, bytes2word(32,51,54,52)
, bytes2word(58,55,45,51)
, bytes2word(54,56,58,54)
,	/* ST_v4703: (byte 3) */
  bytes2word(50,46,0,73)
, bytes2word(69,120,116,114)
, bytes2word(97,99,116,58)
, bytes2word(32,78,111,32)
, bytes2word(109,97,116,99)
, bytes2word(104,105,110,103)
, bytes2word(32,97,108,116)
, bytes2word(101,114,110,97)
, bytes2word(116,105,118,101)
, bytes2word(32,105,110,32)
, bytes2word(99,97,115,101)
, bytes2word(32,101,120,112)
, bytes2word(114,101,115,115)
, bytes2word(105,111,110,32)
, bytes2word(97,116,32,53)
, bytes2word(53,51,58,49)
, bytes2word(51,45,53,53)
, bytes2word(51,58,55,51)
,	/* ST_v4694: (byte 2) */
  bytes2word(46,0,73,69)
, bytes2word(120,116,114,97)
, bytes2word(99,116,58,32)
, bytes2word(78,111,32,109)
, bytes2word(97,116,99,104)
, bytes2word(105,110,103,32)
, bytes2word(97,108,116,101)
, bytes2word(114,110,97,116)
, bytes2word(105,118,101,32)
, bytes2word(105,110,32,99)
, bytes2word(97,115,101,32)
, bytes2word(101,120,112,114)
, bytes2word(101,115,115,105)
, bytes2word(111,110,32,97)
, bytes2word(116,32,53,54)
, bytes2word(52,58,55,45)
, bytes2word(53,54,56,58)
,	/* ST_v4631: (byte 4) */
  bytes2word(52,52,46,0)
, bytes2word(73,69,120,116)
, bytes2word(114,97,99,116)
, bytes2word(58,32,80,97)
, bytes2word(116,116,101,114)
, bytes2word(110,32,109,97)
, bytes2word(116,99,104,32)
, bytes2word(102,97,105,108)
, bytes2word(117,114,101,32)
, bytes2word(105,110,32,102)
, bytes2word(117,110,99,116)
, bytes2word(105,111,110,32)
, bytes2word(97,116,32,51)
, bytes2word(56,50,58,55)
, bytes2word(45,51,56,53)
, bytes2word(58,55,55,46)
,	/* ST_v4398: (byte 1) */
  bytes2word(0,73,69,120)
, bytes2word(116,114,97,99)
, bytes2word(116,58,32,80)
, bytes2word(97,116,116,101)
, bytes2word(114,110,32,109)
, bytes2word(97,116,99,104)
, bytes2word(32,102,97,105)
, bytes2word(108,117,114,101)
, bytes2word(32,105,110,32)
, bytes2word(102,117,110,99)
, bytes2word(116,105,111,110)
, bytes2word(32,97,116,32)
, bytes2word(52,54,48,58)
, bytes2word(49,45,52,54)
, bytes2word(56,58,51,57)
,	/* ST_v4475: (byte 2) */
  bytes2word(46,0,73,69)
, bytes2word(120,116,114,97)
, bytes2word(99,116,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,102,117,110)
, bytes2word(99,116,105,111)
, bytes2word(110,32,97,116)
, bytes2word(32,54,51,56)
, bytes2word(58,49,45,54)
, bytes2word(55,52,58,57)
,	/* ST_v4368: (byte 2) */
  bytes2word(46,0,73,69)
, bytes2word(120,116,114,97)
, bytes2word(99,116,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,102,117,110)
, bytes2word(99,116,105,111)
, bytes2word(110,32,97,116)
, bytes2word(32,55,50,55)
, bytes2word(58,49,45,55)
, bytes2word(50,56,58,54)
,	/* ST_v4848: (byte 3) */
  bytes2word(57,46,0,73)
, bytes2word(69,120,116,114)
, bytes2word(97,99,116,58)
, bytes2word(32,80,97,116)
, bytes2word(116,101,114,110)
, bytes2word(32,109,97,116)
, bytes2word(99,104,32,102)
, bytes2word(97,105,108,117)
, bytes2word(114,101,32,105)
, bytes2word(110,32,108,97)
, bytes2word(109,98,100,97)
, bytes2word(32,97,116,32)
, bytes2word(52,57,54,58)
, bytes2word(49,49,45,53)
, bytes2word(48,55,58,51)
,	/* ST_v4311: (byte 3) */
  bytes2word(49,46,0,85)
, bytes2word(110,98,111,117)
, bytes2word(110,100,32,116)
, bytes2word(121,112,101,32)
, bytes2word(118,97,114,105)
, bytes2word(97,98,108,101)
, bytes2word(32,0,0,0)
,};
