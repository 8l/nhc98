#include "newmacros.h"
#include "runtime.h"

#define FN_Parse_46Parse_46manySepSafe_39	((void*)startLabel+12)
#define CT_v3212	((void*)startLabel+48)
#define F0_Parse_46Parse_46manySepSafe_39	((void*)startLabel+56)
#define FN_Parse_46Parse_46someSepSafe	((void*)startLabel+88)
#define CT_v3213	((void*)startLabel+112)
#define F0_Parse_46Parse_46someSepSafe	((void*)startLabel+120)
#define FN_LAMBDA3115	((void*)startLabel+152)
#define CT_v3214	((void*)startLabel+176)
#define F0_LAMBDA3115	((void*)startLabel+184)
#define FN_Parse_46Parse_46manySepSafe	((void*)startLabel+200)
#define CT_v3215	((void*)startLabel+232)
#define F0_Parse_46Parse_46manySepSafe	((void*)startLabel+240)
#define FN_Parse_46Parse_46manySafe	((void*)startLabel+264)
#define CT_v3216	((void*)startLabel+296)
#define F0_Parse_46Parse_46manySafe	((void*)startLabel+304)
#define FN_Parse_46Parse_46someSafe	((void*)startLabel+328)
#define CT_v3217	((void*)startLabel+352)
#define F0_Parse_46Parse_46someSafe	((void*)startLabel+360)
#define FN_LAMBDA3116	((void*)startLabel+392)
#define CT_v3218	((void*)startLabel+416)
#define F0_LAMBDA3116	((void*)startLabel+424)
#define FN_Parse_46Parse_46parseOpPat	((void*)startLabel+436)
#define CT_v3219	((void*)startLabel+448)
#define CF_Parse_46Parse_46parseOpPat	((void*)startLabel+456)
#define FN_Parse_46Parse_46parsePat	((void*)startLabel+472)
#define CT_v3220	((void*)startLabel+524)
#define CF_Parse_46Parse_46parsePat	((void*)startLabel+532)
#define FN_Parse_46Parse_46parsePat0	((void*)startLabel+592)
#define CT_v3221	((void*)startLabel+616)
#define CF_Parse_46Parse_46parsePat0	((void*)startLabel+624)
#define FN_Parse_46Parse_46parseFPat	((void*)startLabel+660)
#define CT_v3222	((void*)startLabel+692)
#define CF_Parse_46Parse_46parseFPat	((void*)startLabel+700)
#define FN_LAMBDA3117	((void*)startLabel+744)
#define CT_v3226	((void*)startLabel+780)
#define F0_LAMBDA3117	((void*)startLabel+788)
#define FN_Parse_46Parse_46parseAPat	((void*)startLabel+804)
#define CT_v3227	((void*)startLabel+816)
#define CF_Parse_46Parse_46parseAPat	((void*)startLabel+824)
#define FN_Parse_46Parse_46parseFieldPat	((void*)startLabel+848)
#define CT_v3228	((void*)startLabel+864)
#define CF_Parse_46Parse_46parseFieldPat	((void*)startLabel+872)
#define FN_LAMBDA3118	((void*)startLabel+896)
#define CT_v3232	((void*)startLabel+948)
#define F0_LAMBDA3118	((void*)startLabel+956)
#define FN_Parse_46Parse_46parseAPat1	((void*)startLabel+996)
#define CT_v3233	((void*)startLabel+1048)
#define F0_Parse_46Parse_46parseAPat1	((void*)startLabel+1056)
#define FN_LAMBDA3119	((void*)startLabel+1124)
#define CT_v3234	((void*)startLabel+1148)
#define F0_LAMBDA3119	((void*)startLabel+1156)
#define FN_Parse_46Parse_46parseAPat2	((void*)startLabel+1168)
#define CT_v3235	((void*)startLabel+1384)
#define CF_Parse_46Parse_46parseAPat2	((void*)startLabel+1392)
#define FN_LAMBDA3125	((void*)startLabel+1528)
#define CT_v3236	((void*)startLabel+1552)
#define F0_LAMBDA3125	((void*)startLabel+1560)
#define FN_LAMBDA3124	((void*)startLabel+1576)
#define CT_v3237	((void*)startLabel+1600)
#define F0_LAMBDA3124	((void*)startLabel+1608)
#define FN_LAMBDA3123	((void*)startLabel+1620)
#define CT_v3238	((void*)startLabel+1640)
#define F0_LAMBDA3123	((void*)startLabel+1648)
#define FN_LAMBDA3122	((void*)startLabel+1660)
#define CT_v3242	((void*)startLabel+1688)
#define F0_LAMBDA3122	((void*)startLabel+1696)
#define FN_LAMBDA3121	((void*)startLabel+1708)
#define CT_v3246	((void*)startLabel+1736)
#define F0_LAMBDA3121	((void*)startLabel+1744)
#define FN_LAMBDA3120	((void*)startLabel+1760)
#define CT_v3250	((void*)startLabel+1812)
#define F0_LAMBDA3120	((void*)startLabel+1820)
#define FN_Parse_46Parse_46parsePats	((void*)startLabel+1852)
#define CT_v3251	((void*)startLabel+1864)
#define CF_Parse_46Parse_46parsePats	((void*)startLabel+1872)
#define FN_Parse_46Parse_46parseVarsType	((void*)startLabel+1892)
#define CT_v3252	((void*)startLabel+1932)
#define CF_Parse_46Parse_46parseVarsType	((void*)startLabel+1940)
#define FN_LAMBDA3126	((void*)startLabel+1996)
#define CT_v3253	((void*)startLabel+2020)
#define F0_LAMBDA3126	((void*)startLabel+2028)
#define FN_Parse_46Parse_46optSemi	((void*)startLabel+2040)
#define CT_v3254	((void*)startLabel+2076)
#define CF_Parse_46Parse_46optSemi	((void*)startLabel+2084)
#define FN_Parse_46Parse_46parseExpType	((void*)startLabel+2112)
#define CT_v3255	((void*)startLabel+2148)
#define CF_Parse_46Parse_46parseExpType	((void*)startLabel+2156)
#define FN_LAMBDA3127	((void*)startLabel+2216)
#define CT_v3256	((void*)startLabel+2252)
#define F0_LAMBDA3127	((void*)startLabel+2260)
#define FN_Parse_46Parse_46parseValdef	((void*)startLabel+2280)
#define CT_v3257	((void*)startLabel+2368)
#define CF_Parse_46Parse_46parseValdef	((void*)startLabel+2376)
#define FN_Parse_46Parse_46parseWhere	((void*)startLabel+2448)
#define CT_v3258	((void*)startLabel+2508)
#define CF_Parse_46Parse_46parseWhere	((void*)startLabel+2516)
#define FN_Parse_46Parse_46parseDecls	((void*)startLabel+2560)
#define CT_v3259	((void*)startLabel+2580)
#define CF_Parse_46Parse_46parseDecls	((void*)startLabel+2588)
#define FN_LAMBDA3128	((void*)startLabel+2620)
#define CT_v3260	((void*)startLabel+2640)
#define F0_LAMBDA3128	((void*)startLabel+2648)
#define FN_Parse_46Parse_46parseDecl	((void*)startLabel+2660)
#define CT_v3261	((void*)startLabel+2688)
#define CF_Parse_46Parse_46parseDecl	((void*)startLabel+2696)
#define FN_LAMBDA3129	((void*)startLabel+2732)
#define CT_v3262	((void*)startLabel+2752)
#define F0_LAMBDA3129	((void*)startLabel+2760)
#define FN_Parse_46Parse_46parseExp	((void*)startLabel+2772)
#define CT_v3263	((void*)startLabel+2784)
#define CF_Parse_46Parse_46parseExp	((void*)startLabel+2792)
#define FN_Parse_46Parse_46parseExp0	((void*)startLabel+2816)
#define CT_v3264	((void*)startLabel+2840)
#define CF_Parse_46Parse_46parseExp0	((void*)startLabel+2848)
#define FN_Parse_46Parse_46parseStmt	((void*)startLabel+2884)
#define CT_v3265	((void*)startLabel+2952)
#define CF_Parse_46Parse_46parseStmt	((void*)startLabel+2960)
#define FN_LAMBDA3137	((void*)startLabel+3020)
#define CT_v3266	((void*)startLabel+3040)
#define F0_LAMBDA3137	((void*)startLabel+3048)
#define FN_LAMBDA3136	((void*)startLabel+3064)
#define CT_v3267	((void*)startLabel+3088)
#define F0_LAMBDA3136	((void*)startLabel+3096)
#define FN_LAMBDA3135	((void*)startLabel+3108)
#define CT_v3268	((void*)startLabel+3124)
#define F0_LAMBDA3135	((void*)startLabel+3132)
#define FN_LAMBDA3134	((void*)startLabel+3156)
#define CT_v3269	((void*)startLabel+3172)
#define F0_LAMBDA3134	((void*)startLabel+3180)
#define FN_LAMBDA3133	((void*)startLabel+3204)
#define CT_v3270	((void*)startLabel+3220)
#define F0_LAMBDA3133	((void*)startLabel+3228)
#define FN_LAMBDA3132	((void*)startLabel+3256)
#define CT_v3271	((void*)startLabel+3300)
#define F0_LAMBDA3132	((void*)startLabel+3308)
#define FN_LAMBDA3131	((void*)startLabel+3344)
#define CT_v3272	((void*)startLabel+3360)
#define F0_LAMBDA3131	((void*)startLabel+3368)
#define FN_LAMBDA3130	((void*)startLabel+3396)
#define CT_v3273	((void*)startLabel+3440)
#define F0_LAMBDA3130	((void*)startLabel+3448)
#define FN_Parse_46Parse_46parseExp10	((void*)startLabel+3476)
#define CT_v3274	((void*)startLabel+3604)
#define CF_Parse_46Parse_46parseExp10	((void*)startLabel+3612)
#define FN_LAMBDA3142	((void*)startLabel+3652)
#define CT_v3275	((void*)startLabel+3724)
#define F0_LAMBDA3142	((void*)startLabel+3732)
#define FN_LAMBDA3141	((void*)startLabel+3796)
#define CT_v3276	((void*)startLabel+3856)
#define F0_LAMBDA3141	((void*)startLabel+3864)
#define FN_LAMBDA3140	((void*)startLabel+3900)
#define CT_v3277	((void*)startLabel+3940)
#define F0_LAMBDA3140	((void*)startLabel+3948)
#define FN_LAMBDA3139	((void*)startLabel+4000)
#define CT_v3278	((void*)startLabel+4060)
#define F0_LAMBDA3139	((void*)startLabel+4068)
#define FN_LAMBDA3138	((void*)startLabel+4120)
#define CT_v3279	((void*)startLabel+4148)
#define F0_LAMBDA3138	((void*)startLabel+4156)
#define FN_Parse_46Parse_46parseFExp	((void*)startLabel+4196)
#define CT_v3280	((void*)startLabel+4212)
#define CF_Parse_46Parse_46parseFExp	((void*)startLabel+4220)
#define FN_Parse_46Parse_46parseAExpR1	((void*)startLabel+4248)
#define CT_v3281	((void*)startLabel+4260)
#define CF_Parse_46Parse_46parseAExpR1	((void*)startLabel+4268)
#define FN_Parse_46Parse_46parseAExpR	((void*)startLabel+4292)
#define CT_v3282	((void*)startLabel+4344)
#define F0_Parse_46Parse_46parseAExpR	((void*)startLabel+4352)
#define FN_LAMBDA3143	((void*)startLabel+4420)
#define CT_v3283	((void*)startLabel+4444)
#define F0_LAMBDA3143	((void*)startLabel+4452)
#define FN_Parse_46Parse_46parseAExp	((void*)startLabel+4464)
#define CT_v3284	((void*)startLabel+4572)
#define CF_Parse_46Parse_46parseAExp	((void*)startLabel+4580)
#define FN_LAMBDA3146	((void*)startLabel+4644)
#define CT_v3285	((void*)startLabel+4668)
#define F0_LAMBDA3146	((void*)startLabel+4676)
#define FN_LAMBDA3145	((void*)startLabel+4688)
#define CT_v3286	((void*)startLabel+4716)
#define F0_LAMBDA3145	((void*)startLabel+4724)
#define FN_LAMBDA3144	((void*)startLabel+4764)
#define CT_v3287	((void*)startLabel+4776)
#define F0_LAMBDA3144	((void*)startLabel+4784)
#define FN_Parse_46Parse_46parseFieldExp	((void*)startLabel+4800)
#define CT_v3288	((void*)startLabel+4816)
#define CF_Parse_46Parse_46parseFieldExp	((void*)startLabel+4824)
#define FN_LAMBDA3147	((void*)startLabel+4848)
#define CT_v3292	((void*)startLabel+4900)
#define F0_LAMBDA3147	((void*)startLabel+4908)
#define FN_Parse_46Parse_46parseBrackExp0	((void*)startLabel+4948)
#define CT_v3293	((void*)startLabel+4992)
#define F0_Parse_46Parse_46parseBrackExp0	((void*)startLabel+5000)
#define FN_Parse_46Parse_46parseBrackExp1	((void*)startLabel+5040)
#define CT_v3294	((void*)startLabel+5160)
#define F0_Parse_46Parse_46parseBrackExp1	((void*)startLabel+5168)
#define FN_LAMBDA3151	((void*)startLabel+5260)
#define CT_v3295	((void*)startLabel+5292)
#define F0_LAMBDA3151	((void*)startLabel+5300)
#define FN_LAMBDA3150	((void*)startLabel+5324)
#define CT_v3296	((void*)startLabel+5340)
#define F0_LAMBDA3150	((void*)startLabel+5348)
#define FN_LAMBDA3149	((void*)startLabel+5368)
#define CT_v3297	((void*)startLabel+5400)
#define F0_LAMBDA3149	((void*)startLabel+5408)
#define FN_LAMBDA3148	((void*)startLabel+5428)
#define CT_v3298	((void*)startLabel+5460)
#define F0_LAMBDA3148	((void*)startLabel+5468)
#define FN_Parse_46Parse_46parseBrackExp2	((void*)startLabel+5484)
#define CT_v3299	((void*)startLabel+5584)
#define F0_Parse_46Parse_46parseBrackExp2	((void*)startLabel+5592)
#define FN_LAMBDA3155	((void*)startLabel+5664)
#define CT_v3300	((void*)startLabel+5700)
#define F0_LAMBDA3155	((void*)startLabel+5708)
#define FN_LAMBDA3154	((void*)startLabel+5732)
#define CT_v3301	((void*)startLabel+5768)
#define F0_LAMBDA3154	((void*)startLabel+5776)
#define FN_LAMBDA3153	((void*)startLabel+5800)
#define CT_v3302	((void*)startLabel+5832)
#define F0_LAMBDA3153	((void*)startLabel+5840)
#define FN_LAMBDA3152	((void*)startLabel+5864)
#define CT_v3303	((void*)startLabel+5904)
#define F0_LAMBDA3152	((void*)startLabel+5912)
#define FN_Parse_46Parse_46parseQual	((void*)startLabel+5928)
#define CT_v3304	((void*)startLabel+5996)
#define CF_Parse_46Parse_46parseQual	((void*)startLabel+6004)
#define FN_LAMBDA3163	((void*)startLabel+6064)
#define CT_v3305	((void*)startLabel+6084)
#define F0_LAMBDA3163	((void*)startLabel+6092)
#define FN_LAMBDA3162	((void*)startLabel+6108)
#define CT_v3306	((void*)startLabel+6132)
#define F0_LAMBDA3162	((void*)startLabel+6140)
#define FN_LAMBDA3161	((void*)startLabel+6152)
#define CT_v3307	((void*)startLabel+6168)
#define F0_LAMBDA3161	((void*)startLabel+6176)
#define FN_LAMBDA3160	((void*)startLabel+6200)
#define CT_v3308	((void*)startLabel+6216)
#define F0_LAMBDA3160	((void*)startLabel+6224)
#define FN_LAMBDA3159	((void*)startLabel+6248)
#define CT_v3309	((void*)startLabel+6264)
#define F0_LAMBDA3159	((void*)startLabel+6272)
#define FN_LAMBDA3158	((void*)startLabel+6300)
#define CT_v3310	((void*)startLabel+6344)
#define F0_LAMBDA3158	((void*)startLabel+6352)
#define FN_LAMBDA3157	((void*)startLabel+6388)
#define CT_v3311	((void*)startLabel+6404)
#define F0_LAMBDA3157	((void*)startLabel+6412)
#define FN_LAMBDA3156	((void*)startLabel+6440)
#define CT_v3312	((void*)startLabel+6476)
#define F0_LAMBDA3156	((void*)startLabel+6484)
#define FN_Parse_46Parse_46parseAlt	((void*)startLabel+6504)
#define CT_v3313	((void*)startLabel+6536)
#define F0_Parse_46Parse_46parseAlt	((void*)startLabel+6544)
#define FN_LAMBDA3164	((void*)startLabel+6588)
#define CT_v3314	((void*)startLabel+6612)
#define F0_LAMBDA3164	((void*)startLabel+6620)
#define FN_Parse_46Parse_46parseRhs	((void*)startLabel+6632)
#define CT_v3315	((void*)startLabel+6676)
#define F0_Parse_46Parse_46parseRhs	((void*)startLabel+6684)
#define FN_LAMBDA3166	((void*)startLabel+6732)
#define CT_v3316	((void*)startLabel+6752)
#define F0_LAMBDA3166	((void*)startLabel+6760)
#define FN_LAMBDA3165	((void*)startLabel+6772)
#define CT_v3317	((void*)startLabel+6792)
#define F0_LAMBDA3165	((void*)startLabel+6800)
#define FN_Parse_46Parse_46parsePatGdExp	((void*)startLabel+6812)
#define CT_v3318	((void*)startLabel+6848)
#define F0_Parse_46Parse_46parsePatGdExp	((void*)startLabel+6856)
#define FN_Parse_46Parse_46parseValdefs	((void*)startLabel+6904)
#define CT_v3319	((void*)startLabel+6936)
#define CF_Parse_46Parse_46parseValdefs	((void*)startLabel+6944)
#define FN_LAMBDA3167	((void*)startLabel+6988)
#define CT_v3320	((void*)startLabel+7008)
#define F0_LAMBDA3167	((void*)startLabel+7016)
#define FN_Parse_46Parse_46parseCDecl	((void*)startLabel+7028)
#define CT_v3321	((void*)startLabel+7056)
#define CF_Parse_46Parse_46parseCDecl	((void*)startLabel+7064)
#define FN_LAMBDA3168	((void*)startLabel+7100)
#define CT_v3322	((void*)startLabel+7120)
#define F0_LAMBDA3168	((void*)startLabel+7128)
#define FN_Parse_46Parse_46parseCDecls	((void*)startLabel+7140)
#define CT_v3323	((void*)startLabel+7160)
#define CF_Parse_46Parse_46parseCDecls	((void*)startLabel+7168)
#define FN_LAMBDA3169	((void*)startLabel+7200)
#define CT_v3324	((void*)startLabel+7220)
#define F0_LAMBDA3169	((void*)startLabel+7228)
#define FN_Parse_46Parse_46parseForeign	((void*)startLabel+7240)
#define CT_v3325	((void*)startLabel+7764)
#define CF_Parse_46Parse_46parseForeign	((void*)startLabel+7772)
#define FN_LAMBDA3187	((void*)startLabel+7968)
#define v3344	((void*)startLabel+7996)
#define v3337	((void*)startLabel+8000)
#define v3334	((void*)startLabel+8086)
#define v3330	((void*)startLabel+8091)
#define v3326	((void*)startLabel+8096)
#define CT_v3347	((void*)startLabel+8120)
#define F0_LAMBDA3187	((void*)startLabel+8128)
#define FN_LAMBDA3186	((void*)startLabel+8196)
#define CT_v3349	((void*)startLabel+8216)
#define CF_LAMBDA3186	((void*)startLabel+8224)
#define FN_LAMBDA3185	((void*)startLabel+8236)
#define CT_v3351	((void*)startLabel+8256)
#define CF_LAMBDA3185	((void*)startLabel+8264)
#define FN_LAMBDA3184	((void*)startLabel+8284)
#define v3368	((void*)startLabel+8312)
#define v3363	((void*)startLabel+8316)
#define v3360	((void*)startLabel+8346)
#define v3356	((void*)startLabel+8351)
#define v3352	((void*)startLabel+8356)
#define CT_v3370	((void*)startLabel+8376)
#define F0_LAMBDA3184	((void*)startLabel+8384)
#define FN_LAMBDA3183	((void*)startLabel+8412)
#define CT_v3372	((void*)startLabel+8432)
#define CF_LAMBDA3183	((void*)startLabel+8440)
#define FN_LAMBDA3182	((void*)startLabel+8464)
#define v3394	((void*)startLabel+8496)
#define v3388	((void*)startLabel+8500)
#define v3385	((void*)startLabel+8545)
#define v3381	((void*)startLabel+8550)
#define v3377	((void*)startLabel+8555)
#define v3373	((void*)startLabel+8560)
#define CT_v3396	((void*)startLabel+8584)
#define F0_LAMBDA3182	((void*)startLabel+8592)
#define FN_LAMBDA3181	((void*)startLabel+8632)
#define CT_v3398	((void*)startLabel+8652)
#define CF_LAMBDA3181	((void*)startLabel+8660)
#define FN_LAMBDA3180	((void*)startLabel+8672)
#define CT_v3402	((void*)startLabel+8704)
#define F0_LAMBDA3180	((void*)startLabel+8712)
#define FN_LAMBDA3179	((void*)startLabel+8728)
#define CT_v3404	((void*)startLabel+8748)
#define CF_LAMBDA3179	((void*)startLabel+8756)
#define FN_LAMBDA3178	((void*)startLabel+8768)
#define CT_v3406	((void*)startLabel+8788)
#define CF_LAMBDA3178	((void*)startLabel+8796)
#define FN_LAMBDA3177	((void*)startLabel+8808)
#define CT_v3408	((void*)startLabel+8828)
#define CF_LAMBDA3177	((void*)startLabel+8836)
#define FN_LAMBDA3176	((void*)startLabel+8848)
#define CT_v3410	((void*)startLabel+8868)
#define CF_LAMBDA3176	((void*)startLabel+8876)
#define FN_LAMBDA3175	((void*)startLabel+8888)
#define CT_v3412	((void*)startLabel+8908)
#define CF_LAMBDA3175	((void*)startLabel+8916)
#define FN_LAMBDA3174	((void*)startLabel+8928)
#define CT_v3414	((void*)startLabel+8948)
#define CF_LAMBDA3174	((void*)startLabel+8956)
#define FN_LAMBDA3173	((void*)startLabel+8968)
#define CT_v3416	((void*)startLabel+8988)
#define CF_LAMBDA3173	((void*)startLabel+8996)
#define FN_LAMBDA3172	((void*)startLabel+9008)
#define CT_v3418	((void*)startLabel+9028)
#define CF_LAMBDA3172	((void*)startLabel+9036)
#define FN_LAMBDA3171	((void*)startLabel+9048)
#define CT_v3420	((void*)startLabel+9068)
#define CF_LAMBDA3171	((void*)startLabel+9076)
#define FN_Parse_46Parse_46Prelude_46559_46is	((void*)startLabel+9088)
#define CT_v3421	((void*)startLabel+9112)
#define F0_Parse_46Parse_46Prelude_46559_46is	((void*)startLabel+9120)
#define FN_Parse_46Parse_46Prelude_46562_46calcArity	((void*)startLabel+9144)
#define v3430	((void*)startLabel+9158)
#define v3425	((void*)startLabel+9162)
#define v3426	((void*)startLabel+9218)
#define v3422	((void*)startLabel+9223)
#define v3428	((void*)startLabel+9242)
#define CT_v3431	((void*)startLabel+9272)
#define F0_Parse_46Parse_46Prelude_46562_46calcArity	((void*)startLabel+9280)
#define FN_LAMBDA3170	((void*)startLabel+9336)
#define CT_v3433	((void*)startLabel+9356)
#define CF_LAMBDA3170	((void*)startLabel+9364)
#define FN_Parse_46Parse_46parseFunDep	((void*)startLabel+9376)
#define CT_v3434	((void*)startLabel+9416)
#define CF_Parse_46Parse_46parseFunDep	((void*)startLabel+9424)
#define FN_LAMBDA3188	((void*)startLabel+9476)
#define CT_v3435	((void*)startLabel+9500)
#define F0_LAMBDA3188	((void*)startLabel+9508)
#define FN_Parse_46Parse_46parseFunDeps	((void*)startLabel+9520)
#define CT_v3436	((void*)startLabel+9560)
#define CF_Parse_46Parse_46parseFunDeps	((void*)startLabel+9568)
#define FN_Parse_46Parse_46parseTopDecl	((void*)startLabel+9608)
#define CT_v3437	((void*)startLabel+9808)
#define CF_Parse_46Parse_46parseTopDecl	((void*)startLabel+9816)
#define FN_LAMBDA3206	((void*)startLabel+9920)
#define CT_v3438	((void*)startLabel+9944)
#define F0_LAMBDA3206	((void*)startLabel+9952)
#define FN_LAMBDA3205	((void*)startLabel+9964)
#define CT_v3439	((void*)startLabel+10012)
#define F0_LAMBDA3205	((void*)startLabel+10020)
#define FN_LAMBDA3204	((void*)startLabel+10080)
#define CT_v3440	((void*)startLabel+10116)
#define F0_LAMBDA3204	((void*)startLabel+10124)
#define FN_LAMBDA3203	((void*)startLabel+10136)
#define CT_v3441	((void*)startLabel+10156)
#define F0_LAMBDA3203	((void*)startLabel+10164)
#define FN_LAMBDA3202	((void*)startLabel+10176)
#define CT_v3442	((void*)startLabel+10268)
#define F0_LAMBDA3202	((void*)startLabel+10276)
#define FN_LAMBDA3201	((void*)startLabel+10352)
#define CT_v3446	((void*)startLabel+10372)
#define F0_LAMBDA3201	((void*)startLabel+10380)
#define FN_LAMBDA3200	((void*)startLabel+10404)
#define CT_v3447	((void*)startLabel+10432)
#define F0_LAMBDA3200	((void*)startLabel+10440)
#define FN_LAMBDA3199	((void*)startLabel+10452)
#define CT_v3448	((void*)startLabel+10556)
#define F0_LAMBDA3199	((void*)startLabel+10564)
#define FN_LAMBDA3198	((void*)startLabel+10644)
#define CT_v3449	((void*)startLabel+10752)
#define F0_LAMBDA3198	((void*)startLabel+10760)
#define FN_LAMBDA3197	((void*)startLabel+10860)
#define CT_v3450	((void*)startLabel+10908)
#define F0_LAMBDA3197	((void*)startLabel+10916)
#define FN_LAMBDA3196	((void*)startLabel+10928)
#define CT_v3451	((void*)startLabel+10948)
#define F0_LAMBDA3196	((void*)startLabel+10956)
#define FN_LAMBDA3195	((void*)startLabel+10976)
#define CT_v3452	((void*)startLabel+11004)
#define F0_LAMBDA3195	((void*)startLabel+11012)
#define FN_LAMBDA3194	((void*)startLabel+11028)
#define CT_v3456	((void*)startLabel+11056)
#define F0_LAMBDA3194	((void*)startLabel+11064)
#define FN_LAMBDA3193	((void*)startLabel+11076)
#define CT_v3457	((void*)startLabel+11140)
#define F0_LAMBDA3193	((void*)startLabel+11148)
#define FN_LAMBDA3192	((void*)startLabel+11212)
#define CT_v3458	((void*)startLabel+11236)
#define F0_LAMBDA3192	((void*)startLabel+11244)
#define FN_LAMBDA3191	((void*)startLabel+11264)
#define CT_v3459	((void*)startLabel+11292)
#define F0_LAMBDA3191	((void*)startLabel+11300)
#define FN_LAMBDA3190	((void*)startLabel+11312)
#define CT_v3460	((void*)startLabel+11340)
#define F0_LAMBDA3190	((void*)startLabel+11348)
#define FN_LAMBDA3189	((void*)startLabel+11392)
#define CT_v3461	((void*)startLabel+11416)
#define F0_LAMBDA3189	((void*)startLabel+11424)
#define FN_Parse_46Parse_46parseTopDecls	((void*)startLabel+11436)
#define CT_v3462	((void*)startLabel+11468)
#define CF_Parse_46Parse_46parseTopDecls	((void*)startLabel+11476)
#define FN_LAMBDA3207	((void*)startLabel+11520)
#define CT_v3463	((void*)startLabel+11540)
#define F0_LAMBDA3207	((void*)startLabel+11548)
#define FN_Parse_46Parse_46parseModule	((void*)startLabel+11560)
#define CT_v3464	((void*)startLabel+11652)
#define CF_Parse_46Parse_46parseModule	((void*)startLabel+11660)
#define FN_LAMBDA3208	((void*)startLabel+11744)
#define CT_v3465	((void*)startLabel+11772)
#define F0_LAMBDA3208	((void*)startLabel+11780)
#define CT_v3466	((void*)startLabel+11804)
#define ST_v3419	((void*)startLabel+11828)
#define ST_v3350	((void*)startLabel+11829)
#define ST_v3432	((void*)startLabel+11860)
#define ST_v3397	((void*)startLabel+11924)
#define ST_v3371	((void*)startLabel+11987)
#define ST_v3348	((void*)startLabel+12049)
#define ST_v3409	((void*)startLabel+12112)
#define ST_v3407	((void*)startLabel+12120)
#define ST_v3405	((void*)startLabel+12130)
#define ST_v3413	((void*)startLabel+12137)
#define ST_v3411	((void*)startLabel+12147)
#define ST_v3403	((void*)startLabel+12159)
#define ST_v3415	((void*)startLabel+12163)
#define ST_v3417	((void*)startLabel+12173)
extern Node FN_Parse_46ParseLib_46revChk[];
extern Node FN_Parse_46ParseCore_46parse[];
extern Node FN_Parse_46ParseCore_46orelse[];
extern Node FN_Parse_46ParseLib_46parseAp[];
extern Node FN_Parse_46ParseLib_46apCut[];
extern Node FN_Parse_46ParseCore_46ap[];
extern Node CF_Parse_46ParseLex_46anyop[];
extern Node F0_MkSyntax_46mkPatNplusK[];
extern Node CF_Parse_46ParseLex_46varid[];
extern Node CF_TokenId_46t_95nplusk[];
extern Node FN_Parse_46ParseLib_46literal[];
extern Node CF_Prelude_46Eq_46Parse_46Lex_46Lex[];
extern Node CF_Prelude_46Show_46Parse_46Lex_46Lex[];
extern Node FN_Parse_46ParseCore_46chk[];
extern Node CF_Parse_46ParseLex_46integer[];
extern Node F0_MkSyntax_46mkInfixList[];
extern Node CF_Parse_46ParseLex_46conid[];
extern Node FN_Parse_46ParseLib_46some[];
extern Node FN_MkSyntax_46mkAppExp[];
extern Node FN_Parse_46ParseCore_46into[];
extern Node FN_MkSyntax_46mkFieldExp[];
extern Node FN_Parse_46ParseLib_46parseChk[];
extern Node CF_Parse_46ParseLex_46equal[];
extern Node CF_Parse_46ParseLex_46lcurl[];
extern Node CF_Parse_46ParseLex_46comma[];
extern Node CF_Parse_46ParseLib_46rcurl[];
extern Node FN_Parse_46ParseLex_46lit[];
extern Node FN_Parse_46ParseLib_46revAp[];
extern Node CF_Parse_46ParseLex_46aconid[];
extern Node F0_MkSyntax_46mkParExp[];
extern Node CF_Parse_46ParseLex_46lpar[];
extern Node CF_Parse_46ParseLex_46rpar[];
extern Node F0_MkSyntax_46mkExpList[];
extern Node CF_Parse_46ParseLex_46lbrack[];
extern Node CF_Parse_46ParseLex_46rbrack[];
extern Node FN_Prelude_46uncurry[];
extern Node CF_Parse_46ParseLex_46char[];
extern Node CF_Parse_46ParseLex_46string[];
extern Node CF_Parse_46ParseLex_46rational[];
extern Node CF_SyntaxPos_46HasPos_46Syntax_46Exp[];
extern Node FN_SyntaxPos_46getPos[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Util_46Extra_46mergePos[];
extern Node FN_Prelude_46seq[];
extern Node FN_Parse_46ParseLib_46someSep[];
extern Node CF_Parse_46ParseLex_46coloncolon[];
extern Node CF_Parse_46Parse2_46parseContexts[];
extern Node CF_Parse_46Parse2_46parseType[];
extern Node CF_Parse_46ParseLex_46semi[];
extern Node F0_Prelude_46id[];
extern Node FN_SyntaxPos_46HasPos_46Syntax_46Type_46getPos[];
extern Node F0_MkSyntax_46mkDeclPat[];
extern Node F0_MkSyntax_46mkDeclFun[];
extern Node F0_MkSyntax_46mkDeclPatFun[];
extern Node FN_Parse_46ParseLib_46manysSep[];
extern Node CF_Parse_46Parse2_46parseFixDecl[];
extern Node CF_Parse_46ParseLex_46larrow[];
extern Node FN_SyntaxPos_46HasPos_46Syntax_46Decls_46getPos[];
extern Node FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos[];
extern Node FN_Parse_46ParseLib_46cases[];
extern Node FN_MkSyntax_46mkCase[];
extern Node CF_Parse_46ParseLex_46rarrow[];
extern Node FN_Parse_46ParseLib_46somesSep[];
extern Node FN_MkSyntax_46mkIf[];
extern Node FN_MkSyntax_46mkDo[];
extern Node FN_MkSyntax_46mkLet[];
extern Node FN_MkSyntax_46mkLambda[];
extern Node F0_MkSyntax_46mkAppExp[];
extern Node FN_Parse_46ParseLib_46manySep[];
extern Node CF_Parse_46ParseLex_46aanyid[];
extern Node FN_MkSyntax_46mkParExp[];
extern Node FN_MkSyntax_46mkExpList[];
extern Node CF_Parse_46ParseLex_46dotdot[];
extern Node CF_Parse_46ParseLex_46pipe[];
extern Node FN_MkSyntax_46mkSweetListEnum[];
extern Node FN_MkSyntax_46mkSweetListComp[];
extern Node F0_Util_46Extra_46pair[];
extern Node CF_Parse_46ParseLex_46k_95unsafe[];
extern Node CF_Parse_46ParseLex_46k_95safe[];
extern Node CF_Parse_46ParseLex_46k_95ccall[];
extern Node CF_Parse_46ParseLex_46k_95cast[];
extern Node CF_Parse_46ParseLex_46k_95noproto[];
extern Node CF_Parse_46ParseLex_46k_95haskellcall[];
extern Node CF_Parse_46ParseLex_46k_95stdcall[];
extern Node CF_Parse_46ParseLex_46k_95primitive[];
extern Node CF_Parse_46ParseLex_46k_95fastccall[];
extern Node CF_Parse_46ParseLex_46k_95faststdcall[];
extern Node CF_Parse_46ParseLex_46k_95builtin[];
extern Node CF_Parse_46ParseLex_46k_95cplusplus[];
extern Node CF_Parse_46ParseLex_46k_95dotnet[];
extern Node CF_Parse_46ParseLex_46k_95jvm[];
extern Node CF_Parse_46ParseLex_46k_95import[];
extern Node CF_Parse_46ParseLex_46k_95export[];
extern Node CF_Parse_46ParseLex_46k_95foreign[];
extern Node CF_SyntaxPos_46HasPos_46Syntax_46Type[];
extern Node FN_Util_46Extra_46strPos[];
extern Node FN_Prelude_46_43_43[];
extern Node FN_Util_46Extra_46strace[];
extern Node FN_NHC_46Internal_46_95apply2[];
extern Node CF_Prelude_46Num_46Prelude_46Int[];
extern Node FN_Prelude_46_36[];
extern Node FN_NHC_46Internal_46_95patternMatchFail[];
extern Node FN_Prelude_46Show_46TokenId_46TokenId_46show[];
extern Node CF_Util_46Extra_46noPos[];
extern Node FN_Prelude_46Eq_46TokenId_46TokenId_46_61_61[];
extern Node CF_TokenId_46t_95Arrow[];
extern Node FN_Prelude_46fromInteger[];
extern Node FN_Prelude_46_33_33[];
extern Node FN_Prelude_46_43[];
extern Node CF_Prelude_46otherwise[];
extern Node FN_Prelude_46map[];
extern Node F0_Prelude_46snd[];
extern Node CF_Parse_46ParseLex_46avarid[];
extern Node CF_Parse_46ParseLex_46intPrim[];
extern Node CF_Parse_46Parse2_46parseInst[];
extern Node F0_MkSyntax_46mkDeclClass[];
extern Node FN_Prelude_46_46[];
extern Node CF_Parse_46ParseLex_46unboxed[];
extern Node CF_Parse_46Parse2_46parseSimple[];
extern Node CF_Parse_46Parse2_46parseConstr[];
extern Node CF_Parse_46Parse2_46parseDeriving[];
extern Node FN_Prelude_46flip[];
extern Node CF_Parse_46Parse2_46bigModId[];
extern Node CF_Parse_46Parse2_46parseExports[];
extern Node CF_Parse_46Parse2_46parseImpDecls[];
extern Node CF_Parse_46Parse2_46parseFixDecls[];
extern Node FN_Parse_46ParseLib_46chkCut[];
extern Node CF_Parse_46ParseLex_46eof[];

static Node startLabel[] = {
  bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3212)
,	/* FN_Parse_46Parse_46manySepSafe_39: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_CVAL_I4,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3212: (byte 0) */
  HW(4,2)
, 0
,	/* F0_Parse_46Parse_46manySepSafe_39: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46manySepSafe_39),2)
, VAPTAG(useLabel(FN_Parse_46Parse_46someSepSafe))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3213)
,	/* FN_Parse_46Parse_46someSepSafe: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,2,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG_ARG,1,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v3213: (byte 0) */
  HW(4,2)
, 0
,	/* F0_Parse_46Parse_46someSepSafe: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46someSepSafe),2)
, CAPTAG(useLabel(FN_LAMBDA3115),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46Parse_46manySepSafe_39))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3214)
,	/* FN_LAMBDA3115: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3214: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3115: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3115),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3215)
,	/* FN_Parse_46Parse_46manySepSafe: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3215: (byte 0) */
  HW(3,2)
, 0
,	/* F0_Parse_46Parse_46manySepSafe: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46manySepSafe),2)
, VAPTAG(useLabel(FN_Parse_46Parse_46someSepSafe))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3216)
,	/* FN_Parse_46Parse_46manySafe: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3216: (byte 0) */
  HW(3,1)
, 0
,	/* F0_Parse_46Parse_46manySafe: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46manySafe),1)
, VAPTAG(useLabel(FN_Parse_46Parse_46someSafe))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3217)
,	/* FN_Parse_46Parse_46someSafe: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,1,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3217: (byte 0) */
  HW(4,1)
, 0
,	/* F0_Parse_46Parse_46someSafe: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46someSafe),1)
, CAPTAG(useLabel(FN_LAMBDA3116),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46Parse_46manySafe))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3218)
,	/* FN_LAMBDA3116: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3218: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3116: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3116),2)
, bytes2word(0,0,0,0)
, useLabel(CT_v3219)
,	/* FN_Parse_46Parse_46parseOpPat: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_CVAL_P1,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3219: (byte 0) */
  HW(1,0)
, 0
,	/* CF_Parse_46Parse_46parseOpPat: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseOpPat))
, useLabel(CF_Parse_46ParseLex_46anyop)
, bytes2word(0,0,0,0)
, useLabel(CT_v3220)
,	/* FN_Parse_46Parse_46parsePat: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,10)
, bytes2word(HEAP_OFF_N1,6,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,12)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(28,1,0)
,	/* CT_v3220: (byte 0) */
  HW(12,0)
, 0
,	/* CF_Parse_46Parse_46parsePat: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parsePat))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(F0_MkSyntax_46mkPatNplusK)
, useLabel(CF_Parse_46ParseLex_46varid)
, useLabel(CF_TokenId_46t_95nplusk)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46literal))
, useLabel(CF_Prelude_46Eq_46Parse_46Lex_46Lex)
, useLabel(CF_Prelude_46Show_46Parse_46Lex_46Lex)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46ParseLex_46integer)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, useLabel(CF_Parse_46Parse_46parsePat0)
, bytes2word(0,0,0,0)
, useLabel(CT_v3221)
,	/* FN_Parse_46Parse_46parsePat0: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3221: (byte 0) */
  HW(6,0)
, 0
,	/* CF_Parse_46Parse_46parsePat0: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parsePat0))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, useLabel(CF_Parse_46Parse_46parseOpPat)
, useLabel(CF_Parse_46Parse_46parseFPat)
, VAPTAG(useLabel(FN_Parse_46Parse_46someSafe))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(F0_MkSyntax_46mkInfixList)
, bytes2word(0,0,0,0)
, useLabel(CT_v3222)
,	/* FN_Parse_46Parse_46parseFPat: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,7,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3222: (byte 0) */
  HW(7,0)
, 0
,	/* CF_Parse_46Parse_46parseFPat: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseFPat))
, CAPTAG(useLabel(FN_LAMBDA3117),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46conid)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, useLabel(CF_Parse_46Parse_46parseAPat)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3226)
,	/* FN_LAMBDA3117: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_P1,0,HEAP_I1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I3,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(15,2,0)
,	/* CT_v3226: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA3117: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3117),2)
, VAPTAG(useLabel(FN_MkSyntax_46mkAppExp))
, bytes2word(0,0,0,0)
, useLabel(CT_v3227)
,	/* FN_Parse_46Parse_46parseAPat: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3227: (byte 0) */
  HW(3,0)
, 0
,	/* CF_Parse_46Parse_46parseAPat: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseAPat))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46Parse_46parseAPat2)
, useLabel(F0_Parse_46Parse_46parseAPat1)
, bytes2word(0,0,0,0)
, useLabel(CT_v3228)
,	/* FN_Parse_46Parse_46parseFieldPat: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3228: (byte 0) */
  HW(3,0)
, 0
,	/* CF_Parse_46Parse_46parseFieldPat: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseFieldPat))
, CAPTAG(useLabel(FN_LAMBDA3118),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46ParseLex_46varid)
, bytes2word(1,0,0,1)
, useLabel(CT_v3232)
,	/* FN_LAMBDA3118: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_P1)
, bytes2word(0,HEAP_I1,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,0)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3232: (byte 0) */
  HW(7,1)
, 0
,	/* F0_LAMBDA3118: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3118),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkFieldExp),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46equal)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse_46parsePat)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3233)
,	/* FN_Parse_46Parse_46parseAPat1: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,13)
, bytes2word(HEAP_CVAL_P1,14,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,15,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3233: (byte 0) */
  HW(13,1)
, 0
,	/* F0_Parse_46Parse_46parseAPat1: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parseAPat1),1)
, CAPTAG(useLabel(FN_LAMBDA3119),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, VAPTAG(useLabel(FN_Parse_46Parse_46manySepSafe))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse_46parseFieldPat)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLib_46rcurl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(F0_Parse_46Parse_46parseAPat1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3234)
,	/* FN_LAMBDA3119: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(12,2,0)
,	/* CT_v3234: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3119: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3119),2)
, bytes2word(0,0,0,0)
, useLabel(CT_v3235)
,	/* FN_Parse_46Parse_46parseAPat2: (byte 0) */
  bytes2word(NEEDHEAP_P1,98,HEAP_CVAL_I3,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(11,HEAP_CVAL_P1,12,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,13,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,16,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_I4,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,14)
, bytes2word(HEAP_CVAL_P1,17,HEAP_CVAL_P1,18)
, bytes2word(HEAP_CVAL_P1,19,HEAP_CVAL_P1,20)
, bytes2word(HEAP_CVAL_P1,21,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,22,HEAP_CVAL_P1,14)
, bytes2word(HEAP_CVAL_P1,23,HEAP_CVAL_P1,24)
, bytes2word(HEAP_CVAL_P1,19,HEAP_CVAL_P1,20)
, bytes2word(HEAP_CVAL_P1,21,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,25,HEAP_CVAL_P1,26)
, bytes2word(HEAP_CVAL_IN3,HEAP_CVAL_I4,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,27,HEAP_CVAL_P1,28)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,10)
, bytes2word(HEAP_CVAL_P1,29,HEAP_CVAL_P1,30)
, bytes2word(HEAP_CVAL_P1,10,HEAP_CVAL_P1,31)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_CVAL_P1,32,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,19,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,32)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,47,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,62)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,72,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(79,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(23,0,0)
, CONSTR(26,0,0)
, CONSTR(20,0,0)
,	/* CT_v3235: (byte 0) */
  HW(30,0)
, 0
,	/* CF_Parse_46Parse_46parseAPat2: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseAPat2))
, CAPTAG(useLabel(FN_LAMBDA3120),2)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse_46parseAPat)
, CAPTAG(useLabel(FN_LAMBDA3121),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revAp))
, useLabel(CF_Parse_46ParseLex_46varid)
, CAPTAG(useLabel(FN_LAMBDA3122),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46aconid)
, CAPTAG(useLabel(FN_LAMBDA3123),1)
, useLabel(F0_MkSyntax_46mkParExp)
, useLabel(CF_Parse_46ParseLex_46lpar)
, VAPTAG(useLabel(FN_Parse_46Parse_46manySepSafe))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse_46parsePat)
, useLabel(CF_Parse_46ParseLex_46rpar)
, useLabel(F0_MkSyntax_46mkExpList)
, useLabel(CF_Parse_46ParseLex_46lbrack)
, useLabel(CF_Parse_46ParseLex_46rbrack)
, CAPTAG(useLabel(FN_LAMBDA3124),2)
, CAPTAG(useLabel(FN_LAMBDA3125),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, useLabel(CF_Parse_46ParseLex_46char)
, useLabel(CF_Parse_46ParseLex_46string)
, useLabel(CF_Parse_46ParseLex_46rational)
, useLabel(CF_Parse_46ParseLex_46integer)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3236)
,	/* FN_LAMBDA3125: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(19,2,0)
,	/* CT_v3236: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3125: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3125),2)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3237)
,	/* FN_LAMBDA3124: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(25,2,0)
,	/* CT_v3237: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3124: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3124),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v3238)
,	/* FN_LAMBDA3123: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(24,1,0)
,	/* CT_v3238: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3123: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3123),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v3242)
,	/* FN_LAMBDA3122: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I1,HEAP_I2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(15,2,0)
,	/* CT_v3242: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3122: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3122),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v3246)
,	/* FN_LAMBDA3121: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I1,HEAP_I2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(14,2,0)
,	/* CT_v3246: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3121: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3121),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3250)
,	/* FN_LAMBDA3120: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_P1,0,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_I2)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_I2,HEAP_P1,3,HEAP_ARG)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_P1,7)
, bytes2word(HEAP_I1,HEAP_OFF_N1,6,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(23,3,0)
,	/* CT_v3250: (byte 0) */
  HW(5,2)
, 0
,	/* F0_LAMBDA3120: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3120),2)
, useLabel(CF_SyntaxPos_46HasPos_46Syntax_46Exp)
, VAPTAG(useLabel(FN_SyntaxPos_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Util_46Extra_46mergePos))
, VAPTAG(useLabel(FN_Prelude_46seq))
, bytes2word(0,0,0,0)
, useLabel(CT_v3251)
,	/* FN_Parse_46Parse_46parsePats: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3251: (byte 0) */
  HW(2,0)
, 0
,	/* CF_Parse_46Parse_46parsePats: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parsePats))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, useLabel(CF_Parse_46Parse_46parseAPat)
, bytes2word(0,0,0,0)
, useLabel(CT_v3252)
,	/* FN_Parse_46Parse_46parseVarsType: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,11)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3252: (byte 0) */
  HW(10,0)
, 0
,	/* CF_Parse_46Parse_46parseVarsType: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseVarsType))
, CAPTAG(useLabel(FN_LAMBDA3126),3)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46someSep))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46ParseLex_46varid)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46coloncolon)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse2_46parseContexts)
, useLabel(CF_Parse_46Parse2_46parseType)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3253)
,	/* FN_LAMBDA3126: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(11,3,0)
,	/* CT_v3253: (byte 0) */
  HW(0,3)
, 0
,	/* F0_LAMBDA3126: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3126),3)
, bytes2word(0,0,0,0)
, useLabel(CT_v3254)
,	/* FN_Parse_46Parse_46optSemi: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I4,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I5,HEAP_OFF_N1,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3254: (byte 0) */
  HW(4,0)
, 0
,	/* CF_Parse_46Parse_46optSemi: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46optSemi))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46semi)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,0,0)
, useLabel(CT_v3255)
,	/* FN_Parse_46Parse_46parseExpType: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_P1,10)
, bytes2word(HEAP_CVAL_P1,11,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(12,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3255: (byte 0) */
  HW(10,0)
, 0
,	/* CF_Parse_46Parse_46parseExpType: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseExpType))
, CAPTAG(useLabel(FN_LAMBDA3127),4)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46coloncolon)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse2_46parseContexts)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse2_46parseType)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, useLabel(F0_Prelude_46id)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3256)
,	/* FN_LAMBDA3127: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG_ARG,4)
, bytes2word(2,HEAP_ARG,3,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(9,4,0)
,	/* CT_v3256: (byte 0) */
  HW(2,4)
, 0
,	/* F0_LAMBDA3127: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3127),4)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Type_46getPos))
, VAPTAG(useLabel(FN_Util_46Extra_46mergePos))
, bytes2word(0,0,0,0)
, useLabel(CT_v3257)
,	/* FN_Parse_46Parse_46parseValdef: (byte 0) */
  bytes2word(NEEDHEAP_P1,43,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(12,HEAP_CVAL_I3,HEAP_CVAL_P1,13)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,14,HEAP_CVAL_P1)
, bytes2word(9,HEAP_CVAL_P1,10,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,12,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,10,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(17,HEAP_OFF_N1,26,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3257: (byte 0) */
  HW(15,0)
, 0
,	/* CF_Parse_46Parse_46parseValdef: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseValdef))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(F0_MkSyntax_46mkDeclPat)
, useLabel(CF_Parse_46ParseLex_46varid)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46ParseLex_46anyop)
, useLabel(CF_Parse_46Parse_46parsePat)
, VAPTAG(useLabel(FN_Parse_46Parse_46parseRhs))
, useLabel(CF_Parse_46ParseLex_46equal)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse_46parseWhere)
, useLabel(F0_MkSyntax_46mkDeclFun)
, useLabel(CF_Parse_46Parse_46parsePats)
, VAPTAG(useLabel(FN_Parse_46Parse_46parseAlt))
, useLabel(F0_MkSyntax_46mkDeclPatFun)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,0,0)
, useLabel(CT_v3258)
,	/* FN_Parse_46Parse_46parseWhere: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_N1,2,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
, CONSTR(0,0,0)
, CONSTR(56,0,0)
,	/* CT_v3258: (byte 0) */
  HW(8,0)
, 0
,	/* CF_Parse_46Parse_46parseWhere: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseWhere))
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, useLabel(CF_Parse_46Parse_46parseDecls)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLib_46rcurl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,0,0)
, useLabel(CT_v3259)
,	/* FN_Parse_46Parse_46parseDecls: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3259: (byte 0) */
  HW(5,0)
, 0
,	/* CF_Parse_46Parse_46parseDecls: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseDecls))
, CAPTAG(useLabel(FN_LAMBDA3128),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manysSep))
, useLabel(CF_Parse_46ParseLex_46semi)
, useLabel(CF_Parse_46Parse_46parseDecl)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, bytes2word(1,0,0,1)
, useLabel(CT_v3260)
,	/* FN_LAMBDA3128: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v3260: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3128: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3128),1)
, bytes2word(0,0,0,0)
, useLabel(CT_v3261)
,	/* FN_Parse_46Parse_46parseDecl: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3261: (byte 0) */
  HW(6,0)
, 0
,	/* CF_Parse_46Parse_46parseDecl: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseDecl))
, CAPTAG(useLabel(FN_LAMBDA3129),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse2_46parseFixDecl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, useLabel(CF_Parse_46Parse_46parseValdef)
, useLabel(CF_Parse_46Parse_46parseVarsType)
, bytes2word(1,0,0,1)
, useLabel(CT_v3262)
,	/* FN_LAMBDA3129: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(17,1,0)
,	/* CT_v3262: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3129: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3129),1)
, bytes2word(0,0,0,0)
, useLabel(CT_v3263)
,	/* FN_Parse_46Parse_46parseExp: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3263: (byte 0) */
  HW(3,0)
, 0
,	/* CF_Parse_46Parse_46parseExp: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseExp))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revAp))
, useLabel(CF_Parse_46Parse_46parseExp0)
, useLabel(CF_Parse_46Parse_46parseExpType)
, bytes2word(0,0,0,0)
, useLabel(CT_v3264)
,	/* FN_Parse_46Parse_46parseExp0: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3264: (byte 0) */
  HW(6,0)
, 0
,	/* CF_Parse_46Parse_46parseExp0: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseExp0))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, useLabel(CF_Parse_46ParseLex_46anyop)
, useLabel(CF_Parse_46Parse_46parseExp10)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(F0_MkSyntax_46mkInfixList)
, bytes2word(0,0,0,0)
, useLabel(CT_v3265)
,	/* FN_Parse_46Parse_46parseStmt: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,10,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,21,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(50,0,0)
,	/* CT_v3265: (byte 0) */
  HW(12,0)
, 0
,	/* CF_Parse_46Parse_46parseStmt: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseStmt))
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, CAPTAG(useLabel(FN_LAMBDA3135),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, CAPTAG(useLabel(FN_LAMBDA3136),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse_46parsePat)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46larrow)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse_46parseExp)
, CAPTAG(useLabel(FN_LAMBDA3137),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3266)
,	/* FN_LAMBDA3137: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v3266: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3137: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3137),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3267)
,	/* FN_LAMBDA3136: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3267: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3136: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3136),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v3268)
,	/* FN_LAMBDA3135: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_I32,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3268: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA3135: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3135),1)
, CAPTAG(useLabel(FN_LAMBDA3134),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, bytes2word(1,0,0,1)
, useLabel(CT_v3269)
,	/* FN_LAMBDA3134: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_I32,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3269: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA3134: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3134),1)
, CAPTAG(useLabel(FN_LAMBDA3133),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46Parse_46parseDecls)
, bytes2word(1,0,0,1)
, useLabel(CT_v3270)
,	/* FN_LAMBDA3133: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3270: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA3133: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3133),1)
, CAPTAG(useLabel(FN_LAMBDA3132),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46ParseLib_46rcurl)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3271)
,	/* FN_LAMBDA3132: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDHEAP_I32,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_OFF_N1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(2,1,0)
, CONSTR(45,0,0)
,	/* CT_v3271: (byte 0) */
  HW(5,2)
, 0
,	/* F0_LAMBDA3132: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3132),2)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, CAPTAG(useLabel(FN_LAMBDA3131),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3272)
,	/* FN_LAMBDA3131: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v3272: (byte 0) */
  HW(3,2)
, 0
,	/* F0_LAMBDA3131: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3131),2)
, CAPTAG(useLabel(FN_LAMBDA3130),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46Parse_46parseExp)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3273)
,	/* FN_LAMBDA3130: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,2,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(0,1,0)
, CONSTR(3,3,0)
,	/* CT_v3273: (byte 0) */
  HW(4,2)
, 0
,	/* F0_LAMBDA3130: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3130),2)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Decls_46getPos))
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Exp_46getPos))
, VAPTAG(useLabel(FN_Util_46Extra_46mergePos))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, bytes2word(0,0,0,0)
, useLabel(CT_v3274)
,	/* FN_Parse_46Parse_46parseExp10: (byte 0) */
  bytes2word(NEEDHEAP_P1,45,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_I5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,7,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,13)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,21,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,8,HEAP_OFF_N1,29)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,8)
, bytes2word(HEAP_OFF_N1,37,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,9,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(36,0,0)
, CONSTR(43,0,0)
, CONSTR(41,0,0)
, CONSTR(50,0,0)
, CONSTR(0,2,0)
, CONSTR(21,0,0)
,	/* CT_v3274: (byte 0) */
  HW(7,0)
, 0
,	/* CF_Parse_46Parse_46parseExp10: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseExp10))
, CAPTAG(useLabel(FN_LAMBDA3138),1)
, CAPTAG(useLabel(FN_LAMBDA3139),1)
, CAPTAG(useLabel(FN_LAMBDA3140),1)
, CAPTAG(useLabel(FN_LAMBDA3141),1)
, CAPTAG(useLabel(FN_LAMBDA3142),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46cases))
, useLabel(CF_Parse_46Parse_46parseFExp)
, bytes2word(1,0,0,1)
, useLabel(CT_v3275)
,	/* FN_LAMBDA3142: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,10,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_P1,12,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,9)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,14)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,15,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(53,0,0)
,	/* CT_v3275: (byte 0) */
  HW(13,1)
, 0
,	/* F0_LAMBDA3142: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3142),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkCase),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse_46parseExp)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, VAPTAG(useLabel(FN_Parse_46Parse_46parseAlt))
, useLabel(CF_Parse_46ParseLex_46rarrow)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46somesSep))
, useLabel(CF_Parse_46ParseLex_46semi)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse_46optSemi)
, useLabel(CF_Parse_46ParseLib_46rcurl)
, bytes2word(1,0,0,1)
, useLabel(CT_v3276)
,	/* FN_LAMBDA3141: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_N1,2,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_I5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(42,0,0)
, CONSTR(54,0,0)
,	/* CT_v3276: (byte 0) */
  HW(6,1)
, 0
,	/* F0_LAMBDA3141: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3141),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkIf),3)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse_46parseExp)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, bytes2word(1,0,0,1)
, useLabel(CT_v3277)
,	/* FN_LAMBDA3140: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,11,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(12,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3277: (byte 0) */
  HW(10,1)
, 0
,	/* F0_LAMBDA3140: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3140),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkDo),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46somesSep))
, useLabel(CF_Parse_46ParseLex_46semi)
, useLabel(CF_Parse_46Parse_46parseStmt)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46Parse_46optSemi)
, useLabel(CF_Parse_46ParseLib_46rcurl)
, bytes2word(1,0,0,1)
, useLabel(CT_v3278)
,	/* FN_LAMBDA3139: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,10,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,4,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(12,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(45,0,0)
,	/* CT_v3278: (byte 0) */
  HW(10,1)
, 0
,	/* F0_LAMBDA3139: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3139),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkLet),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse_46parseDecls)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46Parse_46optSemi)
, useLabel(CF_Parse_46ParseLib_46rcurl)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, useLabel(CF_Parse_46Parse_46parseExp)
, bytes2word(1,0,0,1)
, useLabel(CT_v3279)
,	/* FN_LAMBDA3138: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(9,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3279: (byte 0) */
  HW(7,1)
, 0
,	/* F0_LAMBDA3138: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3138),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkLambda),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse_46parsePats)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46rarrow)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse_46parseExp)
, bytes2word(0,0,0,0)
, useLabel(CT_v3280)
,	/* FN_Parse_46Parse_46parseFExp: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3280: (byte 0) */
  HW(4,0)
, 0
,	/* CF_Parse_46Parse_46parseFExp: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseFExp))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, useLabel(CF_Parse_46Parse_46parseAExpR1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(F0_MkSyntax_46mkAppExp)
, bytes2word(0,0,0,0)
, useLabel(CT_v3281)
,	/* FN_Parse_46Parse_46parseAExpR1: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3281: (byte 0) */
  HW(3,0)
, 0
,	/* CF_Parse_46Parse_46parseAExpR1: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseAExpR1))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46Parse_46parseAExp)
, useLabel(F0_Parse_46Parse_46parseAExpR)
, bytes2word(1,0,0,1)
, useLabel(CT_v3282)
,	/* FN_Parse_46Parse_46parseAExpR: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,13)
, bytes2word(HEAP_CVAL_P1,14,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,15,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3282: (byte 0) */
  HW(13,1)
, 0
,	/* F0_Parse_46Parse_46parseAExpR: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parseAExpR),1)
, CAPTAG(useLabel(FN_LAMBDA3143),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manySep))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse_46parseFieldExp)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLib_46rcurl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(F0_Parse_46Parse_46parseAExpR)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3283)
,	/* FN_LAMBDA3143: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(12,2,0)
,	/* CT_v3283: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3143: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3143),2)
, bytes2word(0,0,0,0)
, useLabel(CT_v3284)
,	/* FN_Parse_46Parse_46parseAExp: (byte 0) */
  bytes2word(NEEDHEAP_P1,39,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_N1,5,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(5,HEAP_OFF_N1,13,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,12,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,19,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(2,0,0)
, CONSTR(0,2,0)
, CONSTR(10,0,0)
,	/* CT_v3284: (byte 0) */
  HW(12,0)
, 0
,	/* CF_Parse_46Parse_46parseAExp: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseAExp))
, CAPTAG(useLabel(FN_LAMBDA3144),1)
, CAPTAG(useLabel(FN_LAMBDA3145),1)
, CAPTAG(useLabel(FN_LAMBDA3146),2)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, useLabel(CF_Parse_46ParseLex_46char)
, useLabel(CF_Parse_46ParseLex_46string)
, useLabel(CF_Parse_46ParseLex_46rational)
, useLabel(CF_Parse_46ParseLex_46integer)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46cases))
, useLabel(CF_Parse_46ParseLex_46aanyid)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3285)
,	/* FN_LAMBDA3146: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(19,2,0)
,	/* CT_v3285: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3146: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3146),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v3286)
,	/* FN_LAMBDA3145: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(9,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3286: (byte 0) */
  HW(7,1)
, 0
,	/* F0_LAMBDA3145: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3145),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkParExp),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manySep))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse_46parseExp)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46ParseLex_46rpar)
, bytes2word(1,0,0,1)
, useLabel(CT_v3287)
,	/* FN_LAMBDA3144: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3287: (byte 0) */
  HW(1,1)
, 0
,	/* F0_LAMBDA3144: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3144),1)
, VAPTAG(useLabel(FN_Parse_46Parse_46parseBrackExp0))
, bytes2word(0,0,0,0)
, useLabel(CT_v3288)
,	/* FN_Parse_46Parse_46parseFieldExp: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3288: (byte 0) */
  HW(3,0)
, 0
,	/* CF_Parse_46Parse_46parseFieldExp: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseFieldExp))
, CAPTAG(useLabel(FN_LAMBDA3147),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46ParseLex_46varid)
, bytes2word(1,0,0,1)
, useLabel(CT_v3292)
,	/* FN_LAMBDA3147: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_P1)
, bytes2word(0,HEAP_I1,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,0)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,9,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3292: (byte 0) */
  HW(7,1)
, 0
,	/* F0_LAMBDA3147: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3147),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkFieldExp),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46equal)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse_46parseExp)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3293)
,	/* FN_Parse_46Parse_46parseBrackExp0: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3293: (byte 0) */
  HW(7,1)
, 0
,	/* F0_Parse_46Parse_46parseBrackExp0: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parseBrackExp0),1)
, CAPTAG(useLabel(FN_MkSyntax_46mkExpList),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46rbrack)
, VAPTAG(useLabel(FN_Parse_46Parse_46parseBrackExp1))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revAp))
, useLabel(CF_Parse_46Parse_46parseExp)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3294)
,	/* FN_Parse_46Parse_46parseBrackExp1: (byte 0) */
  bytes2word(NEEDHEAP_P1,59,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_CVAL_P1,14)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(15,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,16,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,18,HEAP_CVAL_P1,16)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,19)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,20,HEAP_OFF_N1,12)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,20)
, bytes2word(HEAP_OFF_N1,26,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,20,HEAP_OFF_N1,43)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(20,HEAP_OFF_N1,54,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3294: (byte 0) */
  HW(18,1)
, 0
,	/* F0_Parse_46Parse_46parseBrackExp1: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parseBrackExp1),1)
, CAPTAG(useLabel(FN_LAMBDA3148),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46rbrack)
, CAPTAG(useLabel(FN_LAMBDA3149),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46dotdot)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, CAPTAG(useLabel(FN_LAMBDA3150),3)
, useLabel(CF_Parse_46ParseLex_46pipe)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46somesSep))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse_46parseQual)
, CAPTAG(useLabel(FN_LAMBDA3151),3)
, useLabel(CF_Parse_46Parse_46parseExp)
, VAPTAG(useLabel(FN_Parse_46Parse_46parseBrackExp2))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revAp))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3295)
,	/* FN_LAMBDA3151: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,1,4)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,6)
, bytes2word(HEAP_ARG,3,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(1,1,0)
, CONSTR(0,0,0)
,	/* CT_v3295: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3151: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3151),4)
, VAPTAG(useLabel(FN_MkSyntax_46mkSweetListEnum))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3296)
,	/* FN_LAMBDA3150: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,4,HEAP_ARG_ARG_RET_EVAL,2)
, bytes2word(3,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3296: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3150: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3150),4)
, VAPTAG(useLabel(FN_MkSyntax_46mkSweetListComp))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3297)
,	/* FN_LAMBDA3149: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,3,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,2)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3297: (byte 0) */
  HW(1,3)
, 0
,	/* F0_LAMBDA3149: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3149),3)
, VAPTAG(useLabel(FN_MkSyntax_46mkSweetListEnum))
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3298)
,	/* FN_LAMBDA3148: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v3298: (byte 0) */
  HW(1,3)
, 0
,	/* F0_LAMBDA3148: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3148),3)
, VAPTAG(useLabel(FN_MkSyntax_46mkExpList))
, bytes2word(1,0,0,1)
, useLabel(CT_v3299)
,	/* FN_Parse_46Parse_46parseBrackExp2: (byte 0) */
  bytes2word(NEEDHEAP_P1,48,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,6,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,12,HEAP_ARG)
, bytes2word(1,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,13,HEAP_CVAL_P1)
, bytes2word(14,HEAP_CVAL_P1,13,HEAP_CVAL_P1)
, bytes2word(11,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,15,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,15)
, bytes2word(HEAP_OFF_N1,32,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,15,HEAP_OFF_N1)
, bytes2word(43,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3299: (byte 0) */
  HW(13,1)
, 0
,	/* F0_Parse_46Parse_46parseBrackExp2: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parseBrackExp2),1)
, CAPTAG(useLabel(FN_LAMBDA3152),3)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46rbrack)
, CAPTAG(useLabel(FN_LAMBDA3153),3)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46dotdot)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, CAPTAG(useLabel(FN_LAMBDA3154),4)
, useLabel(CF_Parse_46Parse_46parseExp)
, CAPTAG(useLabel(FN_LAMBDA3155),4)
, useLabel(CF_Parse_46ParseLex_46comma)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manySep))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3300)
,	/* FN_LAMBDA3155: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(4,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,5,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3300: (byte 0) */
  HW(1,5)
, 0
,	/* F0_LAMBDA3155: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3155),5)
, VAPTAG(useLabel(FN_MkSyntax_46mkExpList))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3301)
,	/* FN_LAMBDA3154: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG)
, bytes2word(4,HEAP_CVAL_N1,1,HEAP_ARG)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,5,HEAP_OFF_N1,7)
, bytes2word(HEAP_OFF_N1,6,HEAP_ARG,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
,	/* CT_v3301: (byte 0) */
  HW(1,5)
, 0
,	/* F0_LAMBDA3154: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3154),5)
, VAPTAG(useLabel(FN_MkSyntax_46mkSweetListEnum))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3302)
,	/* FN_LAMBDA3153: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_ARG)
, bytes2word(3,HEAP_CVAL_N1,2,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG_ARG,1,4)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_ARG,2,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(0,0,0)
, CONSTR(1,1,0)
,	/* CT_v3302: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3153: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3153),4)
, VAPTAG(useLabel(FN_MkSyntax_46mkSweetListEnum))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3303)
,	/* FN_LAMBDA3152: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_N1,2,HEAP_ARG)
, bytes2word(4,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I3,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(5,HEAP_ARG,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v3303: (byte 0) */
  HW(1,4)
, 0
,	/* F0_LAMBDA3152: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3152),4)
, VAPTAG(useLabel(FN_MkSyntax_46mkExpList))
, bytes2word(0,0,0,0)
, useLabel(CT_v3304)
,	/* FN_Parse_46Parse_46parseQual: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,10,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,21,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(50,0,0)
,	/* CT_v3304: (byte 0) */
  HW(12,0)
, 0
,	/* CF_Parse_46Parse_46parseQual: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseQual))
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, CAPTAG(useLabel(FN_LAMBDA3161),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, CAPTAG(useLabel(FN_LAMBDA3162),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse_46parsePat)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46larrow)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse_46parseExp)
, CAPTAG(useLabel(FN_LAMBDA3163),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3305)
,	/* FN_LAMBDA3163: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
,	/* CT_v3305: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3163: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3163),1)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3306)
,	/* FN_LAMBDA3162: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3306: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3162: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3162),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v3307)
,	/* FN_LAMBDA3161: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_I32,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3307: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA3161: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3161),1)
, CAPTAG(useLabel(FN_LAMBDA3160),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, bytes2word(1,0,0,1)
, useLabel(CT_v3308)
,	/* FN_LAMBDA3160: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_I32,HEAP_CVAL_I3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1,3)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3308: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA3160: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3160),1)
, CAPTAG(useLabel(FN_LAMBDA3159),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46Parse_46parseDecls)
, bytes2word(1,0,0,1)
, useLabel(CT_v3309)
,	/* FN_LAMBDA3159: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3309: (byte 0) */
  HW(3,1)
, 0
,	/* F0_LAMBDA3159: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3159),1)
, CAPTAG(useLabel(FN_LAMBDA3158),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46ParseLib_46rcurl)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3310)
,	/* FN_LAMBDA3158: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDHEAP_I32,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_OFF_N1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(2,1,0)
, CONSTR(45,0,0)
,	/* CT_v3310: (byte 0) */
  HW(5,2)
, 0
,	/* F0_LAMBDA3158: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3158),2)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, CAPTAG(useLabel(FN_LAMBDA3157),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3311)
,	/* FN_LAMBDA3157: (byte 0) */
  bytes2word(ZAP_ARG_I2,NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v3311: (byte 0) */
  HW(3,2)
, 0
,	/* F0_LAMBDA3157: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3157),2)
, CAPTAG(useLabel(FN_LAMBDA3156),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46into))
, useLabel(CF_Parse_46Parse_46parseExp)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3312)
,	/* FN_LAMBDA3156: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, CONSTR(1,1,0)
, CONSTR(3,3,0)
,	/* CT_v3312: (byte 0) */
  HW(2,2)
, 0
,	/* F0_LAMBDA3156: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3156),2)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Decls_46getPos))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3313)
,	/* FN_Parse_46Parse_46parseAlt: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,9,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3313: (byte 0) */
  HW(7,1)
, 0
,	/* F0_Parse_46Parse_46parseAlt: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parseAlt),1)
, CAPTAG(useLabel(FN_LAMBDA3164),3)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse_46parsePat)
, VAPTAG(useLabel(FN_Parse_46Parse_46parseRhs))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse_46parseWhere)
, bytes2word(3,0,2,1)
, bytes2word(1,2,0,3)
, useLabel(CT_v3314)
,	/* FN_LAMBDA3164: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,3,0)
,	/* CT_v3314: (byte 0) */
  HW(0,3)
, 0
,	/* F0_LAMBDA3164: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3164),3)
, bytes2word(1,0,0,1)
, useLabel(CT_v3315)
,	/* FN_Parse_46Parse_46parseRhs: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_ARG,1,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,4)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(12,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3315: (byte 0) */
  HW(9,1)
, 0
,	/* F0_Parse_46Parse_46parseRhs: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parseRhs),1)
, CAPTAG(useLabel(FN_LAMBDA3165),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse_46parseExp)
, CAPTAG(useLabel(FN_LAMBDA3166),1)
, VAPTAG(useLabel(FN_Parse_46Parse_46parsePatGdExp))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3316)
,	/* FN_LAMBDA3166: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
,	/* CT_v3316: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3166: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3166),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v3317)
,	/* FN_LAMBDA3165: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v3317: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3165: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3165),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v3318)
,	/* FN_Parse_46Parse_46parsePatGdExp: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,1,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(11,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3318: (byte 0) */
  HW(9,1)
, 0
,	/* F0_Parse_46Parse_46parsePatGdExp: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46parsePatGdExp),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(F0_Util_46Extra_46pair)
, useLabel(CF_Parse_46ParseLex_46pipe)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46somesSep))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse_46parseQual)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46Parse_46parseExp)
, bytes2word(0,0,0,0)
, useLabel(CT_v3319)
,	/* FN_Parse_46Parse_46parseValdefs: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,11,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3319: (byte 0) */
  HW(8,0)
, 0
,	/* CF_Parse_46Parse_46parseValdefs: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseValdefs))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, useLabel(CF_Parse_46ParseLex_46semi)
, useLabel(CF_Parse_46Parse_46parseValdefs)
, CAPTAG(useLabel(FN_LAMBDA3167),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manysSep))
, useLabel(CF_Parse_46Parse_46parseValdef)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3320)
,	/* FN_LAMBDA3167: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v3320: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3167: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3167),1)
, bytes2word(0,0,0,0)
, useLabel(CT_v3321)
,	/* FN_Parse_46Parse_46parseCDecl: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3321: (byte 0) */
  HW(6,0)
, 0
,	/* CF_Parse_46Parse_46parseCDecl: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseCDecl))
, CAPTAG(useLabel(FN_LAMBDA3168),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse2_46parseFixDecl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, useLabel(CF_Parse_46Parse_46parseValdef)
, useLabel(CF_Parse_46Parse_46parseVarsType)
, bytes2word(1,0,0,1)
, useLabel(CT_v3322)
,	/* FN_LAMBDA3168: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(17,1,0)
,	/* CT_v3322: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3168: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3168),1)
, bytes2word(0,0,0,0)
, useLabel(CT_v3323)
,	/* FN_Parse_46Parse_46parseCDecls: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3323: (byte 0) */
  HW(5,0)
, 0
,	/* CF_Parse_46Parse_46parseCDecls: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseCDecls))
, CAPTAG(useLabel(FN_LAMBDA3169),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manysSep))
, useLabel(CF_Parse_46ParseLex_46semi)
, useLabel(CF_Parse_46Parse_46parseCDecl)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, bytes2word(1,0,0,1)
, useLabel(CT_v3324)
,	/* FN_LAMBDA3169: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v3324: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3169: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3169),1)
, bytes2word(0,0,0,0)
, useLabel(CT_v3325)
,	/* FN_Parse_46Parse_46parseForeign: (byte 0) */
  bytes2word(NEEDHEAP_P2,19,1,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_N1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,20)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_I3,HEAP_CVAL_N1)
, bytes2word(2,HEAP_CVAL_P1,9,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,7,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,11,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I3,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_CVAL_P1,12)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_I3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_N1,5,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_P1,15,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I3,HEAP_CVAL_P1,17)
, bytes2word(HEAP_CVAL_N1,6,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_I5,HEAP_CVAL_P1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_I3,HEAP_CVAL_P1)
, bytes2word(19,HEAP_CVAL_N1,6,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(20,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_P1,21,HEAP_CVAL_N1,6)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,22,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_P1,23,HEAP_CVAL_N1)
, bytes2word(6,HEAP_OFF_N1,2,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,24,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_I3,HEAP_CVAL_P1,25)
, bytes2word(HEAP_CVAL_N1,6,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_I5,HEAP_CVAL_P1,26)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_I3,HEAP_CVAL_P1)
, bytes2word(27,HEAP_CVAL_N1,6,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_I4,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(28,HEAP_OFF_N1,5,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_P1,29,HEAP_CVAL_N1,6)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,30,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,31,HEAP_CVAL_P1,32)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,33)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,8)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,21,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,34)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,47,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,60)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,73,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,86)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,99,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,112)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,123,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,134)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,145,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,34,HEAP_CVAL_P1)
, bytes2word(32,HEAP_OFF_N1,2,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,35,HEAP_OFF_N1)
, bytes2word(4,HEAP_I2,HEAP_CVAL_P1,35)
, bytes2word(HEAP_OFF_N1,4,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(35,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(33,HEAP_CVAL_P1,36,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,37,HEAP_CVAL_P1)
, bytes2word(38,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(39,HEAP_CVAL_I5,HEAP_CVAL_P1,40)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,41)
, bytes2word(HEAP_CVAL_P1,32,HEAP_OFF_N1,2)
, bytes2word(HEAP_P1,0,HEAP_CVAL_P1,35)
, bytes2word(HEAP_OFF_N1,4,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(38,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(33,HEAP_CVAL_P1,36,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,37,HEAP_CVAL_P1)
, bytes2word(35,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(39,HEAP_CVAL_I5,HEAP_CVAL_P1,42)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,43)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_N1,1,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,8,HEAP_P1,0)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,32)
, bytes2word(HEAP_OFF_N1,10,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,35,HEAP_OFF_N1,4)
, bytes2word(HEAP_I1,HEAP_CVAL_P1,35,HEAP_OFF_N1)
, bytes2word(4,HEAP_I2,HEAP_CVAL_P1,38)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,33)
, bytes2word(HEAP_CVAL_P1,36,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,37,HEAP_CVAL_P1,35)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,39)
, bytes2word(HEAP_CVAL_I5,HEAP_CVAL_P1,40,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(34,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(8,HEAP_OFF_N1,56,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,44)
, bytes2word(HEAP_CVAL_P1,45,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTR(4,1,0)
, CONSTR(3,0,0)
, CONSTR(2,0,0)
, CONSTR(2,2,0)
, CONSTR(1,0,0)
, CONSTR(0,0,0)
,	/* CT_v3325: (byte 0) */
  HW(43,0)
, 0
,	/* CF_Parse_46Parse_46parseForeign: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseForeign))
, CAPTAG(useLabel(FN_Parse_46Parse_46Prelude_46559_46is),1)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, useLabel(CF_Parse_46ParseLex_46k_95unsafe)
, useLabel(CF_Parse_46ParseLex_46k_95safe)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, VAPTAG(useLabel(FN_LAMBDA3171))
, useLabel(CF_Parse_46ParseLex_46string)
, useLabel(CF_Parse_46ParseLex_46k_95ccall)
, useLabel(CF_Parse_46ParseLex_46k_95cast)
, useLabel(CF_Parse_46ParseLex_46k_95noproto)
, useLabel(CF_Parse_46ParseLex_46k_95haskellcall)
, VAPTAG(useLabel(FN_LAMBDA3172))
, useLabel(CF_Parse_46ParseLex_46k_95stdcall)
, VAPTAG(useLabel(FN_LAMBDA3173))
, useLabel(CF_Parse_46ParseLex_46k_95primitive)
, VAPTAG(useLabel(FN_LAMBDA3174))
, useLabel(CF_Parse_46ParseLex_46k_95fastccall)
, VAPTAG(useLabel(FN_LAMBDA3175))
, useLabel(CF_Parse_46ParseLex_46k_95faststdcall)
, VAPTAG(useLabel(FN_LAMBDA3176))
, useLabel(CF_Parse_46ParseLex_46k_95builtin)
, VAPTAG(useLabel(FN_LAMBDA3177))
, useLabel(CF_Parse_46ParseLex_46k_95cplusplus)
, VAPTAG(useLabel(FN_LAMBDA3178))
, useLabel(CF_Parse_46ParseLex_46k_95dotnet)
, VAPTAG(useLabel(FN_LAMBDA3179))
, useLabel(CF_Parse_46ParseLex_46k_95jvm)
, CAPTAG(useLabel(FN_LAMBDA3180),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46varid)
, CAPTAG(useLabel(FN_LAMBDA3182),6)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46coloncolon)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse2_46parseType)
, useLabel(CF_Parse_46ParseLex_46k_95import)
, CAPTAG(useLabel(FN_LAMBDA3184),5)
, useLabel(CF_Parse_46ParseLex_46k_95export)
, CAPTAG(useLabel(FN_LAMBDA3187),6)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revAp))
, useLabel(CF_Parse_46ParseLex_46k_95foreign)
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3347)
,	/* FN_LAMBDA3187: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,UNPACK)
, bytes2word(2,PUSH_ZAP_ARG_I2,EVAL,UNPACK)
, bytes2word(2,PUSH_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,7,TOP(14),BOT(14))
, bytes2word(TOP(14),BOT(14),TOP(18),BOT(18))
, bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v3344: (byte 4) */
  bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v3337: (byte 4) */
  bytes2word(POP_I1,JUMP,88,0)
, bytes2word(UNPACK,2,PUSH_ZAP_ARG_I3,ZAP_STACK_P1)
, bytes2word(1,EVAL,UNPACK,2)
, bytes2word(PUSH_ZAP_ARG,4,ZAP_STACK_P1,1)
, bytes2word(EVAL,NEEDHEAP_P1,34,UNPACK)
, bytes2word(2,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_P1,0,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_ARG,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_P1,0)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,4)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,11)
, bytes2word(HEAP_CVAL_P1,12,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,13,HEAP_ARG,5)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,0)
, bytes2word(HEAP_P1,11,HEAP_P1,7)
, bytes2word(HEAP_P1,3,HEAP_OFF_N1,9)
, bytes2word(HEAP_P1,5,HEAP_ARG,5)
, bytes2word(HEAP_P1,3,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,17,HEAP_OFF_N1)
,	/* v3334: (byte 2) */
  bytes2word(11,RETURN_EVAL,POP_P1,2)
,	/* v3330: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v3326: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(HEAP_CVAL_P1,15,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(9,8,0)
,	/* CT_v3347: (byte 0) */
  HW(14,6)
, 0
,	/* F0_LAMBDA3187: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3187),6)
, useLabel(CF_SyntaxPos_46HasPos_46Syntax_46Type)
, VAPTAG(useLabel(FN_SyntaxPos_46getPos))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Util_46Extra_46mergePos))
, VAPTAG(useLabel(FN_LAMBDA3185))
, VAPTAG(useLabel(FN_Util_46Extra_46strPos))
, VAPTAG(useLabel(FN_Prelude_46_43_43))
, CAPTAG(useLabel(FN_Util_46Extra_46strace),1)
, CAPTAG(useLabel(FN_Parse_46Parse_46Prelude_46562_46calcArity),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, useLabel(CF_Prelude_46Num_46Prelude_46Int)
, VAPTAG(useLabel(FN_Prelude_46_36))
, VAPTAG(useLabel(FN_LAMBDA3186))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3349)
,	/* FN_LAMBDA3186: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3348)
,	/* CT_v3349: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3186: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3186))
, bytes2word(0,0,0,0)
, useLabel(CT_v3351)
,	/* FN_LAMBDA3185: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3350)
,	/* CT_v3351: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3185: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3185))
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3370)
,	/* FN_LAMBDA3184: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,UNPACK)
, bytes2word(2,PUSH_ZAP_ARG_I2,EVAL,UNPACK)
, bytes2word(2,PUSH_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,7,TOP(14),BOT(14))
, bytes2word(TOP(14),BOT(14),TOP(18),BOT(18))
, bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v3368: (byte 4) */
  bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v3363: (byte 4) */
  bytes2word(POP_I1,JUMP,32,0)
, bytes2word(UNPACK,2,PUSH_ZAP_ARG_I3,ZAP_STACK_P1)
, bytes2word(1,EVAL,NEEDHEAP_I32,UNPACK)
, bytes2word(2,HEAP_CVAL_I3,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,5,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_OFF_N1,4,HEAP_P1,8)
, bytes2word(HEAP_P1,4,HEAP_I2,HEAP_ARG)
,	/* v3360: (byte 2) */
  bytes2word(4,RETURN,POP_P1,2)
,	/* v3356: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v3352: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(HEAP_CVAL_I5,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,2,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(10,5,0)
,	/* CT_v3370: (byte 0) */
  HW(4,5)
, 0
,	/* F0_LAMBDA3184: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3184),5)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Type_46getPos))
, VAPTAG(useLabel(FN_Util_46Extra_46mergePos))
, VAPTAG(useLabel(FN_LAMBDA3183))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3372)
,	/* FN_LAMBDA3183: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3371)
,	/* CT_v3372: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3183: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3183))
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3396)
,	/* FN_LAMBDA3182: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,UNPACK)
, bytes2word(2,PUSH_ZAP_ARG_I2,EVAL,UNPACK)
, bytes2word(2,PUSH_ZAP_ARG_I3,EVAL,UNPACK)
, bytes2word(2,PUSH_I1,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,7,TOP(14),BOT(14))
, bytes2word(TOP(14),BOT(14),TOP(18),BOT(18))
, bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v3394: (byte 4) */
  bytes2word(TOP(14),BOT(14),TOP(14),BOT(14))
,	/* v3388: (byte 4) */
  bytes2word(POP_I1,JUMP,47,0)
, bytes2word(UNPACK,2,PUSH_ZAP_ARG,4)
, bytes2word(ZAP_STACK_P1,1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_I4,HEAP_ARG,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(7,HEAP_ARG,5,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,9)
, bytes2word(HEAP_P1,10,HEAP_P1,4)
, bytes2word(HEAP_I2,HEAP_OFF_N1,9,HEAP_P1)
, bytes2word(8,HEAP_ARG,5,HEAP_I2)
,	/* v3385: (byte 1) */
  bytes2word(RETURN,POP_P1,2,JUMP)
,	/* v3381: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v3377: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v3373: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(HEAP_CVAL_P1,8,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,2,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(9,8,0)
,	/* CT_v3396: (byte 0) */
  HW(7,6)
, 0
,	/* F0_LAMBDA3182: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3182),6)
, VAPTAG(useLabel(FN_SyntaxPos_46HasPos_46Syntax_46Type_46getPos))
, VAPTAG(useLabel(FN_Util_46Extra_46mergePos))
, CAPTAG(useLabel(FN_Parse_46Parse_46Prelude_46562_46calcArity),2)
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, useLabel(CF_Prelude_46Num_46Prelude_46Int)
, VAPTAG(useLabel(FN_LAMBDA3181))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3398)
,	/* FN_LAMBDA3181: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3397)
,	/* CT_v3398: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3181: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3181))
, bytes2word(1,0,0,1)
, useLabel(CT_v3402)
,	/* FN_LAMBDA3180: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,HEAP_CVAL_I3,HEAP_I1)
, bytes2word(HEAP_CVAL_N1,1,HEAP_OFF_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_N1,2,HEAP_I1)
, bytes2word(HEAP_OFF_N1,4,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(0,2,0)
, CONSTR(4,1,0)
,	/* CT_v3402: (byte 0) */
  HW(1,1)
, 0
,	/* F0_LAMBDA3180: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3180),1)
, VAPTAG(useLabel(FN_Prelude_46Show_46TokenId_46TokenId_46show))
, bytes2word(0,0,0,0)
, useLabel(CT_v3404)
,	/* FN_LAMBDA3179: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3403)
,	/* CT_v3404: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3179: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3179))
, bytes2word(0,0,0,0)
, useLabel(CT_v3406)
,	/* FN_LAMBDA3178: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3405)
,	/* CT_v3406: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3178: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3178))
, bytes2word(0,0,0,0)
, useLabel(CT_v3408)
,	/* FN_LAMBDA3177: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3407)
,	/* CT_v3408: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3177: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3177))
, bytes2word(0,0,0,0)
, useLabel(CT_v3410)
,	/* FN_LAMBDA3176: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3409)
,	/* CT_v3410: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3176: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3176))
, bytes2word(0,0,0,0)
, useLabel(CT_v3412)
,	/* FN_LAMBDA3175: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3411)
,	/* CT_v3412: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3175: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3175))
, bytes2word(0,0,0,0)
, useLabel(CT_v3414)
,	/* FN_LAMBDA3174: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3413)
,	/* CT_v3414: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3174: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3174))
, bytes2word(0,0,0,0)
, useLabel(CT_v3416)
,	/* FN_LAMBDA3173: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3415)
,	/* CT_v3416: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3173: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3173))
, bytes2word(0,0,0,0)
, useLabel(CT_v3418)
,	/* FN_LAMBDA3172: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3417)
,	/* CT_v3418: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3172: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3172))
, bytes2word(0,0,0,0)
, useLabel(CT_v3420)
,	/* FN_LAMBDA3171: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3419)
,	/* CT_v3420: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3171: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3171))
, bytes2word(1,0,0,1)
, useLabel(CT_v3421)
,	/* FN_Parse_46Parse_46Prelude_46559_46is: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3421: (byte 0) */
  HW(2,1)
, 0
,	/* F0_Parse_46Parse_46Prelude_46559_46is: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46Prelude_46559_46is),1)
, useLabel(CF_Util_46Extra_46noPos)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3431)
,	/* FN_Parse_46Parse_46Prelude_46562_46calcArity: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(TABLESWITCH,4,TOP(12),BOT(12))
, bytes2word(TOP(8),BOT(8),TOP(8),BOT(8))
,	/* v3430: (byte 2) */
  bytes2word(TOP(8),BOT(8),POP_I1,JUMP)
,	/* v3425: (byte 2) */
  bytes2word(63,0,UNPACK,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I3,HEAP_I2,HEAP_CVAL_I4)
, bytes2word(EVAL,NEEDHEAP_I32,JUMPFALSE,47)
, bytes2word(0,HEAP_CVAL_I5,HEAP_ARG,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(3,HEAP_CADR_N1,2,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_P1,8,HEAP_P1)
, bytes2word(3,HEAP_INT_P1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_ARG,1,HEAP_OFF_N1,6)
, bytes2word(PUSH_P1,0,PUSH_P1,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,10,HEAP_ARG)
, bytes2word(1,ZAP_STACK_P1,4,ZAP_STACK_P1)
, bytes2word(3,EVAL,NEEDHEAP_I32,APPLY)
,	/* v3426: (byte 2) */
  bytes2word(2,RETURN_EVAL,POP_P1,3)
,	/* v3422: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_CVAL_P1)
, bytes2word(11,EVAL,NEEDHEAP_I32,JUMPFALSE)
, bytes2word(14,0,PUSH_CADR_N1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_ARG,1)
, bytes2word(ZAP_ARG_I1,EVAL,NEEDHEAP_I32,APPLY)
,	/* v3428: (byte 2) */
  bytes2word(1,RETURN_EVAL,HEAP_CVAL_P1,12)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(2,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTRW(0,0)
, CONSTRW(1,0)
, 1
,	/* CT_v3431: (byte 0) */
  HW(11,2)
, 0
,	/* F0_Parse_46Parse_46Prelude_46562_46calcArity: (byte 0) */
  CAPTAG(useLabel(FN_Parse_46Parse_46Prelude_46562_46calcArity),2)
, VAPTAG(useLabel(FN_Prelude_46Eq_46TokenId_46TokenId_46_61_61))
, useLabel(CF_TokenId_46t_95Arrow)
, VAPTAG(useLabel(FN_Prelude_46fromInteger))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, CAPTAG(useLabel(FN_Parse_46Parse_46Prelude_46562_46calcArity),2)
, VAPTAG(useLabel(FN_Prelude_46_33_33))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply2))
, VAPTAG(useLabel(FN_Prelude_46_43))
, useLabel(CF_Prelude_46otherwise)
, VAPTAG(useLabel(FN_LAMBDA3170))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95patternMatchFail))
, bytes2word(0,0,0,0)
, useLabel(CT_v3433)
,	/* FN_LAMBDA3170: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v3432)
,	/* CT_v3433: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA3170: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA3170))
, bytes2word(0,0,0,0)
, useLabel(CT_v3434)
,	/* FN_Parse_46Parse_46parseFunDep: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(7,HEAP_OFF_N1,2,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,4)
, bytes2word(HEAP_I1,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3434: (byte 0) */
  HW(9,0)
, 0
,	/* CF_Parse_46Parse_46parseFunDep: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseFunDep))
, CAPTAG(useLabel(FN_Prelude_46map),1)
, useLabel(F0_Prelude_46snd)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, useLabel(CF_Parse_46ParseLex_46avarid)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, CAPTAG(useLabel(FN_LAMBDA3188),2)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46rarrow)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3435)
,	/* FN_LAMBDA3188: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3435: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3188: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3188),2)
, bytes2word(0,0,0,0)
, useLabel(CT_v3436)
,	/* FN_Parse_46Parse_46parseFunDeps: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_P1,8,HEAP_OFF_N1,2)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3436: (byte 0) */
  HW(7,0)
, 0
,	/* CF_Parse_46Parse_46parseFunDeps: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseFunDeps))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46someSep))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse_46parseFunDep)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, useLabel(CF_Parse_46ParseLex_46pipe)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,0,0)
, useLabel(CT_v3437)
,	/* FN_Parse_46Parse_46parseTopDecl: (byte 0) */
  bytes2word(NEEDHEAP_P1,77,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_IN3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_N1)
, bytes2word(4,HEAP_CVAL_I5,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,6)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_N1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,8)
, bytes2word(HEAP_CVAL_N1,9,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_N1,9)
, bytes2word(HEAP_OFF_N1,13,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,9,HEAP_OFF_N1,21)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,9)
, bytes2word(HEAP_OFF_N1,29,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_N1,9,HEAP_OFF_N1,37)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_N1,9)
, bytes2word(HEAP_OFF_N1,45,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,14,HEAP_CVAL_P1,15)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,17,HEAP_CVAL_P1,18)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,19)
, bytes2word(HEAP_CVAL_P1,20,HEAP_CVAL_P1,21)
, bytes2word(HEAP_CVAL_P1,22,HEAP_CVAL_P1,20)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,23,HEAP_OFF_N1)
, bytes2word(28,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,0,0)
, CONSTR(39,0,0)
, CONSTR(49,0,0)
, CONSTR(37,0,0)
, CONSTR(38,0,0)
, CONSTR(52,0,0)
, CONSTR(0,2,0)
, CONSTR(55,0,0)
,	/* CT_v3437: (byte 0) */
  HW(21,0)
, 0
,	/* CF_Parse_46Parse_46parseTopDecl: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseTopDecl))
, CAPTAG(useLabel(FN_LAMBDA3190),1)
, CAPTAG(useLabel(FN_LAMBDA3193),1)
, CAPTAG(useLabel(FN_LAMBDA3198),1)
, CAPTAG(useLabel(FN_LAMBDA3199),1)
, CAPTAG(useLabel(FN_LAMBDA3202),1)
, CAPTAG(useLabel(FN_LAMBDA3205),1)
, CAPTAG(useLabel(FN_LAMBDA3206),4)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46varid)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46k_95primitive)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46ParseLex_46intPrim)
, useLabel(CF_Parse_46ParseLex_46coloncolon)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse2_46parseType)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, useLabel(CF_Parse_46Parse_46parseForeign)
, useLabel(CF_Parse_46Parse_46parseDecl)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46cases))
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3438)
,	/* FN_LAMBDA3206: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(8,4,0)
,	/* CT_v3438: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA3206: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3206),4)
, bytes2word(1,0,0,1)
, useLabel(CT_v3439)
,	/* FN_LAMBDA3205: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,7,HEAP_CVAL_P1)
, bytes2word(8,HEAP_CVAL_P1,9,HEAP_OFF_N1)
, bytes2word(7,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(11,HEAP_CVAL_P1,12,HEAP_CVAL_P1)
, bytes2word(13,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(8,PUSH_HEAP,HEAP_CVAL_P1,14)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3439: (byte 0) */
  HW(12,1)
, 0
,	/* F0_LAMBDA3205: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3205),1)
, CAPTAG(useLabel(FN_LAMBDA3203),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46lpar)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manySep))
, useLabel(CF_Parse_46ParseLex_46comma)
, useLabel(CF_Parse_46Parse2_46parseType)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46rpar)
, CAPTAG(useLabel(FN_LAMBDA3204),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3440)
,	/* FN_LAMBDA3204: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_ARG,1,HEAP_OFF_N1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(4,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(7,1,0)
, CONSTR(1,2,0)
, CONSTR(0,0,0)
,	/* CT_v3440: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3204: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3204),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v3441)
,	/* FN_LAMBDA3203: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(7,1,0)
,	/* CT_v3441: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3203: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3203),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v3442)
,	/* FN_LAMBDA3202: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_P1,36,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_P1,9,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,13,HEAP_CVAL_P1,14)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,15)
, bytes2word(HEAP_CVAL_N1,2,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(2,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_P1,17,HEAP_OFF_N1)
, bytes2word(9,HEAP_OFF_N1,4,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,24)
, bytes2word(HEAP_OFF_N1,5,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
, CONSTR(0,0,0)
, CONSTR(56,0,0)
,	/* CT_v3442: (byte 0) */
  HW(15,1)
, 0
,	/* F0_LAMBDA3202: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3202),1)
, CAPTAG(useLabel(FN_LAMBDA3201),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse2_46parseContexts)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46ParseLex_46aconid)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, useLabel(CF_Parse_46Parse2_46parseInst)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, useLabel(CF_Parse_46Parse_46parseValdefs)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLib_46rcurl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3446)
,	/* FN_LAMBDA3201: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I2,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_I1,HEAP_ARG,1,HEAP_I2)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3446: (byte 0) */
  HW(1,2)
, 0
,	/* F0_LAMBDA3201: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3201),2)
, CAPTAG(useLabel(FN_LAMBDA3200),2)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3447)
,	/* FN_LAMBDA3200: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,5)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(6,5,0)
,	/* CT_v3447: (byte 0) */
  HW(0,5)
, 0
,	/* F0_LAMBDA3200: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3200),5)
, bytes2word(1,0,0,1)
, useLabel(CT_v3448)
,	/* FN_LAMBDA3199: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_P1,41,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_I5,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_P1,8,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,10)
, bytes2word(HEAP_CVAL_N1,1,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,15,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,17,HEAP_CVAL_N1,2)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,3,HEAP_CVAL_P1)
, bytes2word(19,HEAP_OFF_N1,9,HEAP_OFF_N1)
, bytes2word(4,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,27,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
, CONSTR(0,0,0)
, CONSTR(56,0,0)
,	/* CT_v3448: (byte 0) */
  HW(17,1)
, 0
,	/* F0_LAMBDA3199: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3199),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(F0_MkSyntax_46mkDeclClass)
, useLabel(CF_Parse_46Parse2_46parseContexts)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46ParseLex_46aconid)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46some))
, useLabel(CF_Parse_46ParseLex_46avarid)
, useLabel(CF_Parse_46Parse_46parseFunDeps)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(F0_Prelude_46id)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, useLabel(CF_Parse_46Parse_46parseCDecls)
, useLabel(CF_Parse_46ParseLib_46rcurl)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46parse))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3449)
,	/* FN_LAMBDA3198: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_P1,50,HEAP_CVAL_I3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,7,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_P1,12)
, bytes2word(HEAP_CVAL_P1,13,HEAP_CVAL_P1,14)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_P1,15,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,16,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,17)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,18,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_P1,19,HEAP_CVAL_P1,20)
, bytes2word(HEAP_CVAL_P1,21,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,10,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,22,HEAP_CVAL_P1,23)
, bytes2word(HEAP_CVAL_P1,15,HEAP_OFF_N1,2)
, bytes2word(HEAP_CVAL_P1,18,HEAP_CVAL_P1,24)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,24,HEAP_OFF_N1)
, bytes2word(37,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3449: (byte 0) */
  HW(22,1)
, 0
,	/* F0_LAMBDA3198: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3198),1)
, CAPTAG(useLabel(FN_LAMBDA3194),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, useLabel(CF_Parse_46ParseLex_46k_95primitive)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46ParseLex_46conid)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46equal)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46ParseLex_46intPrim)
, CAPTAG(useLabel(FN_LAMBDA3195),5)
, CAPTAG(useLabel(FN_LAMBDA3196),1)
, VAPTAG(useLabel(FN_Prelude_46_46))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46ParseLex_46unboxed)
, useLabel(CF_Parse_46Parse2_46parseContexts)
, useLabel(CF_Parse_46Parse2_46parseSimple)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46someSep))
, useLabel(CF_Parse_46ParseLex_46pipe)
, useLabel(CF_Parse_46Parse2_46parseConstr)
, useLabel(CF_Parse_46Parse2_46parseDeriving)
, CAPTAG(useLabel(FN_LAMBDA3197),1)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3450)
,	/* FN_LAMBDA3197: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,2,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_N1,1,HEAP_CVAL_N1)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_OFF_N1)
, bytes2word(6,HEAP_OFF_N1,5,HEAP_ARG)
, bytes2word(1,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(6,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(2,5,0)
, CONSTR(1,1,0)
, CONSTR(0,0,0)
,	/* CT_v3450: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3197: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3197),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v3451)
,	/* FN_LAMBDA3196: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,1,0)
,	/* CT_v3451: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3196: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3196),1)
, bytes2word(5,0,4,1)
, bytes2word(3,2,2,3)
, bytes2word(1,4,0,5)
, useLabel(CT_v3452)
,	/* FN_LAMBDA3195: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,5)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(2,5,0)
,	/* CT_v3452: (byte 0) */
  HW(0,5)
, 0
,	/* F0_LAMBDA3195: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3195),5)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3456)
,	/* FN_LAMBDA3194: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,2,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I1,HEAP_I2,HEAP_ARG)
, bytes2word(2,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(3,3,0)
,	/* CT_v3456: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3194: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3194),2)
, bytes2word(1,0,0,1)
, useLabel(CT_v3457)
,	/* FN_LAMBDA3193: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(7,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,9,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_N1,1,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I4,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,12,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,12,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,13,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v3457: (byte 0) */
  HW(12,1)
, 0
,	/* F0_LAMBDA3193: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3193),1)
, CAPTAG(useLabel(FN_LAMBDA3191),4)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse2_46parseContexts)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse2_46parseSimple)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46equal)
, CAPTAG(useLabel(FN_LAMBDA3192),2)
, CAPTAG(useLabel(FN_Prelude_46flip),1)
, useLabel(CF_Parse_46Parse2_46parseConstr)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse2_46parseDeriving)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3458)
,	/* FN_LAMBDA3192: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
,	/* CT_v3458: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3192: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3192),2)
, bytes2word(0,0,4,0)
, bytes2word(3,1,2,2)
, bytes2word(1,3,0,4)
, useLabel(CT_v3459)
,	/* FN_LAMBDA3191: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,2)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, CONSTR(2,5,0)
, CONSTR(0,0,0)
,	/* CT_v3459: (byte 0) */
  HW(0,4)
, 0
,	/* F0_LAMBDA3191: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3191),4)
, bytes2word(1,0,0,1)
, useLabel(CT_v3460)
,	/* FN_LAMBDA3190: (byte 0) */
  bytes2word(ZAP_ARG_I1,NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_I5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(7,PUSH_HEAP,HEAP_CVAL_P1,8)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,9)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3460: (byte 0) */
  HW(7,1)
, 0
,	/* F0_LAMBDA3190: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3190),1)
, CAPTAG(useLabel(FN_LAMBDA3189),2)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, useLabel(CF_Parse_46Parse2_46parseSimple)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46equal)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse2_46parseType)
, bytes2word(0,0,2,0)
, bytes2word(1,1,0,2)
, useLabel(CT_v3461)
,	/* FN_LAMBDA3189: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v3461: (byte 0) */
  HW(0,2)
, 0
,	/* F0_LAMBDA3189: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3189),2)
, bytes2word(0,0,0,0)
, useLabel(CT_v3462)
,	/* FN_Parse_46Parse_46parseTopDecls: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_CVAL_I5)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_I4,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,10)
, bytes2word(HEAP_OFF_N1,11,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v3462: (byte 0) */
  HW(8,0)
, 0
,	/* CF_Parse_46Parse_46parseTopDecls: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseTopDecls))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46revChk))
, useLabel(CF_Parse_46ParseLex_46semi)
, useLabel(CF_Parse_46Parse_46parseTopDecls)
, CAPTAG(useLabel(FN_LAMBDA3207),1)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46manysSep))
, useLabel(CF_Parse_46Parse_46parseTopDecl)
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseAp))
, VAPTAG(useLabel(FN_Parse_46ParseCore_46orelse))
, bytes2word(1,0,0,1)
, useLabel(CT_v3463)
,	/* FN_LAMBDA3207: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG,1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,1,0)
,	/* CT_v3463: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA3207: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3207),1)
, bytes2word(0,0,0,0)
, useLabel(CT_v3464)
,	/* FN_Parse_46Parse_46parseModule: (byte 0) */
  bytes2word(NEEDHEAP_P1,40,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_N1,1)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,2,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,6,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,7,HEAP_OFF_N1)
, bytes2word(4,HEAP_CVAL_P1,8,HEAP_CVAL_P1)
, bytes2word(9,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_N1,2,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,2,HEAP_CVAL_P1,11)
, bytes2word(HEAP_OFF_N1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,12,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,13)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,14,HEAP_CVAL_P1,7)
, bytes2word(HEAP_OFF_N1,4,HEAP_CVAL_P1,15)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,4)
, bytes2word(HEAP_CVAL_P1,16,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(11,HEAP_OFF_N1,4,HEAP_CVAL_P1)
, bytes2word(17,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, CONSTR(56,0,0)
, CONSTR(51,0,0)
,	/* CT_v3464: (byte 0) */
  HW(15,0)
, 0
,	/* CF_Parse_46Parse_46parseModule: (byte 0) */
  VAPTAG(useLabel(FN_Parse_46Parse_46parseModule))
, CAPTAG(useLabel(FN_LAMBDA3208),6)
, CAPTAG(useLabel(FN_Prelude_46uncurry),1)
, VAPTAG(useLabel(FN_Parse_46ParseLex_46lit))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46parseChk))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46apCut))
, useLabel(CF_Parse_46Parse2_46bigModId)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46ap))
, useLabel(CF_Parse_46Parse2_46parseExports)
, VAPTAG(useLabel(FN_Parse_46ParseCore_46chk))
, useLabel(CF_Parse_46ParseLex_46lcurl)
, useLabel(CF_Parse_46Parse2_46parseImpDecls)
, useLabel(CF_Parse_46Parse2_46parseFixDecls)
, useLabel(CF_Parse_46Parse_46parseTopDecls)
, useLabel(CF_Parse_46Parse_46optSemi)
, useLabel(CF_Parse_46ParseLib_46rcurl)
, bytes2word(0,0,6,0)
, bytes2word(5,1,4,2)
, bytes2word(3,3,2,4)
, bytes2word(1,5,0,6)
, useLabel(CT_v3465)
,	/* FN_LAMBDA3208: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,6,0)
,	/* CT_v3465: (byte 0) */
  HW(0,6)
, 0
,	/* F0_LAMBDA3208: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA3208),6)
, bytes2word(0,0,0,0)
, useLabel(CT_v3466)
,};
Node FN_Parse_46Parse_46parseProg[] = {
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_CVAL_I5,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v3466: (byte 0) */
  HW(3,0)
, 0
,};
Node CF_Parse_46Parse_46parseProg[] = {
  VAPTAG(useLabel(FN_Parse_46Parse_46parseProg))
, VAPTAG(useLabel(FN_Parse_46ParseLib_46chkCut))
, useLabel(CF_Parse_46Parse_46parseModule)
, useLabel(CF_Parse_46ParseLex_46eof)
,	/* ST_v3419: (byte 0) */
 	/* ST_v3350: (byte 1) */
  bytes2word(0,68,101,112)
, bytes2word(114,101,99,97)
, bytes2word(116,101,100,32)
, bytes2word(70,70,73,32)
, bytes2word(115,121,110,116)
, bytes2word(97,120,32,117)
, bytes2word(115,101,100,32)
,	/* ST_v3432: (byte 4) */
  bytes2word(97,116,32,0)
, bytes2word(80,97,114,115)
, bytes2word(101,46,80,97)
, bytes2word(114,115,101,58)
, bytes2word(32,80,97,116)
, bytes2word(116,101,114,110)
, bytes2word(32,109,97,116)
, bytes2word(99,104,32,102)
, bytes2word(97,105,108,117)
, bytes2word(114,101,32,105)
, bytes2word(110,32,102,117)
, bytes2word(110,99,116,105)
, bytes2word(111,110,32,97)
, bytes2word(116,32,49,55)
, bytes2word(53,58,51,45)
, bytes2word(49,55,54,58)
,	/* ST_v3397: (byte 4) */
  bytes2word(52,57,46,0)
, bytes2word(80,97,114,115)
, bytes2word(101,46,80,97)
, bytes2word(114,115,101,58)
, bytes2word(32,80,97,116)
, bytes2word(116,101,114,110)
, bytes2word(32,109,97,116)
, bytes2word(99,104,32,102)
, bytes2word(97,105,108,117)
, bytes2word(114,101,32,105)
, bytes2word(110,32,108,97)
, bytes2word(109,98,100,97)
, bytes2word(32,97,116,32)
, bytes2word(49,49,54,58)
, bytes2word(49,49,45,49)
, bytes2word(49,56,58,51)
,	/* ST_v3371: (byte 3) */
  bytes2word(52,46,0,80)
, bytes2word(97,114,115,101)
, bytes2word(46,80,97,114)
, bytes2word(115,101,58,32)
, bytes2word(80,97,116,116)
, bytes2word(101,114,110,32)
, bytes2word(109,97,116,99)
, bytes2word(104,32,102,97)
, bytes2word(105,108,117,114)
, bytes2word(101,32,105,110)
, bytes2word(32,108,97,109)
, bytes2word(98,100,97,32)
, bytes2word(97,116,32,49)
, bytes2word(50,51,58,57)
, bytes2word(45,49,50,52)
, bytes2word(58,54,49,46)
,	/* ST_v3348: (byte 1) */
  bytes2word(0,80,97,114)
, bytes2word(115,101,46,80)
, bytes2word(97,114,115,101)
, bytes2word(58,32,80,97)
, bytes2word(116,116,101,114)
, bytes2word(110,32,109,97)
, bytes2word(116,99,104,32)
, bytes2word(102,97,105,108)
, bytes2word(117,114,101,32)
, bytes2word(105,110,32,108)
, bytes2word(97,109,98,100)
, bytes2word(97,32,97,116)
, bytes2word(32,49,50,57)
, bytes2word(58,49,49,45)
, bytes2word(49,51,50,58)
,	/* ST_v3409: (byte 4) */
  bytes2word(54,49,46,0)
, bytes2word(98,117,105,108)
,	/* ST_v3407: (byte 4) */
  bytes2word(116,105,110,0)
, bytes2word(99,112,108,117)
, bytes2word(115,112,108,117)
,	/* ST_v3405: (byte 2) */
  bytes2word(115,0,100,111)
, bytes2word(116,110,101,116)
,	/* ST_v3413: (byte 1) */
  bytes2word(0,102,97,115)
, bytes2word(116,99,99,97)
,	/* ST_v3411: (byte 3) */
  bytes2word(108,108,0,102)
, bytes2word(97,115,116,115)
, bytes2word(116,100,99,97)
,	/* ST_v3403: (byte 3) */
  bytes2word(108,108,0,106)
,	/* ST_v3415: (byte 3) */
  bytes2word(118,109,0,112)
, bytes2word(114,105,109,105)
, bytes2word(116,105,118,101)
,	/* ST_v3417: (byte 1) */
  bytes2word(0,115,116,100)
, bytes2word(99,97,108,108)
, bytes2word(0,0,0,0)
,};
