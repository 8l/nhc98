#include "newmacros.h"
#include "runtime.h"

#define CT_v780	((void*)startLabel+76)
#define FN_LAMBDA776	((void*)startLabel+128)
#define CT_v781	((void*)startLabel+176)
#define F0_LAMBDA776	((void*)startLabel+184)
#define FN_LAMBDA775	((void*)startLabel+232)
#define v799	((void*)startLabel+248)
#define v789	((void*)startLabel+252)
#define v800	((void*)startLabel+266)
#define v793	((void*)startLabel+270)
#define v801	((void*)startLabel+280)
#define v797	((void*)startLabel+284)
#define v790	((void*)startLabel+319)
#define v786	((void*)startLabel+324)
#define v782	((void*)startLabel+329)
#define CT_v802	((void*)startLabel+340)
#define F0_LAMBDA775	((void*)startLabel+348)
#define FN_LAMBDA774	((void*)startLabel+400)
#define CT_v806	((void*)startLabel+444)
#define F0_LAMBDA774	((void*)startLabel+452)
#define FN_LAMBDA773	((void*)startLabel+500)
#define v824	((void*)startLabel+516)
#define v814	((void*)startLabel+520)
#define v825	((void*)startLabel+534)
#define v818	((void*)startLabel+538)
#define v826	((void*)startLabel+548)
#define v822	((void*)startLabel+552)
#define v815	((void*)startLabel+587)
#define v811	((void*)startLabel+592)
#define v807	((void*)startLabel+597)
#define CT_v827	((void*)startLabel+608)
#define F0_LAMBDA773	((void*)startLabel+616)
#define FN_LAMBDA772	((void*)startLabel+668)
#define CT_v831	((void*)startLabel+712)
#define F0_LAMBDA772	((void*)startLabel+720)
#define FN_LAMBDA771	((void*)startLabel+768)
#define v849	((void*)startLabel+784)
#define v839	((void*)startLabel+788)
#define v850	((void*)startLabel+802)
#define v843	((void*)startLabel+806)
#define v851	((void*)startLabel+816)
#define v847	((void*)startLabel+820)
#define v840	((void*)startLabel+855)
#define v836	((void*)startLabel+860)
#define v832	((void*)startLabel+865)
#define CT_v852	((void*)startLabel+876)
#define F0_LAMBDA771	((void*)startLabel+884)
#define FN_LAMBDA770	((void*)startLabel+936)
#define CT_v856	((void*)startLabel+980)
#define F0_LAMBDA770	((void*)startLabel+988)
#define FN_LAMBDA769	((void*)startLabel+1036)
#define v874	((void*)startLabel+1052)
#define v864	((void*)startLabel+1056)
#define v875	((void*)startLabel+1070)
#define v868	((void*)startLabel+1074)
#define v876	((void*)startLabel+1084)
#define v872	((void*)startLabel+1088)
#define v865	((void*)startLabel+1123)
#define v861	((void*)startLabel+1128)
#define v857	((void*)startLabel+1133)
#define CT_v877	((void*)startLabel+1144)
#define F0_LAMBDA769	((void*)startLabel+1152)
#define FN_LAMBDA768	((void*)startLabel+1204)
#define CT_v881	((void*)startLabel+1248)
#define F0_LAMBDA768	((void*)startLabel+1256)
#define FN_LAMBDA767	((void*)startLabel+1304)
#define v899	((void*)startLabel+1320)
#define v889	((void*)startLabel+1324)
#define v900	((void*)startLabel+1338)
#define v893	((void*)startLabel+1342)
#define v901	((void*)startLabel+1352)
#define v897	((void*)startLabel+1356)
#define v890	((void*)startLabel+1391)
#define v886	((void*)startLabel+1396)
#define v882	((void*)startLabel+1401)
#define CT_v902	((void*)startLabel+1412)
#define F0_LAMBDA767	((void*)startLabel+1420)
#define FN_LAMBDA766	((void*)startLabel+1472)
#define CT_v906	((void*)startLabel+1516)
#define F0_LAMBDA766	((void*)startLabel+1524)
#define FN_LAMBDA765	((void*)startLabel+1572)
#define v924	((void*)startLabel+1588)
#define v914	((void*)startLabel+1592)
#define v925	((void*)startLabel+1606)
#define v918	((void*)startLabel+1610)
#define v926	((void*)startLabel+1620)
#define v922	((void*)startLabel+1624)
#define v915	((void*)startLabel+1659)
#define v911	((void*)startLabel+1664)
#define v907	((void*)startLabel+1669)
#define CT_v927	((void*)startLabel+1680)
#define F0_LAMBDA765	((void*)startLabel+1688)
#define FN_LAMBDA764	((void*)startLabel+1740)
#define CT_v931	((void*)startLabel+1784)
#define F0_LAMBDA764	((void*)startLabel+1792)
#define FN_LAMBDA763	((void*)startLabel+1840)
#define v949	((void*)startLabel+1856)
#define v939	((void*)startLabel+1860)
#define v950	((void*)startLabel+1874)
#define v943	((void*)startLabel+1878)
#define v951	((void*)startLabel+1888)
#define v947	((void*)startLabel+1892)
#define v940	((void*)startLabel+1927)
#define v936	((void*)startLabel+1932)
#define v932	((void*)startLabel+1937)
#define CT_v952	((void*)startLabel+1948)
#define F0_LAMBDA763	((void*)startLabel+1956)
#define FN_LAMBDA762	((void*)startLabel+2008)
#define CT_v956	((void*)startLabel+2052)
#define F0_LAMBDA762	((void*)startLabel+2060)
#define FN_LAMBDA761	((void*)startLabel+2108)
#define v974	((void*)startLabel+2124)
#define v964	((void*)startLabel+2128)
#define v975	((void*)startLabel+2142)
#define v968	((void*)startLabel+2146)
#define v976	((void*)startLabel+2156)
#define v972	((void*)startLabel+2160)
#define v965	((void*)startLabel+2195)
#define v961	((void*)startLabel+2200)
#define v957	((void*)startLabel+2205)
#define CT_v977	((void*)startLabel+2216)
#define F0_LAMBDA761	((void*)startLabel+2224)
#define FN_LAMBDA760	((void*)startLabel+2276)
#define CT_v981	((void*)startLabel+2320)
#define F0_LAMBDA760	((void*)startLabel+2328)
#define FN_LAMBDA759	((void*)startLabel+2376)
#define v999	((void*)startLabel+2392)
#define v989	((void*)startLabel+2396)
#define v1000	((void*)startLabel+2410)
#define v993	((void*)startLabel+2414)
#define v1001	((void*)startLabel+2424)
#define v997	((void*)startLabel+2428)
#define v990	((void*)startLabel+2463)
#define v986	((void*)startLabel+2468)
#define v982	((void*)startLabel+2473)
#define CT_v1002	((void*)startLabel+2484)
#define F0_LAMBDA759	((void*)startLabel+2492)
#define FN_LAMBDA758	((void*)startLabel+2544)
#define CT_v1006	((void*)startLabel+2588)
#define F0_LAMBDA758	((void*)startLabel+2596)
#define FN_LAMBDA757	((void*)startLabel+2644)
#define v1024	((void*)startLabel+2660)
#define v1014	((void*)startLabel+2664)
#define v1025	((void*)startLabel+2678)
#define v1018	((void*)startLabel+2682)
#define v1026	((void*)startLabel+2692)
#define v1022	((void*)startLabel+2696)
#define v1015	((void*)startLabel+2731)
#define v1011	((void*)startLabel+2736)
#define v1007	((void*)startLabel+2741)
#define CT_v1027	((void*)startLabel+2752)
#define F0_LAMBDA757	((void*)startLabel+2760)
#define FN_LAMBDA756	((void*)startLabel+2812)
#define CT_v1031	((void*)startLabel+2856)
#define F0_LAMBDA756	((void*)startLabel+2864)
#define FN_LAMBDA755	((void*)startLabel+2912)
#define v1049	((void*)startLabel+2928)
#define v1039	((void*)startLabel+2932)
#define v1050	((void*)startLabel+2946)
#define v1043	((void*)startLabel+2950)
#define v1051	((void*)startLabel+2960)
#define v1047	((void*)startLabel+2964)
#define v1040	((void*)startLabel+2999)
#define v1036	((void*)startLabel+3004)
#define v1032	((void*)startLabel+3009)
#define CT_v1052	((void*)startLabel+3020)
#define F0_LAMBDA755	((void*)startLabel+3028)
#define FN_LAMBDA754	((void*)startLabel+3080)
#define CT_v1056	((void*)startLabel+3124)
#define F0_LAMBDA754	((void*)startLabel+3132)
#define FN_LAMBDA753	((void*)startLabel+3180)
#define v1074	((void*)startLabel+3196)
#define v1064	((void*)startLabel+3200)
#define v1075	((void*)startLabel+3214)
#define v1068	((void*)startLabel+3218)
#define v1076	((void*)startLabel+3228)
#define v1072	((void*)startLabel+3232)
#define v1065	((void*)startLabel+3265)
#define v1061	((void*)startLabel+3270)
#define v1057	((void*)startLabel+3275)
#define CT_v1077	((void*)startLabel+3300)
#define F0_LAMBDA753	((void*)startLabel+3308)
#define CT_v1078	((void*)startLabel+3372)
#define CT_v1079	((void*)startLabel+3480)
extern Node FN_Prelude_46readParen[];
extern Node FN_Prelude_46lex[];
extern Node FN_Prelude_46_95foldr[];
extern Node FN_Prelude_46reads[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Prelude_46Read_46Prelude_4611[];
extern Node FN_Prelude_46_95_46readList[];

static Node startLabel[] = {
  bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v780)
,};
Node FN_Prelude_46Read_46Prelude_4611_46readsPrec[] = {
  bytes2word(ZAP_ARG,12,NEEDHEAP_I32,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_ARG_ARG,11)
, bytes2word(10,HEAP_ARG_ARG,9,8)
, bytes2word(HEAP_ARG_ARG,7,6,HEAP_ARG_ARG)
, bytes2word(5,4,HEAP_ARG_ARG,3)
, bytes2word(2,HEAP_ARG,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,14,HEAP_OFF_N1)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v780: (byte 0) */
  HW(2,12)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4611_46readsPrec[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4611_46readsPrec),12)
, CAPTAG(useLabel(FN_LAMBDA776),1)
, VAPTAG(useLabel(FN_Prelude_46readParen))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v781)
,	/* FN_LAMBDA776: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_N1,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,16)
, bytes2word(HEAP_OFF_N1,5,HEAP_OFF_N1,4)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v781: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA776: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA776),12)
, CAPTAG(useLabel(FN_LAMBDA775),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v802)
,	/* FN_LAMBDA775: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v799: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v789: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(40),BOT(40),TOP(10),BOT(10))
,	/* v800: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v793: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v801: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v797: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v790: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v786: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v782: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v802: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA775: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA775),13)
, CAPTAG(useLabel(FN_LAMBDA774),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v806)
,	/* FN_LAMBDA774: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v806: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA774: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA774),12)
, CAPTAG(useLabel(FN_LAMBDA773),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v827)
,	/* FN_LAMBDA773: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v824: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v814: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v825: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v818: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v826: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v822: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v815: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v811: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v807: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v827: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA773: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA773),13)
, CAPTAG(useLabel(FN_LAMBDA772),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v831)
,	/* FN_LAMBDA772: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG,10,HEAP_CVAL_I4,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,15)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,12)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v831: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA772: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA772),12)
, CAPTAG(useLabel(FN_LAMBDA771),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v852)
,	/* FN_LAMBDA771: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v849: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v839: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v850: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v843: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v851: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v847: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v840: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v836: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v832: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v852: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA771: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA771),13)
, CAPTAG(useLabel(FN_LAMBDA770),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v856)
,	/* FN_LAMBDA770: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v856: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA770: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA770),12)
, CAPTAG(useLabel(FN_LAMBDA769),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v877)
,	/* FN_LAMBDA769: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v874: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v864: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v875: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v868: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v876: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v872: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v865: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v861: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v857: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v877: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA769: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA769),13)
, CAPTAG(useLabel(FN_LAMBDA768),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v881)
,	/* FN_LAMBDA768: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG,10,HEAP_CVAL_I4,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,15)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,12)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v881: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA768: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA768),12)
, CAPTAG(useLabel(FN_LAMBDA767),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v902)
,	/* FN_LAMBDA767: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v899: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v889: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v900: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v893: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v901: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v897: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v890: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v886: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v882: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v902: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA767: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA767),13)
, CAPTAG(useLabel(FN_LAMBDA766),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v906)
,	/* FN_LAMBDA766: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v906: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA766: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA766),12)
, CAPTAG(useLabel(FN_LAMBDA765),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v927)
,	/* FN_LAMBDA765: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v924: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v914: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v925: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v918: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v926: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v922: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v915: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v911: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v907: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v927: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA765: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA765),13)
, CAPTAG(useLabel(FN_LAMBDA764),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v931)
,	/* FN_LAMBDA764: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,5)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG,10,HEAP_CVAL_I4,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,15)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,12)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v931: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA764: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA764),12)
, CAPTAG(useLabel(FN_LAMBDA763),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v952)
,	/* FN_LAMBDA763: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v949: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v939: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v950: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v943: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v951: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v947: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v940: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v936: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v932: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v952: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA763: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA763),13)
, CAPTAG(useLabel(FN_LAMBDA762),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v956)
,	/* FN_LAMBDA762: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v956: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA762: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA762),12)
, CAPTAG(useLabel(FN_LAMBDA761),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v977)
,	/* FN_LAMBDA761: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v974: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v964: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v975: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v968: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v976: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v972: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v965: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v961: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v957: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v977: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA761: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA761),13)
, CAPTAG(useLabel(FN_LAMBDA760),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v981)
,	/* FN_LAMBDA760: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG,7,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG,10,HEAP_CVAL_I4,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,15)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,12)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v981: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA760: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA760),12)
, CAPTAG(useLabel(FN_LAMBDA759),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1002)
,	/* FN_LAMBDA759: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v999: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v989: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1000: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v993: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1001: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v997: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v990: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v986: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v982: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1002: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA759: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA759),13)
, CAPTAG(useLabel(FN_LAMBDA758),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1006)
,	/* FN_LAMBDA758: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1006: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA758: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA758),12)
, CAPTAG(useLabel(FN_LAMBDA757),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1027)
,	/* FN_LAMBDA757: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1024: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1014: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1025: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1018: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1026: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1022: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v1015: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v1011: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v1007: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1027: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA757: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA757),13)
, CAPTAG(useLabel(FN_LAMBDA756),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1031)
,	/* FN_LAMBDA756: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG,9,HEAP_P1,0)
, bytes2word(HEAP_ARG,10,HEAP_CVAL_I4,HEAP_I1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1,15)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,12)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1031: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA756: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA756),12)
, CAPTAG(useLabel(FN_LAMBDA755),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1052)
,	/* FN_LAMBDA755: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1049: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1039: (byte 4) */
  bytes2word(POP_I1,JUMP,74,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1050: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1043: (byte 2) */
  bytes2word(51,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1051: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1047: (byte 4) */
  bytes2word(POP_I1,JUMP,37,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_P1,6)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,5)
,	/* v1040: (byte 3) */
  bytes2word(HEAP_ARG,13,RETURN_EVAL,POP_P1)
,	/* v1036: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v1032: (byte 1) */
  bytes2word(0,PUSH_ARG,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1052: (byte 0) */
  HW(4,13)
, 0
,	/* F0_LAMBDA755: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA755),13)
, CAPTAG(useLabel(FN_LAMBDA754),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1056)
,	/* FN_LAMBDA754: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_P1)
, bytes2word(0,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,15,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1056: (byte 0) */
  HW(3,12)
, 0
,	/* F0_LAMBDA754: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA754),12)
, CAPTAG(useLabel(FN_LAMBDA753),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1077)
,	/* FN_LAMBDA753: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1074: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1064: (byte 4) */
  bytes2word(POP_I1,JUMP,72,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(41),BOT(41),TOP(10),BOT(10))
,	/* v1075: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1068: (byte 2) */
  bytes2word(49,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1076: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1072: (byte 4) */
  bytes2word(POP_I1,JUMP,35,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_N1,2,HEAP_OFF_N1,13)
, bytes2word(HEAP_P1,3,PUSH_HEAP,HEAP_CVAL_IN3)
, bytes2word(HEAP_OFF_N1,4,HEAP_ARG,13)
,	/* v1065: (byte 1) */
  bytes2word(RETURN,POP_P1,2,JUMP)
,	/* v1061: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v1057: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,11,0)
,	/* CT_v1077: (byte 0) */
  HW(0,13)
, 0
,	/* F0_LAMBDA753: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA753),13)
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1078)
,};
Node FN_Prelude_46Read_46Prelude_4611_46readList[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1078: (byte 0) */
  HW(2,11)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4611_46readList[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4611_46readList),11)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4611))
, VAPTAG(useLabel(FN_Prelude_46_95_46readList))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v1079)
,};
Node FN_Prelude_46Read_46Prelude_4611[] = {
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG,11)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_I2,HEAP_I1)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v1079: (byte 0) */
  HW(2,11)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4611[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4611),11)
, CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4611_46readsPrec),1)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4611_46readList))
,};
