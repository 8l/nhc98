#include "newmacros.h"
#include "runtime.h"

#define CT_v884	((void*)startLabel+84)
#define FN_LAMBDA880	((void*)startLabel+140)
#define CT_v885	((void*)startLabel+192)
#define F0_LAMBDA880	((void*)startLabel+200)
#define FN_LAMBDA879	((void*)startLabel+252)
#define v903	((void*)startLabel+268)
#define v893	((void*)startLabel+272)
#define v904	((void*)startLabel+286)
#define v897	((void*)startLabel+290)
#define v905	((void*)startLabel+300)
#define v901	((void*)startLabel+304)
#define v894	((void*)startLabel+342)
#define v890	((void*)startLabel+347)
#define v886	((void*)startLabel+352)
#define CT_v906	((void*)startLabel+360)
#define F0_LAMBDA879	((void*)startLabel+368)
#define FN_LAMBDA878	((void*)startLabel+424)
#define CT_v910	((void*)startLabel+468)
#define F0_LAMBDA878	((void*)startLabel+476)
#define FN_LAMBDA877	((void*)startLabel+528)
#define v928	((void*)startLabel+544)
#define v918	((void*)startLabel+548)
#define v929	((void*)startLabel+562)
#define v922	((void*)startLabel+566)
#define v930	((void*)startLabel+576)
#define v926	((void*)startLabel+580)
#define v919	((void*)startLabel+618)
#define v915	((void*)startLabel+623)
#define v911	((void*)startLabel+628)
#define CT_v931	((void*)startLabel+636)
#define F0_LAMBDA877	((void*)startLabel+644)
#define FN_LAMBDA876	((void*)startLabel+700)
#define CT_v935	((void*)startLabel+748)
#define F0_LAMBDA876	((void*)startLabel+756)
#define FN_LAMBDA875	((void*)startLabel+808)
#define v953	((void*)startLabel+824)
#define v943	((void*)startLabel+828)
#define v954	((void*)startLabel+842)
#define v947	((void*)startLabel+846)
#define v955	((void*)startLabel+856)
#define v951	((void*)startLabel+860)
#define v944	((void*)startLabel+898)
#define v940	((void*)startLabel+903)
#define v936	((void*)startLabel+908)
#define CT_v956	((void*)startLabel+916)
#define F0_LAMBDA875	((void*)startLabel+924)
#define FN_LAMBDA874	((void*)startLabel+980)
#define CT_v960	((void*)startLabel+1024)
#define F0_LAMBDA874	((void*)startLabel+1032)
#define FN_LAMBDA873	((void*)startLabel+1084)
#define v978	((void*)startLabel+1100)
#define v968	((void*)startLabel+1104)
#define v979	((void*)startLabel+1118)
#define v972	((void*)startLabel+1122)
#define v980	((void*)startLabel+1132)
#define v976	((void*)startLabel+1136)
#define v969	((void*)startLabel+1174)
#define v965	((void*)startLabel+1179)
#define v961	((void*)startLabel+1184)
#define CT_v981	((void*)startLabel+1192)
#define F0_LAMBDA873	((void*)startLabel+1200)
#define FN_LAMBDA872	((void*)startLabel+1256)
#define CT_v985	((void*)startLabel+1304)
#define F0_LAMBDA872	((void*)startLabel+1312)
#define FN_LAMBDA871	((void*)startLabel+1364)
#define v1003	((void*)startLabel+1380)
#define v993	((void*)startLabel+1384)
#define v1004	((void*)startLabel+1398)
#define v997	((void*)startLabel+1402)
#define v1005	((void*)startLabel+1412)
#define v1001	((void*)startLabel+1416)
#define v994	((void*)startLabel+1454)
#define v990	((void*)startLabel+1459)
#define v986	((void*)startLabel+1464)
#define CT_v1006	((void*)startLabel+1472)
#define F0_LAMBDA871	((void*)startLabel+1480)
#define FN_LAMBDA870	((void*)startLabel+1536)
#define CT_v1010	((void*)startLabel+1580)
#define F0_LAMBDA870	((void*)startLabel+1588)
#define FN_LAMBDA869	((void*)startLabel+1640)
#define v1028	((void*)startLabel+1656)
#define v1018	((void*)startLabel+1660)
#define v1029	((void*)startLabel+1674)
#define v1022	((void*)startLabel+1678)
#define v1030	((void*)startLabel+1688)
#define v1026	((void*)startLabel+1692)
#define v1019	((void*)startLabel+1730)
#define v1015	((void*)startLabel+1735)
#define v1011	((void*)startLabel+1740)
#define CT_v1031	((void*)startLabel+1748)
#define F0_LAMBDA869	((void*)startLabel+1756)
#define FN_LAMBDA868	((void*)startLabel+1812)
#define CT_v1035	((void*)startLabel+1860)
#define F0_LAMBDA868	((void*)startLabel+1868)
#define FN_LAMBDA867	((void*)startLabel+1920)
#define v1053	((void*)startLabel+1936)
#define v1043	((void*)startLabel+1940)
#define v1054	((void*)startLabel+1954)
#define v1047	((void*)startLabel+1958)
#define v1055	((void*)startLabel+1968)
#define v1051	((void*)startLabel+1972)
#define v1044	((void*)startLabel+2010)
#define v1040	((void*)startLabel+2015)
#define v1036	((void*)startLabel+2020)
#define CT_v1056	((void*)startLabel+2028)
#define F0_LAMBDA867	((void*)startLabel+2036)
#define FN_LAMBDA866	((void*)startLabel+2092)
#define CT_v1060	((void*)startLabel+2136)
#define F0_LAMBDA866	((void*)startLabel+2144)
#define FN_LAMBDA865	((void*)startLabel+2196)
#define v1078	((void*)startLabel+2212)
#define v1068	((void*)startLabel+2216)
#define v1079	((void*)startLabel+2230)
#define v1072	((void*)startLabel+2234)
#define v1080	((void*)startLabel+2244)
#define v1076	((void*)startLabel+2248)
#define v1069	((void*)startLabel+2286)
#define v1065	((void*)startLabel+2291)
#define v1061	((void*)startLabel+2296)
#define CT_v1081	((void*)startLabel+2304)
#define F0_LAMBDA865	((void*)startLabel+2312)
#define FN_LAMBDA864	((void*)startLabel+2368)
#define CT_v1085	((void*)startLabel+2416)
#define F0_LAMBDA864	((void*)startLabel+2424)
#define FN_LAMBDA863	((void*)startLabel+2476)
#define v1103	((void*)startLabel+2492)
#define v1093	((void*)startLabel+2496)
#define v1104	((void*)startLabel+2510)
#define v1097	((void*)startLabel+2514)
#define v1105	((void*)startLabel+2524)
#define v1101	((void*)startLabel+2528)
#define v1094	((void*)startLabel+2566)
#define v1090	((void*)startLabel+2571)
#define v1086	((void*)startLabel+2576)
#define CT_v1106	((void*)startLabel+2584)
#define F0_LAMBDA863	((void*)startLabel+2592)
#define FN_LAMBDA862	((void*)startLabel+2648)
#define CT_v1110	((void*)startLabel+2692)
#define F0_LAMBDA862	((void*)startLabel+2700)
#define FN_LAMBDA861	((void*)startLabel+2752)
#define v1128	((void*)startLabel+2768)
#define v1118	((void*)startLabel+2772)
#define v1129	((void*)startLabel+2786)
#define v1122	((void*)startLabel+2790)
#define v1130	((void*)startLabel+2800)
#define v1126	((void*)startLabel+2804)
#define v1119	((void*)startLabel+2842)
#define v1115	((void*)startLabel+2847)
#define v1111	((void*)startLabel+2852)
#define CT_v1131	((void*)startLabel+2860)
#define F0_LAMBDA861	((void*)startLabel+2868)
#define FN_LAMBDA860	((void*)startLabel+2924)
#define CT_v1135	((void*)startLabel+2972)
#define F0_LAMBDA860	((void*)startLabel+2980)
#define FN_LAMBDA859	((void*)startLabel+3032)
#define v1153	((void*)startLabel+3048)
#define v1143	((void*)startLabel+3052)
#define v1154	((void*)startLabel+3066)
#define v1147	((void*)startLabel+3070)
#define v1155	((void*)startLabel+3080)
#define v1151	((void*)startLabel+3084)
#define v1144	((void*)startLabel+3122)
#define v1140	((void*)startLabel+3127)
#define v1136	((void*)startLabel+3132)
#define CT_v1156	((void*)startLabel+3140)
#define F0_LAMBDA859	((void*)startLabel+3148)
#define FN_LAMBDA858	((void*)startLabel+3204)
#define CT_v1160	((void*)startLabel+3248)
#define F0_LAMBDA858	((void*)startLabel+3256)
#define FN_LAMBDA857	((void*)startLabel+3308)
#define v1178	((void*)startLabel+3324)
#define v1168	((void*)startLabel+3328)
#define v1179	((void*)startLabel+3342)
#define v1172	((void*)startLabel+3346)
#define v1180	((void*)startLabel+3356)
#define v1176	((void*)startLabel+3360)
#define v1169	((void*)startLabel+3398)
#define v1165	((void*)startLabel+3403)
#define v1161	((void*)startLabel+3408)
#define CT_v1181	((void*)startLabel+3416)
#define F0_LAMBDA857	((void*)startLabel+3424)
#define FN_LAMBDA856	((void*)startLabel+3480)
#define CT_v1185	((void*)startLabel+3528)
#define F0_LAMBDA856	((void*)startLabel+3536)
#define FN_LAMBDA855	((void*)startLabel+3588)
#define v1203	((void*)startLabel+3604)
#define v1193	((void*)startLabel+3608)
#define v1204	((void*)startLabel+3622)
#define v1197	((void*)startLabel+3626)
#define v1205	((void*)startLabel+3636)
#define v1201	((void*)startLabel+3640)
#define v1194	((void*)startLabel+3678)
#define v1190	((void*)startLabel+3683)
#define v1186	((void*)startLabel+3688)
#define CT_v1206	((void*)startLabel+3696)
#define F0_LAMBDA855	((void*)startLabel+3704)
#define FN_LAMBDA854	((void*)startLabel+3760)
#define CT_v1210	((void*)startLabel+3804)
#define F0_LAMBDA854	((void*)startLabel+3812)
#define FN_LAMBDA853	((void*)startLabel+3864)
#define v1228	((void*)startLabel+3880)
#define v1218	((void*)startLabel+3884)
#define v1229	((void*)startLabel+3898)
#define v1222	((void*)startLabel+3902)
#define v1230	((void*)startLabel+3912)
#define v1226	((void*)startLabel+3916)
#define v1219	((void*)startLabel+3952)
#define v1215	((void*)startLabel+3957)
#define v1211	((void*)startLabel+3962)
#define CT_v1231	((void*)startLabel+3988)
#define F0_LAMBDA853	((void*)startLabel+3996)
#define CT_v1232	((void*)startLabel+4064)
#define CT_v1233	((void*)startLabel+4184)
extern Node FN_Prelude_46readParen[];
extern Node FN_Prelude_46lex[];
extern Node FN_Prelude_46_95foldr[];
extern Node FN_Prelude_46reads[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Prelude_46Read_46Prelude_4613[];
extern Node FN_Prelude_46_95_46readList[];

static Node startLabel[] = {
  bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v884)
,};
Node FN_Prelude_46Read_46Prelude_4613_46readsPrec[] = {
  bytes2word(ZAP_ARG,14,NEEDHEAP_I32,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_ARG_ARG,13)
, bytes2word(12,HEAP_ARG_ARG,11,10)
, bytes2word(HEAP_ARG_ARG,9,8,HEAP_ARG_ARG)
, bytes2word(7,6,HEAP_ARG_ARG,5)
, bytes2word(4,HEAP_ARG_ARG,3,2)
, bytes2word(HEAP_ARG,1,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,16,HEAP_OFF_N1,16)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v884: (byte 0) */
  HW(2,14)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4613_46readsPrec[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4613_46readsPrec),14)
, CAPTAG(useLabel(FN_LAMBDA880),1)
, VAPTAG(useLabel(FN_Prelude_46readParen))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v885)
,	/* FN_LAMBDA880: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_ARG,13,HEAP_CVAL_I4,HEAP_ARG)
, bytes2word(14,HEAP_CVAL_N1,1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,18,HEAP_OFF_N1)
, bytes2word(5,HEAP_OFF_N1,4,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v885: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA880: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA880),14)
, CAPTAG(useLabel(FN_LAMBDA879),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v906)
,	/* FN_LAMBDA879: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v903: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v893: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(40),BOT(40),TOP(10),BOT(10))
,	/* v904: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v897: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v905: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v901: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v894: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v890: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v886: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v906: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA879: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA879),15)
, CAPTAG(useLabel(FN_LAMBDA878),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v910)
,	/* FN_LAMBDA878: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v910: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA878: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA878),14)
, CAPTAG(useLabel(FN_LAMBDA877),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v931)
,	/* FN_LAMBDA877: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v928: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v918: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v929: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v922: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v930: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v926: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v919: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v915: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v911: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v931: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA877: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA877),15)
, CAPTAG(useLabel(FN_LAMBDA876),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v935)
,	/* FN_LAMBDA876: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG)
, bytes2word(12,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v935: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA876: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA876),14)
, CAPTAG(useLabel(FN_LAMBDA875),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v956)
,	/* FN_LAMBDA875: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v953: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v943: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v954: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v947: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v955: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v951: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v944: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v940: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v936: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v956: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA875: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA875),15)
, CAPTAG(useLabel(FN_LAMBDA874),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v960)
,	/* FN_LAMBDA874: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v960: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA874: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA874),14)
, CAPTAG(useLabel(FN_LAMBDA873),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v981)
,	/* FN_LAMBDA873: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v978: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v968: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v979: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v972: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v980: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v976: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v969: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v965: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v961: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v981: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA873: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA873),15)
, CAPTAG(useLabel(FN_LAMBDA872),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v985)
,	/* FN_LAMBDA872: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG)
, bytes2word(12,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v985: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA872: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA872),14)
, CAPTAG(useLabel(FN_LAMBDA871),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1006)
,	/* FN_LAMBDA871: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1003: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v993: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1004: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v997: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1005: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1001: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v994: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v990: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v986: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1006: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA871: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA871),15)
, CAPTAG(useLabel(FN_LAMBDA870),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1010)
,	/* FN_LAMBDA870: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1010: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA870: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA870),14)
, CAPTAG(useLabel(FN_LAMBDA869),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1031)
,	/* FN_LAMBDA869: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1028: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1018: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1029: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1022: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1030: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1026: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1019: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1015: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1011: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1031: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA869: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA869),15)
, CAPTAG(useLabel(FN_LAMBDA868),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1035)
,	/* FN_LAMBDA868: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,5)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG)
, bytes2word(12,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1035: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA868: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA868),14)
, CAPTAG(useLabel(FN_LAMBDA867),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1056)
,	/* FN_LAMBDA867: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1053: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1043: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1054: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1047: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1055: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1051: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1044: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1040: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1036: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1056: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA867: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA867),15)
, CAPTAG(useLabel(FN_LAMBDA866),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1060)
,	/* FN_LAMBDA866: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1060: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA866: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA866),14)
, CAPTAG(useLabel(FN_LAMBDA865),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1081)
,	/* FN_LAMBDA865: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1078: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1068: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1079: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1072: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1080: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1076: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1069: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1065: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1061: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1081: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA865: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA865),15)
, CAPTAG(useLabel(FN_LAMBDA864),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1085)
,	/* FN_LAMBDA864: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG,7,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG)
, bytes2word(12,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1085: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA864: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA864),14)
, CAPTAG(useLabel(FN_LAMBDA863),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1106)
,	/* FN_LAMBDA863: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1103: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1093: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1104: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1097: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1105: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1101: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1094: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1090: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1086: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1106: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA863: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA863),15)
, CAPTAG(useLabel(FN_LAMBDA862),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1110)
,	/* FN_LAMBDA862: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1110: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA862: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA862),14)
, CAPTAG(useLabel(FN_LAMBDA861),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1131)
,	/* FN_LAMBDA861: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1128: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1118: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1129: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1122: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1130: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1126: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1119: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1115: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1111: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1131: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA861: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA861),15)
, CAPTAG(useLabel(FN_LAMBDA860),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1135)
,	/* FN_LAMBDA860: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG,9,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_ARG)
, bytes2word(12,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1135: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA860: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA860),14)
, CAPTAG(useLabel(FN_LAMBDA859),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1156)
,	/* FN_LAMBDA859: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1153: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1143: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1154: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1147: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1155: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1151: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1144: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1140: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1136: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1156: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA859: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA859),15)
, CAPTAG(useLabel(FN_LAMBDA858),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1160)
,	/* FN_LAMBDA858: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1160: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA858: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA858),14)
, CAPTAG(useLabel(FN_LAMBDA857),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1181)
,	/* FN_LAMBDA857: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1178: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1168: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1179: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1172: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1180: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1176: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1169: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1165: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1161: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1181: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA857: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA857),15)
, CAPTAG(useLabel(FN_LAMBDA856),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1185)
,	/* FN_LAMBDA856: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG)
, bytes2word(11,HEAP_P1,0,HEAP_ARG)
, bytes2word(12,HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I5,HEAP_OFF_N1,17,HEAP_OFF_N1)
, bytes2word(4,HEAP_ARG,14,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1185: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA856: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA856),14)
, CAPTAG(useLabel(FN_LAMBDA855),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1206)
,	/* FN_LAMBDA855: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1203: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1193: (byte 4) */
  bytes2word(POP_I1,JUMP,77,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1204: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1197: (byte 2) */
  bytes2word(54,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1205: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1201: (byte 4) */
  bytes2word(POP_I1,JUMP,40,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(19,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v1194: (byte 2) */
  bytes2word(15,RETURN_EVAL,POP_P1,2)
,	/* v1190: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1186: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1206: (byte 0) */
  HW(4,15)
, 0
,	/* F0_LAMBDA855: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA855),15)
, CAPTAG(useLabel(FN_LAMBDA854),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1210)
,	/* FN_LAMBDA854: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG_ARG)
, bytes2word(11,12,HEAP_P1,0)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,17,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1210: (byte 0) */
  HW(3,14)
, 0
,	/* F0_LAMBDA854: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA854),14)
, CAPTAG(useLabel(FN_LAMBDA853),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(15,0,14,1)
, bytes2word(13,2,12,3)
, bytes2word(11,4,10,5)
, bytes2word(9,6,8,7)
, bytes2word(7,8,6,9)
, bytes2word(5,10,4,11)
, bytes2word(3,12,2,13)
, bytes2word(1,14,0,15)
, useLabel(CT_v1231)
,	/* FN_LAMBDA853: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,14,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1228: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1218: (byte 4) */
  bytes2word(POP_I1,JUMP,75,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(41),BOT(41),TOP(10),BOT(10))
,	/* v1229: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1222: (byte 2) */
  bytes2word(52,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1230: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1226: (byte 4) */
  bytes2word(POP_I1,JUMP,38,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG_ARG,11)
, bytes2word(12,HEAP_ARG,13,HEAP_CVAL_N1)
, bytes2word(2,HEAP_OFF_N1,15,HEAP_P1)
, bytes2word(3,PUSH_HEAP,HEAP_CVAL_IN3,HEAP_OFF_N1)
,	/* v1219: (byte 4) */
  bytes2word(4,HEAP_ARG,15,RETURN)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v1215: (byte 1) */
  bytes2word(0,POP_P1,2,JUMP)
,	/* v1211: (byte 2) */
  bytes2word(2,0,PUSH_ARG,15)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,13,0)
,	/* CT_v1231: (byte 0) */
  HW(0,15)
, 0
,	/* F0_LAMBDA853: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA853),15)
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1232)
,};
Node FN_Prelude_46Read_46Prelude_4613_46readList[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_ARG,13,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v1232: (byte 0) */
  HW(2,13)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4613_46readList[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4613_46readList),13)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4613))
, VAPTAG(useLabel(FN_Prelude_46_95_46readList))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1233)
,};
Node FN_Prelude_46Read_46Prelude_4613[] = {
  bytes2word(NEEDHEAP_P1,34,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG_ARG)
, bytes2word(11,12,HEAP_ARG,13)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_ARG,13,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_I2,HEAP_I1,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v1233: (byte 0) */
  HW(2,13)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4613[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4613),13)
, CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4613_46readsPrec),1)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4613_46readList))
,};
