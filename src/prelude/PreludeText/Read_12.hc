#include "newmacros.h"
#include "runtime.h"

#define CT_v832	((void*)startLabel+76)
#define FN_LAMBDA828	((void*)startLabel+128)
#define CT_v833	((void*)startLabel+176)
#define F0_LAMBDA828	((void*)startLabel+184)
#define FN_LAMBDA827	((void*)startLabel+236)
#define v851	((void*)startLabel+252)
#define v841	((void*)startLabel+256)
#define v852	((void*)startLabel+270)
#define v845	((void*)startLabel+274)
#define v853	((void*)startLabel+284)
#define v849	((void*)startLabel+288)
#define v842	((void*)startLabel+325)
#define v838	((void*)startLabel+330)
#define v834	((void*)startLabel+335)
#define CT_v854	((void*)startLabel+344)
#define F0_LAMBDA827	((void*)startLabel+352)
#define FN_LAMBDA826	((void*)startLabel+404)
#define CT_v858	((void*)startLabel+448)
#define F0_LAMBDA826	((void*)startLabel+456)
#define FN_LAMBDA825	((void*)startLabel+508)
#define v876	((void*)startLabel+524)
#define v866	((void*)startLabel+528)
#define v877	((void*)startLabel+542)
#define v870	((void*)startLabel+546)
#define v878	((void*)startLabel+556)
#define v874	((void*)startLabel+560)
#define v867	((void*)startLabel+597)
#define v863	((void*)startLabel+602)
#define v859	((void*)startLabel+607)
#define CT_v879	((void*)startLabel+616)
#define F0_LAMBDA825	((void*)startLabel+624)
#define FN_LAMBDA824	((void*)startLabel+676)
#define CT_v883	((void*)startLabel+720)
#define F0_LAMBDA824	((void*)startLabel+728)
#define FN_LAMBDA823	((void*)startLabel+780)
#define v901	((void*)startLabel+796)
#define v891	((void*)startLabel+800)
#define v902	((void*)startLabel+814)
#define v895	((void*)startLabel+818)
#define v903	((void*)startLabel+828)
#define v899	((void*)startLabel+832)
#define v892	((void*)startLabel+869)
#define v888	((void*)startLabel+874)
#define v884	((void*)startLabel+879)
#define CT_v904	((void*)startLabel+888)
#define F0_LAMBDA823	((void*)startLabel+896)
#define FN_LAMBDA822	((void*)startLabel+948)
#define CT_v908	((void*)startLabel+992)
#define F0_LAMBDA822	((void*)startLabel+1000)
#define FN_LAMBDA821	((void*)startLabel+1052)
#define v926	((void*)startLabel+1068)
#define v916	((void*)startLabel+1072)
#define v927	((void*)startLabel+1086)
#define v920	((void*)startLabel+1090)
#define v928	((void*)startLabel+1100)
#define v924	((void*)startLabel+1104)
#define v917	((void*)startLabel+1141)
#define v913	((void*)startLabel+1146)
#define v909	((void*)startLabel+1151)
#define CT_v929	((void*)startLabel+1160)
#define F0_LAMBDA821	((void*)startLabel+1168)
#define FN_LAMBDA820	((void*)startLabel+1220)
#define CT_v933	((void*)startLabel+1264)
#define F0_LAMBDA820	((void*)startLabel+1272)
#define FN_LAMBDA819	((void*)startLabel+1324)
#define v951	((void*)startLabel+1340)
#define v941	((void*)startLabel+1344)
#define v952	((void*)startLabel+1358)
#define v945	((void*)startLabel+1362)
#define v953	((void*)startLabel+1372)
#define v949	((void*)startLabel+1376)
#define v942	((void*)startLabel+1413)
#define v938	((void*)startLabel+1418)
#define v934	((void*)startLabel+1423)
#define CT_v954	((void*)startLabel+1432)
#define F0_LAMBDA819	((void*)startLabel+1440)
#define FN_LAMBDA818	((void*)startLabel+1492)
#define CT_v958	((void*)startLabel+1536)
#define F0_LAMBDA818	((void*)startLabel+1544)
#define FN_LAMBDA817	((void*)startLabel+1596)
#define v976	((void*)startLabel+1612)
#define v966	((void*)startLabel+1616)
#define v977	((void*)startLabel+1630)
#define v970	((void*)startLabel+1634)
#define v978	((void*)startLabel+1644)
#define v974	((void*)startLabel+1648)
#define v967	((void*)startLabel+1685)
#define v963	((void*)startLabel+1690)
#define v959	((void*)startLabel+1695)
#define CT_v979	((void*)startLabel+1704)
#define F0_LAMBDA817	((void*)startLabel+1712)
#define FN_LAMBDA816	((void*)startLabel+1764)
#define CT_v983	((void*)startLabel+1808)
#define F0_LAMBDA816	((void*)startLabel+1816)
#define FN_LAMBDA815	((void*)startLabel+1868)
#define v1001	((void*)startLabel+1884)
#define v991	((void*)startLabel+1888)
#define v1002	((void*)startLabel+1902)
#define v995	((void*)startLabel+1906)
#define v1003	((void*)startLabel+1916)
#define v999	((void*)startLabel+1920)
#define v992	((void*)startLabel+1957)
#define v988	((void*)startLabel+1962)
#define v984	((void*)startLabel+1967)
#define CT_v1004	((void*)startLabel+1976)
#define F0_LAMBDA815	((void*)startLabel+1984)
#define FN_LAMBDA814	((void*)startLabel+2036)
#define CT_v1008	((void*)startLabel+2080)
#define F0_LAMBDA814	((void*)startLabel+2088)
#define FN_LAMBDA813	((void*)startLabel+2140)
#define v1026	((void*)startLabel+2156)
#define v1016	((void*)startLabel+2160)
#define v1027	((void*)startLabel+2174)
#define v1020	((void*)startLabel+2178)
#define v1028	((void*)startLabel+2188)
#define v1024	((void*)startLabel+2192)
#define v1017	((void*)startLabel+2229)
#define v1013	((void*)startLabel+2234)
#define v1009	((void*)startLabel+2239)
#define CT_v1029	((void*)startLabel+2248)
#define F0_LAMBDA813	((void*)startLabel+2256)
#define FN_LAMBDA812	((void*)startLabel+2308)
#define CT_v1033	((void*)startLabel+2352)
#define F0_LAMBDA812	((void*)startLabel+2360)
#define FN_LAMBDA811	((void*)startLabel+2412)
#define v1051	((void*)startLabel+2428)
#define v1041	((void*)startLabel+2432)
#define v1052	((void*)startLabel+2446)
#define v1045	((void*)startLabel+2450)
#define v1053	((void*)startLabel+2460)
#define v1049	((void*)startLabel+2464)
#define v1042	((void*)startLabel+2501)
#define v1038	((void*)startLabel+2506)
#define v1034	((void*)startLabel+2511)
#define CT_v1054	((void*)startLabel+2520)
#define F0_LAMBDA811	((void*)startLabel+2528)
#define FN_LAMBDA810	((void*)startLabel+2580)
#define CT_v1058	((void*)startLabel+2624)
#define F0_LAMBDA810	((void*)startLabel+2632)
#define FN_LAMBDA809	((void*)startLabel+2684)
#define v1076	((void*)startLabel+2700)
#define v1066	((void*)startLabel+2704)
#define v1077	((void*)startLabel+2718)
#define v1070	((void*)startLabel+2722)
#define v1078	((void*)startLabel+2732)
#define v1074	((void*)startLabel+2736)
#define v1067	((void*)startLabel+2773)
#define v1063	((void*)startLabel+2778)
#define v1059	((void*)startLabel+2783)
#define CT_v1079	((void*)startLabel+2792)
#define F0_LAMBDA809	((void*)startLabel+2800)
#define FN_LAMBDA808	((void*)startLabel+2852)
#define CT_v1083	((void*)startLabel+2896)
#define F0_LAMBDA808	((void*)startLabel+2904)
#define FN_LAMBDA807	((void*)startLabel+2956)
#define v1101	((void*)startLabel+2972)
#define v1091	((void*)startLabel+2976)
#define v1102	((void*)startLabel+2990)
#define v1095	((void*)startLabel+2994)
#define v1103	((void*)startLabel+3004)
#define v1099	((void*)startLabel+3008)
#define v1092	((void*)startLabel+3045)
#define v1088	((void*)startLabel+3050)
#define v1084	((void*)startLabel+3055)
#define CT_v1104	((void*)startLabel+3064)
#define F0_LAMBDA807	((void*)startLabel+3072)
#define FN_LAMBDA806	((void*)startLabel+3124)
#define CT_v1108	((void*)startLabel+3168)
#define F0_LAMBDA806	((void*)startLabel+3176)
#define FN_LAMBDA805	((void*)startLabel+3228)
#define v1126	((void*)startLabel+3244)
#define v1116	((void*)startLabel+3248)
#define v1127	((void*)startLabel+3262)
#define v1120	((void*)startLabel+3266)
#define v1128	((void*)startLabel+3276)
#define v1124	((void*)startLabel+3280)
#define v1117	((void*)startLabel+3317)
#define v1113	((void*)startLabel+3322)
#define v1109	((void*)startLabel+3327)
#define CT_v1129	((void*)startLabel+3336)
#define F0_LAMBDA805	((void*)startLabel+3344)
#define FN_LAMBDA804	((void*)startLabel+3396)
#define CT_v1133	((void*)startLabel+3440)
#define F0_LAMBDA804	((void*)startLabel+3448)
#define FN_LAMBDA803	((void*)startLabel+3500)
#define v1151	((void*)startLabel+3516)
#define v1141	((void*)startLabel+3520)
#define v1152	((void*)startLabel+3534)
#define v1145	((void*)startLabel+3538)
#define v1153	((void*)startLabel+3548)
#define v1149	((void*)startLabel+3552)
#define v1142	((void*)startLabel+3586)
#define v1138	((void*)startLabel+3591)
#define v1134	((void*)startLabel+3596)
#define CT_v1154	((void*)startLabel+3620)
#define F0_LAMBDA803	((void*)startLabel+3628)
#define CT_v1155	((void*)startLabel+3696)
#define CT_v1156	((void*)startLabel+3808)
extern Node FN_Prelude_46readParen[];
extern Node FN_Prelude_46lex[];
extern Node FN_Prelude_46_95foldr[];
extern Node FN_Prelude_46reads[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Prelude_46Read_46Prelude_4612[];
extern Node FN_Prelude_46_95_46readList[];

static Node startLabel[] = {
  bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v832)
,};
Node FN_Prelude_46Read_46Prelude_4612_46readsPrec[] = {
  bytes2word(ZAP_ARG,13,NEEDHEAP_I32,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_ARG_ARG,12)
, bytes2word(11,HEAP_ARG_ARG,10,9)
, bytes2word(HEAP_ARG_ARG,8,7,HEAP_ARG_ARG)
, bytes2word(6,5,HEAP_ARG_ARG,4)
, bytes2word(3,HEAP_ARG_ARG,2,1)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1,15)
, bytes2word(HEAP_OFF_N1,15,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v832: (byte 0) */
  HW(2,13)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4612_46readsPrec[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4612_46readsPrec),13)
, CAPTAG(useLabel(FN_LAMBDA828),1)
, VAPTAG(useLabel(FN_Prelude_46readParen))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v833)
,	/* FN_LAMBDA828: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,13,HEAP_CVAL_N1)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(17,HEAP_OFF_N1,5,HEAP_OFF_N1)
, bytes2word(4,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v833: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA828: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA828),13)
, CAPTAG(useLabel(FN_LAMBDA827),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v854)
,	/* FN_LAMBDA827: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v851: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v841: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(40),BOT(40),TOP(10),BOT(10))
,	/* v852: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v845: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v853: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v849: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v842: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v838: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v834: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v854: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA827: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA827),14)
, CAPTAG(useLabel(FN_LAMBDA826),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v858)
,	/* FN_LAMBDA826: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v858: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA826: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA826),13)
, CAPTAG(useLabel(FN_LAMBDA825),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v879)
,	/* FN_LAMBDA825: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v876: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v866: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v877: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v870: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v878: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v874: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v867: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v863: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v859: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v879: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA825: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA825),14)
, CAPTAG(useLabel(FN_LAMBDA824),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v883)
,	/* FN_LAMBDA824: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v883: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA824: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA824),13)
, CAPTAG(useLabel(FN_LAMBDA823),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v904)
,	/* FN_LAMBDA823: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v901: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v891: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v902: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v895: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v903: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v899: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v892: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v888: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v884: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v904: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA823: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA823),14)
, CAPTAG(useLabel(FN_LAMBDA822),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v908)
,	/* FN_LAMBDA822: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v908: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA822: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA822),13)
, CAPTAG(useLabel(FN_LAMBDA821),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v929)
,	/* FN_LAMBDA821: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v926: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v916: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v927: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v920: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v928: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v924: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v917: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v913: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v909: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v929: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA821: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA821),14)
, CAPTAG(useLabel(FN_LAMBDA820),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v933)
,	/* FN_LAMBDA820: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v933: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA820: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA820),13)
, CAPTAG(useLabel(FN_LAMBDA819),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v954)
,	/* FN_LAMBDA819: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v951: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v941: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v952: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v945: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v953: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v949: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v942: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v938: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v934: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v954: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA819: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA819),14)
, CAPTAG(useLabel(FN_LAMBDA818),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v958)
,	/* FN_LAMBDA818: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v958: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA818: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA818),13)
, CAPTAG(useLabel(FN_LAMBDA817),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v979)
,	/* FN_LAMBDA817: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v976: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v966: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v977: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v970: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v978: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v974: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v967: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v963: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v959: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v979: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA817: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA817),14)
, CAPTAG(useLabel(FN_LAMBDA816),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v983)
,	/* FN_LAMBDA816: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,5)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v983: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA816: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA816),13)
, CAPTAG(useLabel(FN_LAMBDA815),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1004)
,	/* FN_LAMBDA815: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1001: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v991: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1002: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v995: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1003: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v999: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v992: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v988: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v984: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1004: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA815: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA815),14)
, CAPTAG(useLabel(FN_LAMBDA814),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1008)
,	/* FN_LAMBDA814: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1008: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA814: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA814),13)
, CAPTAG(useLabel(FN_LAMBDA813),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1029)
,	/* FN_LAMBDA813: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1026: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1016: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1027: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1020: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1028: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1024: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v1017: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v1013: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v1009: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1029: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA813: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA813),14)
, CAPTAG(useLabel(FN_LAMBDA812),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1033)
,	/* FN_LAMBDA812: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG,7,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1033: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA812: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA812),13)
, CAPTAG(useLabel(FN_LAMBDA811),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1054)
,	/* FN_LAMBDA811: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1051: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1041: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1052: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1045: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1053: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1049: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v1042: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v1038: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v1034: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1054: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA811: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA811),14)
, CAPTAG(useLabel(FN_LAMBDA810),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1058)
,	/* FN_LAMBDA810: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1058: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA810: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA810),13)
, CAPTAG(useLabel(FN_LAMBDA809),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1079)
,	/* FN_LAMBDA809: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1076: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1066: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1077: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1070: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1078: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1074: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v1067: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v1063: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v1059: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1079: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA809: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA809),14)
, CAPTAG(useLabel(FN_LAMBDA808),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1083)
,	/* FN_LAMBDA808: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG,9,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,10,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1083: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA808: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA808),13)
, CAPTAG(useLabel(FN_LAMBDA807),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1104)
,	/* FN_LAMBDA807: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1101: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1091: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1102: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1095: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1103: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1099: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v1092: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v1088: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v1084: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1104: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA807: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA807),14)
, CAPTAG(useLabel(FN_LAMBDA806),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1108)
,	/* FN_LAMBDA806: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_P1)
, bytes2word(0,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1108: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA806: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA806),13)
, CAPTAG(useLabel(FN_LAMBDA805),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1129)
,	/* FN_LAMBDA805: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1126: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1116: (byte 4) */
  bytes2word(POP_I1,JUMP,76,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v1127: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1120: (byte 2) */
  bytes2word(53,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1128: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1124: (byte 4) */
  bytes2word(POP_I1,JUMP,39,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG,12,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_OFF_N1,18)
, bytes2word(HEAP_OFF_N1,5,HEAP_ARG,14)
,	/* v1117: (byte 1) */
  bytes2word(RETURN_EVAL,POP_P1,2,JUMP)
,	/* v1113: (byte 2) */
  bytes2word(2,0,POP_P1,2)
,	/* v1109: (byte 3) */
  bytes2word(JUMP,2,0,PUSH_ARG)
, bytes2word(14,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1129: (byte 0) */
  HW(4,14)
, 0
,	/* F0_LAMBDA805: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA805),14)
, CAPTAG(useLabel(FN_LAMBDA804),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v1133)
,	/* FN_LAMBDA804: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,12,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG)
, bytes2word(11,HEAP_P1,0,HEAP_CVAL_I4)
, bytes2word(HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,4,HEAP_ARG)
, bytes2word(13,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1133: (byte 0) */
  HW(3,13)
, 0
,	/* F0_LAMBDA804: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA804),13)
, CAPTAG(useLabel(FN_LAMBDA803),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v1154)
,	/* FN_LAMBDA803: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,13,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v1151: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v1141: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(41),BOT(41),TOP(10),BOT(10))
,	/* v1152: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v1145: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v1153: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v1149: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG_ARG,11)
, bytes2word(12,HEAP_CVAL_N1,2,HEAP_OFF_N1)
, bytes2word(14,HEAP_P1,3,PUSH_HEAP)
, bytes2word(HEAP_CVAL_IN3,HEAP_OFF_N1,4,HEAP_ARG)
,	/* v1142: (byte 2) */
  bytes2word(14,RETURN,POP_P1,2)
,	/* v1138: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v1134: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,14,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,12,0)
,	/* CT_v1154: (byte 0) */
  HW(0,14)
, 0
,	/* F0_LAMBDA803: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA803),14)
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1155)
,};
Node FN_Prelude_46Read_46Prelude_4612_46readList[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1,14)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v1155: (byte 0) */
  HW(2,12)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4612_46readList[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4612_46readList),12)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4612))
, VAPTAG(useLabel(FN_Prelude_46_95_46readList))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1156)
,};
Node FN_Prelude_46Read_46Prelude_4612[] = {
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG_ARG,11)
, bytes2word(12,PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG_ARG,11)
, bytes2word(12,PUSH_HEAP,HEAP_CVAL_N1,1)
, bytes2word(HEAP_I2,HEAP_I1,RETURN,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v1156: (byte 0) */
  HW(2,12)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4612[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4612),12)
, CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4612_46readsPrec),1)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4612_46readList))
,};
