#include "newmacros.h"
#include "runtime.h"

#define CT_v961	((void*)startLabel+472)
#define FN_LAMBDA944	((void*)startLabel+560)
#define CT_v962	((void*)startLabel+572)
#define F0_LAMBDA944	((void*)startLabel+580)
#define FN_LAMBDA943	((void*)startLabel+592)
#define CT_v963	((void*)startLabel+604)
#define F0_LAMBDA943	((void*)startLabel+612)
#define FN_LAMBDA942	((void*)startLabel+624)
#define CT_v964	((void*)startLabel+636)
#define F0_LAMBDA942	((void*)startLabel+644)
#define FN_LAMBDA941	((void*)startLabel+656)
#define CT_v965	((void*)startLabel+668)
#define F0_LAMBDA941	((void*)startLabel+676)
#define FN_LAMBDA940	((void*)startLabel+688)
#define CT_v966	((void*)startLabel+700)
#define F0_LAMBDA940	((void*)startLabel+708)
#define FN_LAMBDA939	((void*)startLabel+720)
#define CT_v967	((void*)startLabel+732)
#define F0_LAMBDA939	((void*)startLabel+740)
#define FN_LAMBDA938	((void*)startLabel+752)
#define CT_v968	((void*)startLabel+764)
#define F0_LAMBDA938	((void*)startLabel+772)
#define FN_LAMBDA937	((void*)startLabel+784)
#define CT_v969	((void*)startLabel+796)
#define F0_LAMBDA937	((void*)startLabel+804)
#define FN_LAMBDA936	((void*)startLabel+816)
#define CT_v970	((void*)startLabel+828)
#define F0_LAMBDA936	((void*)startLabel+836)
#define FN_LAMBDA935	((void*)startLabel+848)
#define CT_v971	((void*)startLabel+860)
#define F0_LAMBDA935	((void*)startLabel+868)
#define FN_LAMBDA934	((void*)startLabel+880)
#define CT_v972	((void*)startLabel+892)
#define F0_LAMBDA934	((void*)startLabel+900)
#define FN_LAMBDA933	((void*)startLabel+912)
#define CT_v973	((void*)startLabel+924)
#define F0_LAMBDA933	((void*)startLabel+932)
#define FN_LAMBDA932	((void*)startLabel+944)
#define CT_v977	((void*)startLabel+992)
#define F0_LAMBDA932	((void*)startLabel+1000)
#define CT_v981	((void*)startLabel+1408)
#define FN_LAMBDA955	((void*)startLabel+1492)
#define CT_v983	((void*)startLabel+1512)
#define CF_LAMBDA955	((void*)startLabel+1520)
#define FN_LAMBDA954	((void*)startLabel+1532)
#define CT_v984	((void*)startLabel+1552)
#define CF_LAMBDA954	((void*)startLabel+1560)
#define FN_LAMBDA953	((void*)startLabel+1572)
#define CT_v985	((void*)startLabel+1592)
#define CF_LAMBDA953	((void*)startLabel+1600)
#define FN_LAMBDA952	((void*)startLabel+1612)
#define CT_v986	((void*)startLabel+1632)
#define CF_LAMBDA952	((void*)startLabel+1640)
#define FN_LAMBDA951	((void*)startLabel+1652)
#define CT_v987	((void*)startLabel+1672)
#define CF_LAMBDA951	((void*)startLabel+1680)
#define FN_LAMBDA950	((void*)startLabel+1692)
#define CT_v988	((void*)startLabel+1712)
#define CF_LAMBDA950	((void*)startLabel+1720)
#define FN_LAMBDA949	((void*)startLabel+1732)
#define CT_v989	((void*)startLabel+1752)
#define CF_LAMBDA949	((void*)startLabel+1760)
#define FN_LAMBDA948	((void*)startLabel+1772)
#define CT_v990	((void*)startLabel+1792)
#define CF_LAMBDA948	((void*)startLabel+1800)
#define FN_LAMBDA947	((void*)startLabel+1812)
#define CT_v991	((void*)startLabel+1832)
#define CF_LAMBDA947	((void*)startLabel+1840)
#define FN_LAMBDA946	((void*)startLabel+1852)
#define CT_v992	((void*)startLabel+1872)
#define CF_LAMBDA946	((void*)startLabel+1880)
#define FN_LAMBDA945	((void*)startLabel+1892)
#define CT_v993	((void*)startLabel+1912)
#define CF_LAMBDA945	((void*)startLabel+1920)
#define CT_v994	((void*)startLabel+1988)
#define CT_v995	((void*)startLabel+2072)
#define CT_v996	((void*)startLabel+2232)
#define ST_v982	((void*)startLabel+2260)
extern Node FN_Prelude_46showChar[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Prelude_46showsType[];
extern Node FN_Prelude_46_46[];
extern Node FN_Prelude_46shows[];
extern Node FN_Prelude_46showString[];
extern Node FN_Prelude_46Show_46Prelude_4612[];
extern Node FN_Prelude_46_95_46show[];
extern Node FN_Prelude_46_95_46showList[];

static Node startLabel[] = {
  bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v961)
,};
Node FN_Prelude_46Show_46Prelude_4612_46showsType[] = {
  bytes2word(NEEDHEAP_P1,224,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,13,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,7,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,9)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(11,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,13,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,15,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,17)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,12,HEAP_OFF_N1)
, bytes2word(19,PUSH_HEAP,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,21,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,23,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,15,HEAP_OFF_N1,25)
, bytes2word(HEAP_CVAL_P1,16,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,40)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG,1)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,0,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,44,HEAP_CVAL_P1,18)
, bytes2word(HEAP_ARG,2,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,3,HEAP_I1,HEAP_CVAL_P1)
, bytes2word(16,HEAP_CVAL_P1,17,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,44,HEAP_CVAL_P1)
, bytes2word(18,HEAP_ARG,3,HEAP_CVAL_P1)
, bytes2word(17,HEAP_OFF_N1,3,HEAP_I2)
, bytes2word(HEAP_CVAL_P1,16,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,44)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,3,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,44,HEAP_CVAL_P1,18)
, bytes2word(HEAP_ARG,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,4)
, bytes2word(HEAP_CVAL_P1,16,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,44)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG,6)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,5,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,44,HEAP_CVAL_P1,18)
, bytes2word(HEAP_ARG,7,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,6)
, bytes2word(HEAP_CVAL_P1,16,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,44)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG,8)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,7,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,44,HEAP_CVAL_P1,18)
, bytes2word(HEAP_ARG,9,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,8)
, bytes2word(HEAP_CVAL_P1,16,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,44)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG,10)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,9,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,44,HEAP_CVAL_P1,18)
, bytes2word(HEAP_ARG,11,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,10)
, bytes2word(HEAP_CVAL_P1,16,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,44)
, bytes2word(HEAP_CVAL_P1,18,HEAP_ARG,12)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,11,HEAP_CVAL_P1,16)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,41,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,16)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,23,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,31)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,38,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,46)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,53,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,61)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,68,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,76)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,83,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,91)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,98,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,106)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,113,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,121)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,128,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,136)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,143,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,151)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,158,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,19,HEAP_OFF_N1,166)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,19)
, bytes2word(HEAP_OFF_N1,173,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,19,HEAP_OFF_N1)
, bytes2word(181,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v961: (byte 0) */
  HW(17,13)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4612_46showsType[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46showsType),13)
, VAPTAG(useLabel(FN_LAMBDA932))
, VAPTAG(useLabel(FN_LAMBDA933))
, VAPTAG(useLabel(FN_LAMBDA934))
, VAPTAG(useLabel(FN_LAMBDA935))
, VAPTAG(useLabel(FN_LAMBDA936))
, VAPTAG(useLabel(FN_LAMBDA937))
, VAPTAG(useLabel(FN_LAMBDA938))
, VAPTAG(useLabel(FN_LAMBDA939))
, VAPTAG(useLabel(FN_LAMBDA940))
, VAPTAG(useLabel(FN_LAMBDA941))
, VAPTAG(useLabel(FN_LAMBDA942))
, VAPTAG(useLabel(FN_LAMBDA943))
, VAPTAG(useLabel(FN_LAMBDA944))
, VAPTAG(useLabel(FN_Prelude_46showChar))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46showsType))
, VAPTAG(useLabel(FN_Prelude_46_46))
, bytes2word(1,0,0,1)
, useLabel(CT_v962)
,	/* FN_LAMBDA944: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,12)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v962: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA944: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA944),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v963)
,	/* FN_LAMBDA943: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,11)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v963: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA943: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA943),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v964)
,	/* FN_LAMBDA942: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,10)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v964: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA942: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA942),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v965)
,	/* FN_LAMBDA941: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,9)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v965: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA941: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA941),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v966)
,	/* FN_LAMBDA940: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,8)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v966: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA940: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA940),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v967)
,	/* FN_LAMBDA939: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,7)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v967: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA939: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA939),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v968)
,	/* FN_LAMBDA938: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,6)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v968: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA938: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA938),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v969)
,	/* FN_LAMBDA937: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,5)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v969: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA937: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA937),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v970)
,	/* FN_LAMBDA936: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,4)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v970: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA936: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA936),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v971)
,	/* FN_LAMBDA935: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,3)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v971: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA935: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA935),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v972)
,	/* FN_LAMBDA934: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,2)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v972: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA934: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA934),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v973)
,	/* FN_LAMBDA933: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v973: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA933: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA933),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v977)
,	/* FN_LAMBDA932: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,12,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_P1,12,HEAP_P1)
, bytes2word(11,HEAP_P1,10,HEAP_P1)
, bytes2word(9,HEAP_P1,8,HEAP_P1)
, bytes2word(7,HEAP_P1,6,HEAP_P1)
, bytes2word(5,HEAP_P1,4,HEAP_P1)
, bytes2word(3,HEAP_I2,HEAP_I1,RETURN)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,12,0)
,	/* CT_v977: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA932: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA932),1)
, bytes2word(0,0,14,0)
, bytes2word(13,1,12,2)
, bytes2word(11,3,10,4)
, bytes2word(9,5,8,6)
, bytes2word(7,7,6,8)
, bytes2word(5,9,4,10)
, bytes2word(3,11,2,12)
, bytes2word(1,13,0,14)
, useLabel(CT_v981)
,};
Node FN_Prelude_46Show_46Prelude_4612_46showsPrec[] = {
  bytes2word(ZAP_ARG,13,NEEDSTACK_I16,PUSH_ZAP_ARG)
, bytes2word(14,EVAL,NEEDHEAP_P1,195)
, bytes2word(UNPACK,12,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,40)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,1,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,0)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_I1)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_I2)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,6,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,12,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,7,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,6)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,13)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,8)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(7,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(14,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(9,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,8,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,15,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,10,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,9,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,16,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,10)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,17)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,12)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(11,HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,41,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,24,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(32,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,40,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(48,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,56,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(64,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,72,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(80,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,88,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(96,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,104,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(112,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,120,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(128,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,136,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(144,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,152,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(160,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,168,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(176,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,184,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,18)
, bytes2word(HEAP_OFF_N1,192,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v981: (byte 0) */
  HW(16,14)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4612_46showsPrec[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46showsPrec),14)
, VAPTAG(useLabel(FN_Prelude_46showChar))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46shows))
, VAPTAG(useLabel(FN_Prelude_46showString))
, VAPTAG(useLabel(FN_LAMBDA945))
, VAPTAG(useLabel(FN_LAMBDA946))
, VAPTAG(useLabel(FN_LAMBDA947))
, VAPTAG(useLabel(FN_LAMBDA948))
, VAPTAG(useLabel(FN_LAMBDA949))
, VAPTAG(useLabel(FN_LAMBDA950))
, VAPTAG(useLabel(FN_LAMBDA951))
, VAPTAG(useLabel(FN_LAMBDA952))
, VAPTAG(useLabel(FN_LAMBDA953))
, VAPTAG(useLabel(FN_LAMBDA954))
, VAPTAG(useLabel(FN_LAMBDA955))
, VAPTAG(useLabel(FN_Prelude_46_46))
, bytes2word(0,0,0,0)
, useLabel(CT_v983)
,	/* FN_LAMBDA955: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v983: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA955: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA955))
, bytes2word(0,0,0,0)
, useLabel(CT_v984)
,	/* FN_LAMBDA954: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v984: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA954: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA954))
, bytes2word(0,0,0,0)
, useLabel(CT_v985)
,	/* FN_LAMBDA953: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v985: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA953: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA953))
, bytes2word(0,0,0,0)
, useLabel(CT_v986)
,	/* FN_LAMBDA952: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v986: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA952: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA952))
, bytes2word(0,0,0,0)
, useLabel(CT_v987)
,	/* FN_LAMBDA951: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v987: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA951: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA951))
, bytes2word(0,0,0,0)
, useLabel(CT_v988)
,	/* FN_LAMBDA950: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v988: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA950: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA950))
, bytes2word(0,0,0,0)
, useLabel(CT_v989)
,	/* FN_LAMBDA949: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v989: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA949: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA949))
, bytes2word(0,0,0,0)
, useLabel(CT_v990)
,	/* FN_LAMBDA948: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v990: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA948: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA948))
, bytes2word(0,0,0,0)
, useLabel(CT_v991)
,	/* FN_LAMBDA947: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v991: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA947: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA947))
, bytes2word(0,0,0,0)
, useLabel(CT_v992)
,	/* FN_LAMBDA946: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v992: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA946: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA946))
, bytes2word(0,0,0,0)
, useLabel(CT_v993)
,	/* FN_LAMBDA945: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v982)
,	/* CT_v993: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA945: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA945))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v994)
,};
Node FN_Prelude_46Show_46Prelude_4612_46show[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1,14)
, bytes2word(HEAP_ARG,13,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v994: (byte 0) */
  HW(2,13)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4612_46show[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46show),13)
, VAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612))
, VAPTAG(useLabel(FN_Prelude_46_95_46show))
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v995)
,};
Node FN_Prelude_46Show_46Prelude_4612_46showList[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG_ARG,11,12)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1,14)
, bytes2word(HEAP_ARG,13,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v995: (byte 0) */
  HW(2,13)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4612_46showList[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46showList),13)
, VAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612))
, VAPTAG(useLabel(FN_Prelude_46_95_46showList))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v996)
,};
Node FN_Prelude_46Show_46Prelude_4612[] = {
  bytes2word(NEEDHEAP_P1,62,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG_ARG)
, bytes2word(11,12,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG_ARG)
, bytes2word(11,12,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG_ARG)
, bytes2word(11,12,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_ARG_ARG,1,2)
, bytes2word(HEAP_ARG_ARG,3,4,HEAP_ARG_ARG)
, bytes2word(5,6,HEAP_ARG_ARG,7)
, bytes2word(8,HEAP_ARG_ARG,9,10)
, bytes2word(HEAP_ARG_ARG,11,12,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,4)
, bytes2word(HEAP_P1,3,HEAP_I2,HEAP_I1)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,4,0)
,	/* CT_v996: (byte 0) */
  HW(4,12)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4612[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612),12)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46showsPrec),2)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46showsType),1)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46showList),1)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4612_46show),1)
,	/* ST_v982: (byte 0) */
  bytes2word(44,0,0,0)
,};
