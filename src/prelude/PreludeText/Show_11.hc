#include "newmacros.h"
#include "runtime.h"

#define CT_v887	((void*)startLabel+436)
#define FN_LAMBDA871	((void*)startLabel+520)
#define CT_v888	((void*)startLabel+532)
#define F0_LAMBDA871	((void*)startLabel+540)
#define FN_LAMBDA870	((void*)startLabel+552)
#define CT_v889	((void*)startLabel+564)
#define F0_LAMBDA870	((void*)startLabel+572)
#define FN_LAMBDA869	((void*)startLabel+584)
#define CT_v890	((void*)startLabel+596)
#define F0_LAMBDA869	((void*)startLabel+604)
#define FN_LAMBDA868	((void*)startLabel+616)
#define CT_v891	((void*)startLabel+628)
#define F0_LAMBDA868	((void*)startLabel+636)
#define FN_LAMBDA867	((void*)startLabel+648)
#define CT_v892	((void*)startLabel+660)
#define F0_LAMBDA867	((void*)startLabel+668)
#define FN_LAMBDA866	((void*)startLabel+680)
#define CT_v893	((void*)startLabel+692)
#define F0_LAMBDA866	((void*)startLabel+700)
#define FN_LAMBDA865	((void*)startLabel+712)
#define CT_v894	((void*)startLabel+724)
#define F0_LAMBDA865	((void*)startLabel+732)
#define FN_LAMBDA864	((void*)startLabel+744)
#define CT_v895	((void*)startLabel+756)
#define F0_LAMBDA864	((void*)startLabel+764)
#define FN_LAMBDA863	((void*)startLabel+776)
#define CT_v896	((void*)startLabel+788)
#define F0_LAMBDA863	((void*)startLabel+796)
#define FN_LAMBDA862	((void*)startLabel+808)
#define CT_v897	((void*)startLabel+820)
#define F0_LAMBDA862	((void*)startLabel+828)
#define FN_LAMBDA861	((void*)startLabel+840)
#define CT_v898	((void*)startLabel+852)
#define F0_LAMBDA861	((void*)startLabel+860)
#define FN_LAMBDA860	((void*)startLabel+872)
#define CT_v902	((void*)startLabel+916)
#define F0_LAMBDA860	((void*)startLabel+924)
#define CT_v906	((void*)startLabel+1300)
#define FN_LAMBDA881	((void*)startLabel+1380)
#define CT_v908	((void*)startLabel+1400)
#define CF_LAMBDA881	((void*)startLabel+1408)
#define FN_LAMBDA880	((void*)startLabel+1420)
#define CT_v909	((void*)startLabel+1440)
#define CF_LAMBDA880	((void*)startLabel+1448)
#define FN_LAMBDA879	((void*)startLabel+1460)
#define CT_v910	((void*)startLabel+1480)
#define CF_LAMBDA879	((void*)startLabel+1488)
#define FN_LAMBDA878	((void*)startLabel+1500)
#define CT_v911	((void*)startLabel+1520)
#define CF_LAMBDA878	((void*)startLabel+1528)
#define FN_LAMBDA877	((void*)startLabel+1540)
#define CT_v912	((void*)startLabel+1560)
#define CF_LAMBDA877	((void*)startLabel+1568)
#define FN_LAMBDA876	((void*)startLabel+1580)
#define CT_v913	((void*)startLabel+1600)
#define CF_LAMBDA876	((void*)startLabel+1608)
#define FN_LAMBDA875	((void*)startLabel+1620)
#define CT_v914	((void*)startLabel+1640)
#define CF_LAMBDA875	((void*)startLabel+1648)
#define FN_LAMBDA874	((void*)startLabel+1660)
#define CT_v915	((void*)startLabel+1680)
#define CF_LAMBDA874	((void*)startLabel+1688)
#define FN_LAMBDA873	((void*)startLabel+1700)
#define CT_v916	((void*)startLabel+1720)
#define CF_LAMBDA873	((void*)startLabel+1728)
#define FN_LAMBDA872	((void*)startLabel+1740)
#define CT_v917	((void*)startLabel+1760)
#define CF_LAMBDA872	((void*)startLabel+1768)
#define CT_v918	((void*)startLabel+1836)
#define CT_v919	((void*)startLabel+1920)
#define CT_v920	((void*)startLabel+2072)
#define ST_v907	((void*)startLabel+2100)
extern Node FN_Prelude_46showChar[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Prelude_46showsType[];
extern Node FN_Prelude_46_46[];
extern Node FN_Prelude_46shows[];
extern Node FN_Prelude_46showString[];
extern Node FN_Prelude_46Show_46Prelude_4611[];
extern Node FN_Prelude_46_95_46show[];
extern Node FN_Prelude_46_95_46showList[];

static Node startLabel[] = {
  bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v887)
,};
Node FN_Prelude_46Show_46Prelude_4611_46showsType[] = {
  bytes2word(NEEDHEAP_P1,206,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,12,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,5,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(6,HEAP_OFF_N1,7,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,7,HEAP_OFF_N1,9)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,8,HEAP_OFF_N1)
, bytes2word(11,PUSH_HEAP,HEAP_CVAL_P1,9)
, bytes2word(HEAP_OFF_N1,13,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(10,HEAP_OFF_N1,15,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,11,HEAP_OFF_N1,17)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,12,HEAP_OFF_N1)
, bytes2word(19,PUSH_HEAP,HEAP_CVAL_P1,13)
, bytes2word(HEAP_OFF_N1,21,PUSH_HEAP,HEAP_CVAL_P1)
, bytes2word(14,HEAP_OFF_N1,23,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,40,HEAP_CVAL_P1)
, bytes2word(17,HEAP_ARG,1,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(0,HEAP_CVAL_P1,15,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,2,HEAP_CHAR_P1)
, bytes2word(44,HEAP_CVAL_P1,17,HEAP_ARG)
, bytes2word(2,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(3,HEAP_I1,HEAP_CVAL_P1,15)
, bytes2word(HEAP_CVAL_P1,16,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,44,HEAP_CVAL_P1,17)
, bytes2word(HEAP_ARG,3,HEAP_CVAL_P1,16)
, bytes2word(HEAP_OFF_N1,3,HEAP_I2,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,44,HEAP_CVAL_P1)
, bytes2word(17,HEAP_ARG,4,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,HEAP_CVAL_P1,15,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,2,HEAP_CHAR_P1)
, bytes2word(44,HEAP_CVAL_P1,17,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,4,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,44,HEAP_CVAL_P1)
, bytes2word(17,HEAP_ARG,6,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(5,HEAP_CVAL_P1,15,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,2,HEAP_CHAR_P1)
, bytes2word(44,HEAP_CVAL_P1,17,HEAP_ARG)
, bytes2word(7,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,6,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,44,HEAP_CVAL_P1)
, bytes2word(17,HEAP_ARG,8,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(7,HEAP_CVAL_P1,15,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,2,HEAP_CHAR_P1)
, bytes2word(44,HEAP_CVAL_P1,17,HEAP_ARG)
, bytes2word(9,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,8,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,44,HEAP_CVAL_P1)
, bytes2word(17,HEAP_ARG,10,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(9,HEAP_CVAL_P1,15,HEAP_CVAL_P1)
, bytes2word(16,HEAP_OFF_N1,2,HEAP_CHAR_P1)
, bytes2word(44,HEAP_CVAL_P1,17,HEAP_ARG)
, bytes2word(11,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,10,HEAP_CVAL_P1)
, bytes2word(15,HEAP_CVAL_P1,16,HEAP_OFF_N1)
, bytes2word(2,HEAP_CHAR_P1,41,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,8,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,23,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(31,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,38,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(46,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,53,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(61,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,68,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(76,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,83,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(91,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,98,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(106,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,113,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(121,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,128,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(136,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,143,HEAP_OFF_N1)
, bytes2word(5,HEAP_CVAL_P1,18,HEAP_OFF_N1)
, bytes2word(151,HEAP_OFF_N1,5,HEAP_CVAL_P1)
, bytes2word(18,HEAP_OFF_N1,158,HEAP_OFF_N1)
, bytes2word(5,PUSH_HEAP,HEAP_CVAL_P1,18)
, bytes2word(HEAP_OFF_N1,166,HEAP_OFF_N1,5)
, bytes2word(RETURN_EVAL,ENDCODE,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v887: (byte 0) */
  HW(16,12)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4611_46showsType[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46showsType),12)
, VAPTAG(useLabel(FN_LAMBDA860))
, VAPTAG(useLabel(FN_LAMBDA861))
, VAPTAG(useLabel(FN_LAMBDA862))
, VAPTAG(useLabel(FN_LAMBDA863))
, VAPTAG(useLabel(FN_LAMBDA864))
, VAPTAG(useLabel(FN_LAMBDA865))
, VAPTAG(useLabel(FN_LAMBDA866))
, VAPTAG(useLabel(FN_LAMBDA867))
, VAPTAG(useLabel(FN_LAMBDA868))
, VAPTAG(useLabel(FN_LAMBDA869))
, VAPTAG(useLabel(FN_LAMBDA870))
, VAPTAG(useLabel(FN_LAMBDA871))
, VAPTAG(useLabel(FN_Prelude_46showChar))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46showsType))
, VAPTAG(useLabel(FN_Prelude_46_46))
, bytes2word(1,0,0,1)
, useLabel(CT_v888)
,	/* FN_LAMBDA871: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,11)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v888: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA871: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA871),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v889)
,	/* FN_LAMBDA870: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,10)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v889: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA870: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA870),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v890)
,	/* FN_LAMBDA869: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,9)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v890: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA869: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA869),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v891)
,	/* FN_LAMBDA868: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,8)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v891: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA868: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA868),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v892)
,	/* FN_LAMBDA867: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,7)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v892: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA867: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA867),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v893)
,	/* FN_LAMBDA866: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,6)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v893: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA866: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA866),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v894)
,	/* FN_LAMBDA865: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,5)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v894: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA865: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA865),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v895)
,	/* FN_LAMBDA864: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,4)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v895: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA864: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA864),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v896)
,	/* FN_LAMBDA863: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,3)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v896: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA863: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA863),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v897)
,	/* FN_LAMBDA862: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,2)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v897: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA862: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA862),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v898)
,	/* FN_LAMBDA861: (byte 0) */
  bytes2word(NEEDSTACK_I16,SELECTOR_EVAL,SELECT,1)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v898: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA861: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA861),1)
, bytes2word(1,0,0,1)
, useLabel(CT_v902)
,	/* FN_LAMBDA860: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG_I1,EVAL,NEEDHEAP_I32)
, bytes2word(UNPACK,11,PUSH_HEAP,HEAP_CVAL_N1)
, bytes2word(1,HEAP_P1,11,HEAP_P1)
, bytes2word(10,HEAP_P1,9,HEAP_P1)
, bytes2word(8,HEAP_P1,7,HEAP_P1)
, bytes2word(6,HEAP_P1,5,HEAP_P1)
, bytes2word(4,HEAP_P1,3,HEAP_I2)
, bytes2word(HEAP_I1,RETURN,ENDCODE,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,11,0)
,	/* CT_v902: (byte 0) */
  HW(0,1)
, 0
,	/* F0_LAMBDA860: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA860),1)
, bytes2word(13,0,12,1)
, bytes2word(11,2,10,3)
, bytes2word(9,4,8,5)
, bytes2word(7,6,6,7)
, bytes2word(5,8,4,9)
, bytes2word(3,10,2,11)
, bytes2word(1,12,0,13)
, useLabel(CT_v906)
,};
Node FN_Prelude_46Show_46Prelude_4611_46showsPrec[] = {
  bytes2word(ZAP_ARG,12,NEEDSTACK_I16,PUSH_ZAP_ARG)
, bytes2word(13,EVAL,NEEDHEAP_P1,179)
, bytes2word(UNPACK,11,HEAP_CVAL_I3,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,2,HEAP_CHAR_P1,40)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,1,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,0)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,7)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,2)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_I1)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,8)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,3)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_I2)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,9)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,4)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(3,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(10,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(5,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,4,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,11,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,6,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,5,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,12,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,7,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,6)
, bytes2word(HEAP_CVAL_P1,6,HEAP_CVAL_P1,13)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_OFF_N1)
, bytes2word(3,HEAP_CVAL_I5,HEAP_ARG,8)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,3,HEAP_P1)
, bytes2word(7,HEAP_CVAL_P1,6,HEAP_CVAL_P1)
, bytes2word(14,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_OFF_N1,3,HEAP_CVAL_I5,HEAP_ARG)
, bytes2word(9,HEAP_CVAL_I4,HEAP_OFF_N1,3)
, bytes2word(HEAP_P1,8,HEAP_CVAL_P1,6)
, bytes2word(HEAP_CVAL_P1,15,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_OFF_N1,3,HEAP_CVAL_I5)
, bytes2word(HEAP_ARG,10,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(3,HEAP_P1,9,HEAP_CVAL_P1)
, bytes2word(6,HEAP_CVAL_P1,16,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_OFF_N1,3)
, bytes2word(HEAP_CVAL_I5,HEAP_ARG,11,HEAP_CVAL_I4)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,10)
, bytes2word(HEAP_CVAL_I3,HEAP_CVAL_I4,HEAP_OFF_N1,2)
, bytes2word(HEAP_CHAR_P1,41,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,8,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,16)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,24,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,32)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,40,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,48)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,56,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,64)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,72,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,80)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,88,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,96)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,104,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,112)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,120,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,128)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,136,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,144)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,152,HEAP_OFF_N1,5)
, bytes2word(HEAP_CVAL_P1,17,HEAP_OFF_N1,160)
, bytes2word(HEAP_OFF_N1,5,HEAP_CVAL_P1,17)
, bytes2word(HEAP_OFF_N1,168,HEAP_OFF_N1,5)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,17,HEAP_OFF_N1)
, bytes2word(176,HEAP_OFF_N1,5,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
,	/* CT_v906: (byte 0) */
  HW(15,13)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4611_46showsPrec[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46showsPrec),13)
, VAPTAG(useLabel(FN_Prelude_46showChar))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46shows))
, VAPTAG(useLabel(FN_Prelude_46showString))
, VAPTAG(useLabel(FN_LAMBDA872))
, VAPTAG(useLabel(FN_LAMBDA873))
, VAPTAG(useLabel(FN_LAMBDA874))
, VAPTAG(useLabel(FN_LAMBDA875))
, VAPTAG(useLabel(FN_LAMBDA876))
, VAPTAG(useLabel(FN_LAMBDA877))
, VAPTAG(useLabel(FN_LAMBDA878))
, VAPTAG(useLabel(FN_LAMBDA879))
, VAPTAG(useLabel(FN_LAMBDA880))
, VAPTAG(useLabel(FN_LAMBDA881))
, VAPTAG(useLabel(FN_Prelude_46_46))
, bytes2word(0,0,0,0)
, useLabel(CT_v908)
,	/* FN_LAMBDA881: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v908: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA881: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA881))
, bytes2word(0,0,0,0)
, useLabel(CT_v909)
,	/* FN_LAMBDA880: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v909: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA880: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA880))
, bytes2word(0,0,0,0)
, useLabel(CT_v910)
,	/* FN_LAMBDA879: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v910: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA879: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA879))
, bytes2word(0,0,0,0)
, useLabel(CT_v911)
,	/* FN_LAMBDA878: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v911: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA878: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA878))
, bytes2word(0,0,0,0)
, useLabel(CT_v912)
,	/* FN_LAMBDA877: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v912: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA877: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA877))
, bytes2word(0,0,0,0)
, useLabel(CT_v913)
,	/* FN_LAMBDA876: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v913: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA876: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA876))
, bytes2word(0,0,0,0)
, useLabel(CT_v914)
,	/* FN_LAMBDA875: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v914: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA875: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA875))
, bytes2word(0,0,0,0)
, useLabel(CT_v915)
,	/* FN_LAMBDA874: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v915: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA874: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA874))
, bytes2word(0,0,0,0)
, useLabel(CT_v916)
,	/* FN_LAMBDA873: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v916: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA873: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA873))
, bytes2word(0,0,0,0)
, useLabel(CT_v917)
,	/* FN_LAMBDA872: (byte 0) */
  bytes2word(NEEDHEAP_I32,PUSH_CADR_N1,2,STRING)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, CONSTRW(1,0)
, useLabel(ST_v907)
,	/* CT_v917: (byte 0) */
  HW(0,0)
, 0
,	/* CF_LAMBDA872: (byte 0) */
  VAPTAG(useLabel(FN_LAMBDA872))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v918)
,};
Node FN_Prelude_46Show_46Prelude_4611_46show[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,13,HEAP_ARG)
, bytes2word(12,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v918: (byte 0) */
  HW(2,12)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4611_46show[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46show),12)
, VAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611))
, VAPTAG(useLabel(FN_Prelude_46_95_46show))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v919)
,};
Node FN_Prelude_46Show_46Prelude_4611_46showList[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_I4,HEAP_OFF_N1,13,HEAP_ARG)
, bytes2word(12,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v919: (byte 0) */
  HW(2,12)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4611_46showList[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46showList),12)
, VAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611))
, VAPTAG(useLabel(FN_Prelude_46_95_46showList))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v920)
,};
Node FN_Prelude_46Show_46Prelude_4611[] = {
  bytes2word(NEEDHEAP_P1,58,PUSH_HEAP,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,HEAP_ARG)
, bytes2word(11,PUSH_HEAP,HEAP_CVAL_I4,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_ARG,11)
, bytes2word(PUSH_HEAP,HEAP_CVAL_I5,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_P1,6,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_ARG,11,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_P1,4)
, bytes2word(HEAP_P1,3,HEAP_I2,HEAP_I1)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,4,0)
,	/* CT_v920: (byte 0) */
  HW(4,11)
, 0
,};
Node F0_Prelude_46Show_46Prelude_4611[] = {
  CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611),11)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46showsPrec),2)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46showsType),1)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46showList),1)
, CAPTAG(useLabel(FN_Prelude_46Show_46Prelude_4611_46show),1)
,	/* ST_v907: (byte 0) */
  bytes2word(44,0,0,0)
,};
