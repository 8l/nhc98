#include "newmacros.h"
#include "runtime.h"

#define CT_v728	((void*)startLabel+72)
#define FN_LAMBDA724	((void*)startLabel+120)
#define CT_v729	((void*)startLabel+164)
#define F0_LAMBDA724	((void*)startLabel+172)
#define FN_LAMBDA723	((void*)startLabel+220)
#define v747	((void*)startLabel+236)
#define v737	((void*)startLabel+240)
#define v748	((void*)startLabel+254)
#define v741	((void*)startLabel+258)
#define v749	((void*)startLabel+268)
#define v745	((void*)startLabel+272)
#define v738	((void*)startLabel+306)
#define v734	((void*)startLabel+311)
#define v730	((void*)startLabel+316)
#define CT_v750	((void*)startLabel+324)
#define F0_LAMBDA723	((void*)startLabel+332)
#define FN_LAMBDA722	((void*)startLabel+380)
#define CT_v754	((void*)startLabel+420)
#define F0_LAMBDA722	((void*)startLabel+428)
#define FN_LAMBDA721	((void*)startLabel+476)
#define v772	((void*)startLabel+492)
#define v762	((void*)startLabel+496)
#define v773	((void*)startLabel+510)
#define v766	((void*)startLabel+514)
#define v774	((void*)startLabel+524)
#define v770	((void*)startLabel+528)
#define v763	((void*)startLabel+562)
#define v759	((void*)startLabel+567)
#define v755	((void*)startLabel+572)
#define CT_v775	((void*)startLabel+580)
#define F0_LAMBDA721	((void*)startLabel+588)
#define FN_LAMBDA720	((void*)startLabel+636)
#define CT_v779	((void*)startLabel+676)
#define F0_LAMBDA720	((void*)startLabel+684)
#define FN_LAMBDA719	((void*)startLabel+732)
#define v797	((void*)startLabel+748)
#define v787	((void*)startLabel+752)
#define v798	((void*)startLabel+766)
#define v791	((void*)startLabel+770)
#define v799	((void*)startLabel+780)
#define v795	((void*)startLabel+784)
#define v788	((void*)startLabel+818)
#define v784	((void*)startLabel+823)
#define v780	((void*)startLabel+828)
#define CT_v800	((void*)startLabel+836)
#define F0_LAMBDA719	((void*)startLabel+844)
#define FN_LAMBDA718	((void*)startLabel+892)
#define CT_v804	((void*)startLabel+932)
#define F0_LAMBDA718	((void*)startLabel+940)
#define FN_LAMBDA717	((void*)startLabel+988)
#define v822	((void*)startLabel+1004)
#define v812	((void*)startLabel+1008)
#define v823	((void*)startLabel+1022)
#define v816	((void*)startLabel+1026)
#define v824	((void*)startLabel+1036)
#define v820	((void*)startLabel+1040)
#define v813	((void*)startLabel+1074)
#define v809	((void*)startLabel+1079)
#define v805	((void*)startLabel+1084)
#define CT_v825	((void*)startLabel+1092)
#define F0_LAMBDA717	((void*)startLabel+1100)
#define FN_LAMBDA716	((void*)startLabel+1148)
#define CT_v829	((void*)startLabel+1188)
#define F0_LAMBDA716	((void*)startLabel+1196)
#define FN_LAMBDA715	((void*)startLabel+1244)
#define v847	((void*)startLabel+1260)
#define v837	((void*)startLabel+1264)
#define v848	((void*)startLabel+1278)
#define v841	((void*)startLabel+1282)
#define v849	((void*)startLabel+1292)
#define v845	((void*)startLabel+1296)
#define v838	((void*)startLabel+1330)
#define v834	((void*)startLabel+1335)
#define v830	((void*)startLabel+1340)
#define CT_v850	((void*)startLabel+1348)
#define F0_LAMBDA715	((void*)startLabel+1356)
#define FN_LAMBDA714	((void*)startLabel+1404)
#define CT_v854	((void*)startLabel+1444)
#define F0_LAMBDA714	((void*)startLabel+1452)
#define FN_LAMBDA713	((void*)startLabel+1500)
#define v872	((void*)startLabel+1516)
#define v862	((void*)startLabel+1520)
#define v873	((void*)startLabel+1534)
#define v866	((void*)startLabel+1538)
#define v874	((void*)startLabel+1548)
#define v870	((void*)startLabel+1552)
#define v863	((void*)startLabel+1586)
#define v859	((void*)startLabel+1591)
#define v855	((void*)startLabel+1596)
#define CT_v875	((void*)startLabel+1604)
#define F0_LAMBDA713	((void*)startLabel+1612)
#define FN_LAMBDA712	((void*)startLabel+1660)
#define CT_v879	((void*)startLabel+1700)
#define F0_LAMBDA712	((void*)startLabel+1708)
#define FN_LAMBDA711	((void*)startLabel+1756)
#define v897	((void*)startLabel+1772)
#define v887	((void*)startLabel+1776)
#define v898	((void*)startLabel+1790)
#define v891	((void*)startLabel+1794)
#define v899	((void*)startLabel+1804)
#define v895	((void*)startLabel+1808)
#define v888	((void*)startLabel+1842)
#define v884	((void*)startLabel+1847)
#define v880	((void*)startLabel+1852)
#define CT_v900	((void*)startLabel+1860)
#define F0_LAMBDA711	((void*)startLabel+1868)
#define FN_LAMBDA710	((void*)startLabel+1916)
#define CT_v904	((void*)startLabel+1956)
#define F0_LAMBDA710	((void*)startLabel+1964)
#define FN_LAMBDA709	((void*)startLabel+2012)
#define v922	((void*)startLabel+2028)
#define v912	((void*)startLabel+2032)
#define v923	((void*)startLabel+2046)
#define v916	((void*)startLabel+2050)
#define v924	((void*)startLabel+2060)
#define v920	((void*)startLabel+2064)
#define v913	((void*)startLabel+2098)
#define v909	((void*)startLabel+2103)
#define v905	((void*)startLabel+2108)
#define CT_v925	((void*)startLabel+2116)
#define F0_LAMBDA709	((void*)startLabel+2124)
#define FN_LAMBDA708	((void*)startLabel+2172)
#define CT_v929	((void*)startLabel+2212)
#define F0_LAMBDA708	((void*)startLabel+2220)
#define FN_LAMBDA707	((void*)startLabel+2268)
#define v947	((void*)startLabel+2284)
#define v937	((void*)startLabel+2288)
#define v948	((void*)startLabel+2302)
#define v941	((void*)startLabel+2306)
#define v949	((void*)startLabel+2316)
#define v945	((void*)startLabel+2320)
#define v938	((void*)startLabel+2354)
#define v934	((void*)startLabel+2359)
#define v930	((void*)startLabel+2364)
#define CT_v950	((void*)startLabel+2372)
#define F0_LAMBDA707	((void*)startLabel+2380)
#define FN_LAMBDA706	((void*)startLabel+2428)
#define CT_v954	((void*)startLabel+2468)
#define F0_LAMBDA706	((void*)startLabel+2476)
#define FN_LAMBDA705	((void*)startLabel+2524)
#define v972	((void*)startLabel+2540)
#define v962	((void*)startLabel+2544)
#define v973	((void*)startLabel+2558)
#define v966	((void*)startLabel+2562)
#define v974	((void*)startLabel+2572)
#define v970	((void*)startLabel+2576)
#define v963	((void*)startLabel+2610)
#define v959	((void*)startLabel+2615)
#define v955	((void*)startLabel+2620)
#define CT_v975	((void*)startLabel+2628)
#define F0_LAMBDA705	((void*)startLabel+2636)
#define FN_LAMBDA704	((void*)startLabel+2684)
#define CT_v979	((void*)startLabel+2724)
#define F0_LAMBDA704	((void*)startLabel+2732)
#define FN_LAMBDA703	((void*)startLabel+2780)
#define v997	((void*)startLabel+2796)
#define v987	((void*)startLabel+2800)
#define v998	((void*)startLabel+2814)
#define v991	((void*)startLabel+2818)
#define v999	((void*)startLabel+2828)
#define v995	((void*)startLabel+2832)
#define v988	((void*)startLabel+2863)
#define v984	((void*)startLabel+2868)
#define v980	((void*)startLabel+2873)
#define CT_v1000	((void*)startLabel+2900)
#define F0_LAMBDA703	((void*)startLabel+2908)
#define CT_v1001	((void*)startLabel+2968)
#define CT_v1002	((void*)startLabel+3072)
extern Node FN_Prelude_46readParen[];
extern Node FN_Prelude_46lex[];
extern Node FN_Prelude_46_95foldr[];
extern Node FN_Prelude_46reads[];
extern Node FN_NHC_46Internal_46_95apply1[];
extern Node FN_Prelude_46Read_46Prelude_4610[];
extern Node FN_Prelude_46_95_46readList[];

static Node startLabel[] = {
  bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v728)
,};
Node FN_Prelude_46Read_46Prelude_4610_46readsPrec[] = {
  bytes2word(ZAP_ARG,11,NEEDHEAP_I32,HEAP_CVAL_N1)
, bytes2word(1,HEAP_CVAL_I3,HEAP_ARG_ARG,10)
, bytes2word(9,HEAP_ARG_ARG,8,7)
, bytes2word(HEAP_ARG_ARG,6,5,HEAP_ARG_ARG)
, bytes2word(4,3,HEAP_ARG_ARG,2)
, bytes2word(1,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(13,HEAP_OFF_N1,13,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v728: (byte 0) */
  HW(2,11)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4610_46readsPrec[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4610_46readsPrec),11)
, CAPTAG(useLabel(FN_LAMBDA724),1)
, VAPTAG(useLabel(FN_Prelude_46readParen))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v729)
,	/* FN_LAMBDA724: (byte 0) */
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,HEAP_CVAL_I4,HEAP_ARG,11)
, bytes2word(HEAP_CVAL_N1,1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,15,HEAP_OFF_N1,5)
, bytes2word(HEAP_OFF_N1,4,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,0,0)
,	/* CT_v729: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA724: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA724),11)
, CAPTAG(useLabel(FN_LAMBDA723),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v750)
,	/* FN_LAMBDA723: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v747: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v737: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(40),BOT(40),TOP(10),BOT(10))
,	/* v748: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v741: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v749: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v745: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v738: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v734: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v730: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v750: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA723: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA723),12)
, CAPTAG(useLabel(FN_LAMBDA722),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v754)
,	/* FN_LAMBDA722: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v754: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA722: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA722),11)
, CAPTAG(useLabel(FN_LAMBDA721),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v775)
,	/* FN_LAMBDA721: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v772: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v762: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v773: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v766: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v774: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v770: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v763: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v759: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v755: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v775: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA721: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA721),12)
, CAPTAG(useLabel(FN_LAMBDA720),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v779)
,	/* FN_LAMBDA720: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG,1,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,2,3,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v779: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA720: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA720),11)
, CAPTAG(useLabel(FN_LAMBDA719),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v800)
,	/* FN_LAMBDA719: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v797: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v787: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v798: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v791: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v799: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v795: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v788: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v784: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v780: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v800: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA719: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA719),12)
, CAPTAG(useLabel(FN_LAMBDA718),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v804)
,	/* FN_LAMBDA718: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v804: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA718: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA718),11)
, CAPTAG(useLabel(FN_LAMBDA717),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v825)
,	/* FN_LAMBDA717: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v822: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v812: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v823: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v816: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v824: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v820: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v813: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v809: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v805: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v825: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA717: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA717),12)
, CAPTAG(useLabel(FN_LAMBDA716),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v829)
,	/* FN_LAMBDA716: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG)
, bytes2word(3,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(4,5,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v829: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA716: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA716),11)
, CAPTAG(useLabel(FN_LAMBDA715),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v850)
,	/* FN_LAMBDA715: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v847: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v837: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v848: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v841: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v849: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v845: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v838: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v834: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v830: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v850: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA715: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA715),12)
, CAPTAG(useLabel(FN_LAMBDA714),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v854)
,	/* FN_LAMBDA714: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_P1,0)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v854: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA714: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA714),11)
, CAPTAG(useLabel(FN_LAMBDA713),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v875)
,	/* FN_LAMBDA713: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v872: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v862: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v873: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v866: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v874: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v870: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v863: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v859: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v855: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v875: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA713: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA713),12)
, CAPTAG(useLabel(FN_LAMBDA712),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v879)
,	/* FN_LAMBDA712: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG,5)
, bytes2word(HEAP_P1,0,HEAP_ARG_ARG,6)
, bytes2word(7,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v879: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA712: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA712),11)
, CAPTAG(useLabel(FN_LAMBDA711),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v900)
,	/* FN_LAMBDA711: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v897: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v887: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v898: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v891: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v899: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v895: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v888: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v884: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v880: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v900: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA711: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA711),12)
, CAPTAG(useLabel(FN_LAMBDA710),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v904)
,	/* FN_LAMBDA710: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_P1,0,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v904: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA710: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA710),11)
, CAPTAG(useLabel(FN_LAMBDA709),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v925)
,	/* FN_LAMBDA709: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v922: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v912: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v923: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v916: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v924: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v920: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v913: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v909: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v905: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v925: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA709: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA709),12)
, CAPTAG(useLabel(FN_LAMBDA708),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v929)
,	/* FN_LAMBDA708: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG,7,HEAP_P1)
, bytes2word(0,HEAP_ARG_ARG,8,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v929: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA708: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA708),11)
, CAPTAG(useLabel(FN_LAMBDA707),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v950)
,	/* FN_LAMBDA707: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v947: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v937: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v948: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v941: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v949: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v945: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v938: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v934: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v930: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v950: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA707: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA707),12)
, CAPTAG(useLabel(FN_LAMBDA706),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v954)
,	/* FN_LAMBDA706: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_P1,0,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v954: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA706: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA706),11)
, CAPTAG(useLabel(FN_LAMBDA705),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v975)
,	/* FN_LAMBDA705: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v972: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v962: (byte 4) */
  bytes2word(POP_I1,JUMP,73,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(44),BOT(44),TOP(10),BOT(10))
,	/* v973: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v966: (byte 2) */
  bytes2word(50,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v974: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v970: (byte 4) */
  bytes2word(POP_I1,JUMP,36,0)
, bytes2word(POP_I1,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG,9)
, bytes2word(HEAP_CVAL_I4,HEAP_ARG,10,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,3,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_P1,6,HEAP_OFF_N1)
, bytes2word(16,HEAP_OFF_N1,5,HEAP_ARG)
,	/* v963: (byte 2) */
  bytes2word(12,RETURN_EVAL,POP_P1,2)
,	/* v959: (byte 3) */
  bytes2word(JUMP,2,0,POP_P1)
,	/* v955: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(PUSH_ARG,12,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v975: (byte 0) */
  HW(4,12)
, 0
,	/* F0_LAMBDA705: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA705),12)
, CAPTAG(useLabel(FN_LAMBDA704),2)
, VAPTAG(useLabel(FN_Prelude_46reads))
, VAPTAG(useLabel(FN_NHC_46Internal_46_95apply1))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(11,0,10,1)
, bytes2word(9,2,8,3)
, bytes2word(7,4,6,5)
, bytes2word(5,6,4,7)
, bytes2word(3,8,2,9)
, bytes2word(1,10,0,11)
, useLabel(CT_v979)
,	/* FN_LAMBDA704: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,10,EVAL)
, bytes2word(NEEDHEAP_I32,UNPACK,2,HEAP_CVAL_I3)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG,9,HEAP_P1,0)
, bytes2word(HEAP_CVAL_I4,HEAP_I1,PUSH_HEAP,HEAP_CVAL_I5)
, bytes2word(HEAP_OFF_N1,14,HEAP_OFF_N1,4)
, bytes2word(HEAP_ARG,11,RETURN_EVAL,ENDCODE)
, bytes2word(0,0,0,0)
,	/* CT_v979: (byte 0) */
  HW(3,11)
, 0
,	/* F0_LAMBDA704: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA704),11)
, CAPTAG(useLabel(FN_LAMBDA703),2)
, VAPTAG(useLabel(FN_Prelude_46lex))
, VAPTAG(useLabel(FN_Prelude_46_95foldr))
, bytes2word(0,0,12,0)
, bytes2word(11,1,10,2)
, bytes2word(9,3,8,4)
, bytes2word(7,5,6,6)
, bytes2word(5,7,4,8)
, bytes2word(3,9,2,10)
, bytes2word(1,11,0,12)
, useLabel(CT_v1000)
,	/* FN_LAMBDA703: (byte 0) */
  bytes2word(NEEDSTACK_I16,PUSH_ZAP_ARG,11,EVAL)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,TABLESWITCH,2,NOP)
,	/* v997: (byte 4) */
  bytes2word(TOP(4),BOT(4),TOP(8),BOT(8))
,	/* v987: (byte 4) */
  bytes2word(POP_I1,JUMP,70,0)
, bytes2word(UNPACK,2,PUSH_P1,0)
, bytes2word(EVAL,LOOKUPSWITCH,1,NOP)
, bytes2word(TOP(41),BOT(41),TOP(10),BOT(10))
,	/* v998: (byte 2) */
  bytes2word(TOP(6),BOT(6),POP_I1,JUMP)
,	/* v991: (byte 2) */
  bytes2word(47,0,POP_I1,PUSH_I1)
, bytes2word(EVAL,NEEDHEAP_I32,TABLESWITCH,2)
,	/* v999: (byte 4) */
  bytes2word(TOP(8),BOT(8),TOP(4),BOT(4))
,	/* v995: (byte 4) */
  bytes2word(POP_I1,JUMP,33,0)
, bytes2word(POP_I1,HEAP_CVAL_N1,1,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,HEAP_CVAL_N1,2)
, bytes2word(HEAP_OFF_N1,12,HEAP_P1,3)
, bytes2word(PUSH_HEAP,HEAP_CVAL_IN3,HEAP_OFF_N1,4)
,	/* v988: (byte 3) */
  bytes2word(HEAP_ARG,12,RETURN,POP_P1)
,	/* v984: (byte 4) */
  bytes2word(2,JUMP,2,0)
, bytes2word(POP_P1,2,JUMP,2)
,	/* v980: (byte 1) */
  bytes2word(0,PUSH_ARG,12,RETURN_EVAL)
, bytes2word(ENDCODE,0,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(1,2,0)
, CONSTR(0,2,0)
, CONSTR(0,10,0)
,	/* CT_v1000: (byte 0) */
  HW(0,12)
, 0
,	/* F0_LAMBDA703: (byte 0) */
  CAPTAG(useLabel(FN_LAMBDA703),12)
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v1001)
,};
Node FN_Prelude_46Read_46Prelude_4610_46readList[] = {
  bytes2word(NEEDHEAP_I32,HEAP_CVAL_I3,HEAP_ARG_ARG,1)
, bytes2word(2,HEAP_ARG_ARG,3,4)
, bytes2word(HEAP_ARG_ARG,5,6,HEAP_ARG_ARG)
, bytes2word(7,8,HEAP_ARG_ARG,9)
, bytes2word(10,PUSH_HEAP,HEAP_CVAL_I4,HEAP_OFF_N1)
, bytes2word(12,RETURN_EVAL,ENDCODE,0)
, bytes2word(0,0,0,0)
,	/* CT_v1001: (byte 0) */
  HW(2,10)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4610_46readList[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4610_46readList),10)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4610))
, VAPTAG(useLabel(FN_Prelude_46_95_46readList))
, bytes2word(0,0,10,0)
, bytes2word(9,1,8,2)
, bytes2word(7,3,6,4)
, bytes2word(5,5,4,6)
, bytes2word(3,7,2,8)
, bytes2word(1,9,0,10)
, useLabel(CT_v1002)
,};
Node FN_Prelude_46Read_46Prelude_4610[] = {
  bytes2word(NEEDHEAP_I32,PUSH_HEAP,HEAP_CVAL_I3,HEAP_ARG_ARG)
, bytes2word(1,2,HEAP_ARG_ARG,3)
, bytes2word(4,HEAP_ARG_ARG,5,6)
, bytes2word(HEAP_ARG_ARG,7,8,HEAP_ARG_ARG)
, bytes2word(9,10,PUSH_HEAP,HEAP_CVAL_I4)
, bytes2word(HEAP_ARG_ARG,1,2,HEAP_ARG_ARG)
, bytes2word(3,4,HEAP_ARG_ARG,5)
, bytes2word(6,HEAP_ARG_ARG,7,8)
, bytes2word(HEAP_ARG_ARG,9,10,PUSH_HEAP)
, bytes2word(HEAP_CVAL_N1,1,HEAP_I2,HEAP_I1)
, bytes2word(RETURN,ENDCODE,0,0)
, bytes2word(0,0,0,0)
, 0
, CONSTR(0,2,0)
,	/* CT_v1002: (byte 0) */
  HW(2,10)
, 0
,};
Node F0_Prelude_46Read_46Prelude_4610[] = {
  CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4610),10)
, CAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4610_46readsPrec),1)
, VAPTAG(useLabel(FN_Prelude_46Read_46Prelude_4610_46readList))
,};
