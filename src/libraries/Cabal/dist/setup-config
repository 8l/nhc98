Saved package config for Cabal-1.7.4 written by Cabal-0 using ghc-6.8
LocalBuildInfo {installDirTemplates = InstallDirs {prefix = "/Users/malcolm/.cabal", bindir = "$prefix/bin", libdir = "$prefix/lib", libsubdir = "$pkgid/$compiler", dynlibdir = "$libdir", libexecdir = "$prefix/libexec", progdir = "$libdir/hugs/programs", includedir = "$libdir/$libsubdir/include", datadir = "$prefix/share", datasubdir = "$pkgid", docdir = "$datadir/doc/$pkgid", mandir = "$datadir/man", htmldir = "$docdir/html", haddockdir = "$htmldir"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [6,8,3], versionTags = []}), compilerExtensions = [(NamedFieldPuns,"-XRecordPuns"),(CPP,"-XCPP"),(PatternGuards,"-XPatternGuards"),(UnicodeSyntax,"-XUnicodeSyntax"),(MagicHash,"-XMagicHash"),(PolymorphicComponents,"-XPolymorphicComponents"),(ExistentialQuantification,"-XExistentialQuantification"),(KindSignatures,"-XKindSignatures"),(PatternSignatures,"-XPatternSignatures"),(EmptyDataDecls,"-XEmptyDataDecls"),(ParallelListComp,"-XParallelListComp"),(ForeignFunctionInterface,"-XForeignFunctionInterface"),(UnliftedFFITypes,"-XUnliftedFFITypes"),(LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(Rank2Types,"-XRank2Types"),(RankNTypes,"-XRankNTypes"),(TypeOperators,"-XTypeOperators"),(RecursiveDo,"-XRecursiveDo"),(Arrows,"-XArrows"),(UnknownExtension "PArr","-XPArr"),(TemplateHaskell,"-XTemplateHaskell"),(Generics,"-XGenerics"),(NoImplicitPrelude,"-XNoImplicitPrelude"),(RecordWildCards,"-XRecordWildCards"),(RecordPuns,"-XRecordPuns"),(DisambiguateRecordFields,"-XDisambiguateRecordFields"),(OverloadedStrings,"-XOverloadedStrings"),(GADTs,"-XGADTs"),(TypeFamilies,"-XTypeFamilies"),(BangPatterns,"-XBangPatterns"),(NoMonomorphismRestriction,"-XNoMonomorphismRestriction"),(NoMonoPatBinds,"-XNoMonoPatBinds"),(RelaxedPolyRec,"-XRelaxedPolyRec"),(ExtendedDefaultRules,"-XExtendedDefaultRules"),(ImplicitParams,"-XImplicitParams"),(ScopedTypeVariables,"-XScopedTypeVariables"),(UnboxedTuples,"-XUnboxedTuples"),(StandaloneDeriving,"-XStandaloneDeriving"),(DeriveDataTypeable,"-XDeriveDataTypeable"),(TypeSynonymInstances,"-XTypeSynonymInstances"),(FlexibleContexts,"-XFlexibleContexts"),(FlexibleInstances,"-XFlexibleInstances"),(ConstrainedClassMethods,"-XConstrainedClassMethods"),(MultiParamTypeClasses,"-XMultiParamTypeClasses"),(FunctionalDependencies,"-XFunctionalDependencies"),(GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(OverlappingInstances,"-XOverlappingInstances"),(UndecidableInstances,"-XUndecidableInstances"),(IncoherentInstances,"-XIncoherentInstances")]}, buildDir = "dist/build", scratchDir = "dist/scratch", libraryConfig = Just (ComponentLocalBuildInfo {componentInstalledPackageDeps = [InstalledPackageId "array-0.1.0.0",InstalledPackageId "base-3.0.2.0",InstalledPackageId "containers-0.1.0.2",InstalledPackageId "directory-1.0.0.1",InstalledPackageId "filepath-1.1.0.0",InstalledPackageId "old-time-1.0.0.0",InstalledPackageId "pretty-1.0.0.0",InstalledPackageId "process-1.0.0.1",InstalledPackageId "unix-2.3.0.1"]}), executableConfigs = [], installedPkgs = InstalledPackageIndex (fromList [(InstalledPackageId "array-0.1.0.0",InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.1.0.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Array"],ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","Diff"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Unboxed"]], hiddenModules = [ModuleName ["Data","Array","IO","Internals"]], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/array-0.1.0.0"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/array-0.1.0.0"], hsLibraries = ["HSarray-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-3.0.2.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/array/array.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/array"]}),(InstalledPackageId "base-3.0.2.0",InstalledPackageInfo {installedPackageId = InstalledPackageId "base-3.0.2.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,2,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"],ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Conc"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Dotnet"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Float"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Prim"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/base-3.0.2.0"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/base-3.0.2.0"], hsLibraries = ["HSbase-3.0.2.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/base-3.0.2.0/include"], includes = ["HsBase.h"], depends = [InstalledPackageId "rts-1.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/base/base.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/base"]}),(InstalledPackageId "containers-0.1.0.2",InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.1.0.2", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,1,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Sequence"],ModuleName ["Data","Set"],ModuleName ["Data","Tree"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/containers-0.1.0.2"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/containers-0.1.0.2"], hsLibraries = ["HScontainers-0.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-3.0.2.0",InstalledPackageId "array-0.1.0.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/containers/containers.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/containers"]}),(InstalledPackageId "directory-1.0.0.1",InstalledPackageInfo {installedPackageId = InstalledPackageId "directory-1.0.0.1", sourcePackageId = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides a library for handling directories.", category = "", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/directory-1.0.0.1"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/directory-1.0.0.1"], hsLibraries = ["HSdirectory-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/directory-1.0.0.1/include"], includes = ["HsDirectory.h"], depends = [InstalledPackageId "base-3.0.2.0",InstalledPackageId "old-time-1.0.0.0",InstalledPackageId "filepath-1.1.0.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/directory/directory.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/directory"]}),(InstalledPackageId "filepath-1.1.0.0",InstalledPackageInfo {installedPackageId = InstalledPackageId "filepath-1.1.0.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/filepath-1.1.0.0"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/filepath-1.1.0.0"], hsLibraries = ["HSfilepath-1.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-3.0.2.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/filepath/filepath.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/filepath"]}),(InstalledPackageId "old-locale-1.0.0.0",InstalledPackageInfo {installedPackageId = InstalledPackageId "old-locale-1.0.0.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides the old locale library.\nFor new code, the new locale library is recommended.", category = "", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/old-locale-1.0.0.0"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/old-locale-1.0.0.0"], hsLibraries = ["HSold-locale-1.0.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-3.0.2.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/old-locale/old-locale.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/old-locale"]}),(InstalledPackageId "old-time-1.0.0.0",InstalledPackageInfo {installedPackageId = InstalledPackageId "old-time-1.0.0.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides the old time library.\nFor new code, the new time library is recommended.", category = "", exposed = True, exposedModules = [ModuleName ["System","Time"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/old-time-1.0.0.0"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/old-time-1.0.0.0"], hsLibraries = ["HSold-time-1.0.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/old-time-1.0.0.0/include"], includes = ["HsTime.h"], depends = [InstalledPackageId "base-3.0.2.0",InstalledPackageId "old-locale-1.0.0.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/old-time/old-time.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/old-time"]}),(InstalledPackageId "pretty-1.0.0.0",InstalledPackageInfo {installedPackageId = InstalledPackageId "pretty-1.0.0.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains a pretty-printing library.", category = "", exposed = True, exposedModules = [ModuleName ["Text","PrettyPrint"],ModuleName ["Text","PrettyPrint","HughesPJ"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/pretty-1.0.0.0"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/pretty-1.0.0.0"], hsLibraries = ["HSpretty-1.0.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-3.0.2.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/pretty/pretty.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/pretty"]}),(InstalledPackageId "process-1.0.0.1",InstalledPackageInfo {installedPackageId = InstalledPackageId "process-1.0.0.1", sourcePackageId = PackageIdentifier {pkgName = PackageName "process", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains libraries for dealing with system processes.", category = "", exposed = True, exposedModules = [ModuleName ["System","Process"],ModuleName ["System","Cmd"],ModuleName ["System","Process","Internals"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/process-1.0.0.1"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/process-1.0.0.1"], hsLibraries = ["HSprocess-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/process-1.0.0.1/include"], includes = ["runProcess.h"], depends = [InstalledPackageId "unix-2.3.0.1",InstalledPackageId "base-3.0.2.0",InstalledPackageId "directory-1.0.0.1",InstalledPackageId "filepath-1.1.0.0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/process/process.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/process"]}),(InstalledPackageId "rts-1.0",InstalledPackageInfo {installedPackageId = InstalledPackageId "rts-1.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], importDirs = [], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3"], hsLibraries = ["HSrts"], extraLibraries = ["m","gmp","dl"], extraGHCiLibraries = [], includeDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","_base_GHCziBase_Izh_static_info","-u","_base_GHCziBase_Czh_static_info","-u","_base_GHCziFloat_Fzh_static_info","-u","_base_GHCziFloat_Dzh_static_info","-u","_base_GHCziPtr_Ptr_static_info","-u","_base_GHCziWord_Wzh_static_info","-u","_base_GHCziInt_I8zh_static_info","-u","_base_GHCziInt_I16zh_static_info","-u","_base_GHCziInt_I32zh_static_info","-u","_base_GHCziInt_I64zh_static_info","-u","_base_GHCziWord_W8zh_static_info","-u","_base_GHCziWord_W16zh_static_info","-u","_base_GHCziWord_W32zh_static_info","-u","_base_GHCziWord_W64zh_static_info","-u","_base_GHCziStable_StablePtr_static_info","-u","_base_GHCziBase_Izh_con_info","-u","_base_GHCziBase_Czh_con_info","-u","_base_GHCziFloat_Fzh_con_info","-u","_base_GHCziFloat_Dzh_con_info","-u","_base_GHCziPtr_Ptr_con_info","-u","_base_GHCziPtr_FunPtr_con_info","-u","_base_GHCziStable_StablePtr_con_info","-u","_base_GHCziBase_False_closure","-u","_base_GHCziBase_True_closure","-u","_base_GHCziPack_unpackCString_closure","-u","_base_GHCziIOBase_stackOverflow_closure","-u","_base_GHCziIOBase_heapOverflow_closure","-u","_base_GHCziIOBase_NonTermination_closure","-u","_base_GHCziIOBase_BlockedOnDeadMVar_closure","-u","_base_GHCziIOBase_BlockedIndefinitely_closure","-u","_base_GHCziIOBase_Deadlock_closure","-u","_base_GHCziIOBase_NestedAtomically_closure","-u","_base_GHCziWeak_runFinalizzerBatch_closure","-u","_base_GHCziConc_ensureIOManagerIsRunning_closure","-Wl,-search_paths_first"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}),(InstalledPackageId "unix-2.3.0.1",InstalledPackageInfo {installedPackageId = InstalledPackageId "unix-2.3.0.1", sourcePackageId = PackageIdentifier {pkgName = PackageName "unix", pkgVersion = Version {versionBranch = [2,3,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package gives you access to the set of operating system\nservices standardised by POSIX 1003.1b (or the IEEE Portable\nOperating System Interface for Computing Environments -\nIEEE Std. 1003.1).\n\nThe package is not supported under Windows (except under Cygwin).", category = "", exposed = True, exposedModules = [ModuleName ["System","Posix"],ModuleName ["System","Posix","DynamicLinker","Module"],ModuleName ["System","Posix","DynamicLinker","Prim"],ModuleName ["System","Posix","Directory"],ModuleName ["System","Posix","DynamicLinker"],ModuleName ["System","Posix","Env"],ModuleName ["System","Posix","Error"],ModuleName ["System","Posix","Files"],ModuleName ["System","Posix","IO"],ModuleName ["System","Posix","Process"],ModuleName ["System","Posix","Process","Internals"],ModuleName ["System","Posix","Resource"],ModuleName ["System","Posix","Temp"],ModuleName ["System","Posix","Terminal"],ModuleName ["System","Posix","Time"],ModuleName ["System","Posix","Unistd"],ModuleName ["System","Posix","User"],ModuleName ["System","Posix","Signals"],ModuleName ["System","Posix","Signals","Exts"],ModuleName ["System","Posix","Semaphore"],ModuleName ["System","Posix","SharedMem"]], hiddenModules = [], importDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/unix-2.3.0.1"], libraryDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/unix-2.3.0.1"], hsLibraries = ["HSunix-2.3.0.1"], extraLibraries = ["dl"], extraGHCiLibraries = [], includeDirs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/lib/ghc-6.8.3/lib/unix-2.3.0.1/include"], includes = ["HsUnix.h","execvpe.h"], depends = [InstalledPackageId "base-3.0.2.0",InstalledPackageId "directory-1.0.0.1"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/unix/unix.haddock"], haddockHTMLs = ["/Library/Frameworks/GHC.framework/Versions/608/usr/share/doc/ghc/libraries/unix"]})]), pkgDescrFile = Just "./Cabal.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "Cabal", pkgVersion = Version {versionBranch = [1,7,4], versionTags = []}}, license = BSD3, licenseFile = "LICENSE", copyright = "2003-2006, Isaac Jones\n2005-2009, Duncan Coutts", maintainer = "cabal-devel@haskell.org", author = "Isaac Jones <ijones@syntaxpolice.org>\nDuncan Coutts <duncan@haskell.org>", stability = "", testedWith = [], homepage = "http://www.haskell.org/cabal/", pkgUrl = "", bugReports = "http://hackage.haskell.org/trac/hackage/", sourceRepos = [SourceRepo {repoKind = RepoHead, repoType = Just Darcs, repoLocation = Just "http://darcs.haskell.org/cabal/", repoModule = Nothing, repoBranch = Nothing, repoTag = Nothing, repoSubdir = Nothing}], synopsis = "A framework for packaging Haskell software", description = "The Haskell Common Architecture for Building Applications and\nLibraries: a framework defining a common interface for authors to more\neasily build their Haskell applications in a portable way.\n\nThe Haskell Cabal is part of a larger infrastructure for distributing,\norganizing, and cataloging Haskell libraries and tools.", category = "Distribution", customFieldsPD = [], buildDepends = [Dependency (PackageName "array") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (EarlierVersion (Version {versionBranch = [4], versionTags = []})) (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [3], versionTags = []})) (LaterVersion (Version {versionBranch = [3], versionTags = []}))) (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))))) (ThisVersion (Version {versionBranch = [3,0,2,0], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1,0,2], versionTags = []}))),Dependency (PackageName "directory") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,1], versionTags = []}))),Dependency (PackageName "filepath") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))),Dependency (PackageName "old-time") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,0], versionTags = []}))),Dependency (PackageName "pretty") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,0], versionTags = []}))),Dependency (PackageName "process") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,1], versionTags = []}))),Dependency (PackageName "unix") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,2], versionTags = []})) (LaterVersion (Version {versionBranch = [2,2], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,4], versionTags = []}))) (ThisVersion (Version {versionBranch = [2,3,0,1], versionTags = []})))], descCabalVersion = AnyVersion, buildType = Just Custom, library = Just (Library {exposedModules = [ModuleName ["Distribution","Compiler"],ModuleName ["Distribution","InstalledPackageInfo"],ModuleName ["Distribution","License"],ModuleName ["Distribution","Make"],ModuleName ["Distribution","ModuleName"],ModuleName ["Distribution","Package"],ModuleName ["Distribution","PackageDescription"],ModuleName ["Distribution","PackageDescription","Configuration"],ModuleName ["Distribution","PackageDescription","Parse"],ModuleName ["Distribution","PackageDescription","Check"],ModuleName ["Distribution","ParseUtils"],ModuleName ["Distribution","ReadE"],ModuleName ["Distribution","Simple"],ModuleName ["Distribution","Simple","Build"],ModuleName ["Distribution","Simple","Build","Macros"],ModuleName ["Distribution","Simple","Build","PathsModule"],ModuleName ["Distribution","Simple","BuildPaths"],ModuleName ["Distribution","Simple","Command"],ModuleName ["Distribution","Simple","Compiler"],ModuleName ["Distribution","Simple","Configure"],ModuleName ["Distribution","Simple","GHC"],ModuleName ["Distribution","Simple","LHC"],ModuleName ["Distribution","Simple","Haddock"],ModuleName ["Distribution","Simple","Hugs"],ModuleName ["Distribution","Simple","Install"],ModuleName ["Distribution","Simple","InstallDirs"],ModuleName ["Distribution","Simple","JHC"],ModuleName ["Distribution","Simple","LocalBuildInfo"],ModuleName ["Distribution","Simple","NHC"],ModuleName ["Distribution","Simple","PackageIndex"],ModuleName ["Distribution","Simple","PreProcess"],ModuleName ["Distribution","Simple","PreProcess","Unlit"],ModuleName ["Distribution","Simple","Program"],ModuleName ["Distribution","Simple","Program","Ar"],ModuleName ["Distribution","Simple","Program","Builtin"],ModuleName ["Distribution","Simple","Program","Db"],ModuleName ["Distribution","Simple","Program","HcPkg"],ModuleName ["Distribution","Simple","Program","Ld"],ModuleName ["Distribution","Simple","Program","Run"],ModuleName ["Distribution","Simple","Program","Script"],ModuleName ["Distribution","Simple","Program","Types"],ModuleName ["Distribution","Simple","Register"],ModuleName ["Distribution","Simple","Setup"],ModuleName ["Distribution","Simple","SrcDist"],ModuleName ["Distribution","Simple","UserHooks"],ModuleName ["Distribution","Simple","Utils"],ModuleName ["Distribution","System"],ModuleName ["Distribution","Text"],ModuleName ["Distribution","Verbosity"],ModuleName ["Distribution","Version"],ModuleName ["Distribution","Compat","ReadP"],ModuleName ["Language","Haskell","Extension"]], libExposed = True, libBuildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = ["-DCABAL_VERSION=1,7,3"], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["."], otherModules = [ModuleName ["Distribution","GetOpt"],ModuleName ["Distribution","Compat","Exception"],ModuleName ["Distribution","Compat","CopyFile"],ModuleName ["Distribution","Compat","TempFile"],ModuleName ["Distribution","Simple","GHC","IPI641"],ModuleName ["Distribution","Simple","GHC","IPI642"]], extensions = [CPP], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [(GHC,["-fwarn-tabs"]),(GHC,["-Wall"]),(NHC,["-K4M"])], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "array") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (EarlierVersion (Version {versionBranch = [4], versionTags = []})) (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [3], versionTags = []})) (LaterVersion (Version {versionBranch = [3], versionTags = []}))) (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))))) (ThisVersion (Version {versionBranch = [3,0,2,0], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1,0,2], versionTags = []}))),Dependency (PackageName "directory") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,1], versionTags = []}))),Dependency (PackageName "filepath") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))),Dependency (PackageName "old-time") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,0], versionTags = []}))),Dependency (PackageName "pretty") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,0], versionTags = []}))),Dependency (PackageName "process") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1], versionTags = []})) (LaterVersion (Version {versionBranch = [1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0,0,1], versionTags = []}))),Dependency (PackageName "unix") (IntersectVersionRanges (UnionVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,2], versionTags = []})) (LaterVersion (Version {versionBranch = [2,2], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,4], versionTags = []}))) (ThisVersion (Version {versionBranch = [2,3,0,1], versionTags = []})))]}}), executables = [], dataFiles = [], dataDir = "", extraSrcFiles = ["README","changelog"], extraTmpFiles = []}, withPrograms = [("alex",ConfiguredProgram {programId = "alex", programVersion = Just (Version {versionBranch = [2,2], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/alex"}}),("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ar"}}),("cpphs",ConfiguredProgram {programId = "cpphs", programVersion = Just (Version {versionBranch = [1,7], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/sw/bin/cpphs"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [4,0,1], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/gcc"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [6,8,3], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ghc"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [6,8,3], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ghc-pkg"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [0,9], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/haddock"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,17], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/happy"}}),("hmake",ConfiguredProgram {programId = "hmake", programVersion = Just (Version {versionBranch = [3,13], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/sw/bin/hmake"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,66], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/hsc2hs"}}),("hscolour",ConfiguredProgram {programId = "hscolour", programVersion = Just (Version {versionBranch = [1,13], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/sw/bin/HsColour"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programArgs = ["-x"], programLocation = FoundOnSystem {locationPath = "/usr/bin/ld"}}),("nhc98",ConfiguredProgram {programId = "nhc98", programVersion = Just (Version {versionBranch = [1,21], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/sw/bin/nhc98"}}),("pkg-config",ConfiguredProgram {programId = "pkg-config", programVersion = Just (Version {versionBranch = [0,23], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/opt/local/bin/pkg-config"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ranlib"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/strip"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/tar"}})], withPackageDB = [GlobalPackageDB,UserPackageDB], withVanillaLib = True, withProfLib = False, withSharedLib = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = True, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}